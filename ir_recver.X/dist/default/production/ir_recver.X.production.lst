

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat May 02 00:15:41 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.10
    36                           ; Generated 31/07/2019 GMT
    37                           ; 
    38                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F1827 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011D                     	;# 
   129  011E                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020C                     	;# 
   153  020D                     	;# 
   154  0211                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0212                     	;# 
   158  0213                     	;# 
   159  0213                     	;# 
   160  0214                     	;# 
   161  0214                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  0219                     	;# 
   170  021A                     	;# 
   171  021B                     	;# 
   172  021C                     	;# 
   173  021D                     	;# 
   174  021E                     	;# 
   175  021F                     	;# 
   176  0291                     	;# 
   177  0291                     	;# 
   178  0292                     	;# 
   179  0293                     	;# 
   180  0294                     	;# 
   181  0295                     	;# 
   182  0295                     	;# 
   183  0296                     	;# 
   184  0298                     	;# 
   185  0298                     	;# 
   186  0299                     	;# 
   187  029A                     	;# 
   188  029B                     	;# 
   189  029C                     	;# 
   190  029C                     	;# 
   191  029D                     	;# 
   192  029E                     	;# 
   193  029E                     	;# 
   194  0311                     	;# 
   195  0311                     	;# 
   196  0312                     	;# 
   197  0313                     	;# 
   198  0318                     	;# 
   199  0318                     	;# 
   200  0319                     	;# 
   201  031A                     	;# 
   202  0394                     	;# 
   203  0395                     	;# 
   204  0396                     	;# 
   205  039A                     	;# 
   206  039C                     	;# 
   207  039D                     	;# 
   208  039E                     	;# 
   209  039F                     	;# 
   210  0415                     	;# 
   211  0416                     	;# 
   212  0417                     	;# 
   213  041C                     	;# 
   214  041D                     	;# 
   215  041E                     	;# 
   216  0FE4                     	;# 
   217  0FE5                     	;# 
   218  0FE6                     	;# 
   219  0FE7                     	;# 
   220  0FE8                     	;# 
   221  0FE9                     	;# 
   222  0FEA                     	;# 
   223  0FEB                     	;# 
   224  0FED                     	;# 
   225  0FEE                     	;# 
   226  0FEF                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  0111                     	;# 
   276  0112                     	;# 
   277  0113                     	;# 
   278  0114                     	;# 
   279  0115                     	;# 
   280  0116                     	;# 
   281  0117                     	;# 
   282  0118                     	;# 
   283  0119                     	;# 
   284  011A                     	;# 
   285  011B                     	;# 
   286  011D                     	;# 
   287  011E                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0191                     	;# 
   291  0191                     	;# 
   292  0192                     	;# 
   293  0193                     	;# 
   294  0193                     	;# 
   295  0193                     	;# 
   296  0194                     	;# 
   297  0195                     	;# 
   298  0196                     	;# 
   299  0199                     	;# 
   300  019A                     	;# 
   301  019B                     	;# 
   302  019B                     	;# 
   303  019B                     	;# 
   304  019B                     	;# 
   305  019C                     	;# 
   306  019C                     	;# 
   307  019D                     	;# 
   308  019E                     	;# 
   309  019F                     	;# 
   310  020C                     	;# 
   311  020D                     	;# 
   312  0211                     	;# 
   313  0211                     	;# 
   314  0212                     	;# 
   315  0212                     	;# 
   316  0213                     	;# 
   317  0213                     	;# 
   318  0214                     	;# 
   319  0214                     	;# 
   320  0215                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0216                     	;# 
   324  0216                     	;# 
   325  0217                     	;# 
   326  0217                     	;# 
   327  0219                     	;# 
   328  021A                     	;# 
   329  021B                     	;# 
   330  021C                     	;# 
   331  021D                     	;# 
   332  021E                     	;# 
   333  021F                     	;# 
   334  0291                     	;# 
   335  0291                     	;# 
   336  0292                     	;# 
   337  0293                     	;# 
   338  0294                     	;# 
   339  0295                     	;# 
   340  0295                     	;# 
   341  0296                     	;# 
   342  0298                     	;# 
   343  0298                     	;# 
   344  0299                     	;# 
   345  029A                     	;# 
   346  029B                     	;# 
   347  029C                     	;# 
   348  029C                     	;# 
   349  029D                     	;# 
   350  029E                     	;# 
   351  029E                     	;# 
   352  0311                     	;# 
   353  0311                     	;# 
   354  0312                     	;# 
   355  0313                     	;# 
   356  0318                     	;# 
   357  0318                     	;# 
   358  0319                     	;# 
   359  031A                     	;# 
   360  0394                     	;# 
   361  0395                     	;# 
   362  0396                     	;# 
   363  039A                     	;# 
   364  039C                     	;# 
   365  039D                     	;# 
   366  039E                     	;# 
   367  039F                     	;# 
   368  0415                     	;# 
   369  0416                     	;# 
   370  0417                     	;# 
   371  041C                     	;# 
   372  041D                     	;# 
   373  041E                     	;# 
   374  0FE4                     	;# 
   375  0FE5                     	;# 
   376  0FE6                     	;# 
   377  0FE7                     	;# 
   378  0FE8                     	;# 
   379  0FE9                     	;# 
   380  0FEA                     	;# 
   381  0FEB                     	;# 
   382  0FED                     	;# 
   383  0FEE                     	;# 
   384  0FEF                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  008C                     	;# 
   415  008D                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0094                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  010C                     	;# 
   432  010D                     	;# 
   433  0111                     	;# 
   434  0112                     	;# 
   435  0113                     	;# 
   436  0114                     	;# 
   437  0115                     	;# 
   438  0116                     	;# 
   439  0117                     	;# 
   440  0118                     	;# 
   441  0119                     	;# 
   442  011A                     	;# 
   443  011B                     	;# 
   444  011D                     	;# 
   445  011E                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  0191                     	;# 
   449  0191                     	;# 
   450  0192                     	;# 
   451  0193                     	;# 
   452  0193                     	;# 
   453  0193                     	;# 
   454  0194                     	;# 
   455  0195                     	;# 
   456  0196                     	;# 
   457  0199                     	;# 
   458  019A                     	;# 
   459  019B                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019C                     	;# 
   464  019C                     	;# 
   465  019D                     	;# 
   466  019E                     	;# 
   467  019F                     	;# 
   468  020C                     	;# 
   469  020D                     	;# 
   470  0211                     	;# 
   471  0211                     	;# 
   472  0212                     	;# 
   473  0212                     	;# 
   474  0213                     	;# 
   475  0213                     	;# 
   476  0214                     	;# 
   477  0214                     	;# 
   478  0215                     	;# 
   479  0215                     	;# 
   480  0215                     	;# 
   481  0216                     	;# 
   482  0216                     	;# 
   483  0217                     	;# 
   484  0217                     	;# 
   485  0219                     	;# 
   486  021A                     	;# 
   487  021B                     	;# 
   488  021C                     	;# 
   489  021D                     	;# 
   490  021E                     	;# 
   491  021F                     	;# 
   492  0291                     	;# 
   493  0291                     	;# 
   494  0292                     	;# 
   495  0293                     	;# 
   496  0294                     	;# 
   497  0295                     	;# 
   498  0295                     	;# 
   499  0296                     	;# 
   500  0298                     	;# 
   501  0298                     	;# 
   502  0299                     	;# 
   503  029A                     	;# 
   504  029B                     	;# 
   505  029C                     	;# 
   506  029C                     	;# 
   507  029D                     	;# 
   508  029E                     	;# 
   509  029E                     	;# 
   510  0311                     	;# 
   511  0311                     	;# 
   512  0312                     	;# 
   513  0313                     	;# 
   514  0318                     	;# 
   515  0318                     	;# 
   516  0319                     	;# 
   517  031A                     	;# 
   518  0394                     	;# 
   519  0395                     	;# 
   520  0396                     	;# 
   521  039A                     	;# 
   522  039C                     	;# 
   523  039D                     	;# 
   524  039E                     	;# 
   525  039F                     	;# 
   526  0415                     	;# 
   527  0416                     	;# 
   528  0417                     	;# 
   529  041C                     	;# 
   530  041D                     	;# 
   531  041E                     	;# 
   532  0FE4                     	;# 
   533  0FE5                     	;# 
   534  0FE6                     	;# 
   535  0FE7                     	;# 
   536  0FE8                     	;# 
   537  0FE9                     	;# 
   538  0FEA                     	;# 
   539  0FEB                     	;# 
   540  0FED                     	;# 
   541  0FEE                     	;# 
   542  0FEF                     	;# 
   543  0000                     	;# 
   544  0001                     	;# 
   545  0002                     	;# 
   546  0003                     	;# 
   547  0004                     	;# 
   548  0005                     	;# 
   549  0006                     	;# 
   550  0007                     	;# 
   551  0008                     	;# 
   552  0009                     	;# 
   553  000A                     	;# 
   554  000B                     	;# 
   555  000C                     	;# 
   556  000D                     	;# 
   557  0011                     	;# 
   558  0012                     	;# 
   559  0013                     	;# 
   560  0014                     	;# 
   561  0015                     	;# 
   562  0016                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001B                     	;# 
   569  001C                     	;# 
   570  001E                     	;# 
   571  001F                     	;# 
   572  008C                     	;# 
   573  008D                     	;# 
   574  0091                     	;# 
   575  0092                     	;# 
   576  0093                     	;# 
   577  0094                     	;# 
   578  0095                     	;# 
   579  0096                     	;# 
   580  0097                     	;# 
   581  0098                     	;# 
   582  0099                     	;# 
   583  009A                     	;# 
   584  009B                     	;# 
   585  009B                     	;# 
   586  009C                     	;# 
   587  009D                     	;# 
   588  009E                     	;# 
   589  010C                     	;# 
   590  010D                     	;# 
   591  0111                     	;# 
   592  0112                     	;# 
   593  0113                     	;# 
   594  0114                     	;# 
   595  0115                     	;# 
   596  0116                     	;# 
   597  0117                     	;# 
   598  0118                     	;# 
   599  0119                     	;# 
   600  011A                     	;# 
   601  011B                     	;# 
   602  011D                     	;# 
   603  011E                     	;# 
   604  018C                     	;# 
   605  018D                     	;# 
   606  0191                     	;# 
   607  0191                     	;# 
   608  0192                     	;# 
   609  0193                     	;# 
   610  0193                     	;# 
   611  0193                     	;# 
   612  0194                     	;# 
   613  0195                     	;# 
   614  0196                     	;# 
   615  0199                     	;# 
   616  019A                     	;# 
   617  019B                     	;# 
   618  019B                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019C                     	;# 
   622  019C                     	;# 
   623  019D                     	;# 
   624  019E                     	;# 
   625  019F                     	;# 
   626  020C                     	;# 
   627  020D                     	;# 
   628  0211                     	;# 
   629  0211                     	;# 
   630  0212                     	;# 
   631  0212                     	;# 
   632  0213                     	;# 
   633  0213                     	;# 
   634  0214                     	;# 
   635  0214                     	;# 
   636  0215                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0216                     	;# 
   640  0216                     	;# 
   641  0217                     	;# 
   642  0217                     	;# 
   643  0219                     	;# 
   644  021A                     	;# 
   645  021B                     	;# 
   646  021C                     	;# 
   647  021D                     	;# 
   648  021E                     	;# 
   649  021F                     	;# 
   650  0291                     	;# 
   651  0291                     	;# 
   652  0292                     	;# 
   653  0293                     	;# 
   654  0294                     	;# 
   655  0295                     	;# 
   656  0295                     	;# 
   657  0296                     	;# 
   658  0298                     	;# 
   659  0298                     	;# 
   660  0299                     	;# 
   661  029A                     	;# 
   662  029B                     	;# 
   663  029C                     	;# 
   664  029C                     	;# 
   665  029D                     	;# 
   666  029E                     	;# 
   667  029E                     	;# 
   668  0311                     	;# 
   669  0311                     	;# 
   670  0312                     	;# 
   671  0313                     	;# 
   672  0318                     	;# 
   673  0318                     	;# 
   674  0319                     	;# 
   675  031A                     	;# 
   676  0394                     	;# 
   677  0395                     	;# 
   678  0396                     	;# 
   679  039A                     	;# 
   680  039C                     	;# 
   681  039D                     	;# 
   682  039E                     	;# 
   683  039F                     	;# 
   684  0415                     	;# 
   685  0416                     	;# 
   686  0417                     	;# 
   687  041C                     	;# 
   688  041D                     	;# 
   689  041E                     	;# 
   690  0FE4                     	;# 
   691  0FE5                     	;# 
   692  0FE6                     	;# 
   693  0FE7                     	;# 
   694  0FE8                     	;# 
   695  0FE9                     	;# 
   696  0FEA                     	;# 
   697  0FEB                     	;# 
   698  0FED                     	;# 
   699  0FEE                     	;# 
   700  0FEF                     	;# 
   701  0000                     	;# 
   702  0001                     	;# 
   703  0002                     	;# 
   704  0003                     	;# 
   705  0004                     	;# 
   706  0005                     	;# 
   707  0006                     	;# 
   708  0007                     	;# 
   709  0008                     	;# 
   710  0009                     	;# 
   711  000A                     	;# 
   712  000B                     	;# 
   713  000C                     	;# 
   714  000D                     	;# 
   715  0011                     	;# 
   716  0012                     	;# 
   717  0013                     	;# 
   718  0014                     	;# 
   719  0015                     	;# 
   720  0016                     	;# 
   721  0016                     	;# 
   722  0017                     	;# 
   723  0018                     	;# 
   724  0019                     	;# 
   725  001A                     	;# 
   726  001B                     	;# 
   727  001C                     	;# 
   728  001E                     	;# 
   729  001F                     	;# 
   730  008C                     	;# 
   731  008D                     	;# 
   732  0091                     	;# 
   733  0092                     	;# 
   734  0093                     	;# 
   735  0094                     	;# 
   736  0095                     	;# 
   737  0096                     	;# 
   738  0097                     	;# 
   739  0098                     	;# 
   740  0099                     	;# 
   741  009A                     	;# 
   742  009B                     	;# 
   743  009B                     	;# 
   744  009C                     	;# 
   745  009D                     	;# 
   746  009E                     	;# 
   747  010C                     	;# 
   748  010D                     	;# 
   749  0111                     	;# 
   750  0112                     	;# 
   751  0113                     	;# 
   752  0114                     	;# 
   753  0115                     	;# 
   754  0116                     	;# 
   755  0117                     	;# 
   756  0118                     	;# 
   757  0119                     	;# 
   758  011A                     	;# 
   759  011B                     	;# 
   760  011D                     	;# 
   761  011E                     	;# 
   762  018C                     	;# 
   763  018D                     	;# 
   764  0191                     	;# 
   765  0191                     	;# 
   766  0192                     	;# 
   767  0193                     	;# 
   768  0193                     	;# 
   769  0193                     	;# 
   770  0194                     	;# 
   771  0195                     	;# 
   772  0196                     	;# 
   773  0199                     	;# 
   774  019A                     	;# 
   775  019B                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019B                     	;# 
   779  019C                     	;# 
   780  019C                     	;# 
   781  019D                     	;# 
   782  019E                     	;# 
   783  019F                     	;# 
   784  020C                     	;# 
   785  020D                     	;# 
   786  0211                     	;# 
   787  0211                     	;# 
   788  0212                     	;# 
   789  0212                     	;# 
   790  0213                     	;# 
   791  0213                     	;# 
   792  0214                     	;# 
   793  0214                     	;# 
   794  0215                     	;# 
   795  0215                     	;# 
   796  0215                     	;# 
   797  0216                     	;# 
   798  0216                     	;# 
   799  0217                     	;# 
   800  0217                     	;# 
   801  0219                     	;# 
   802  021A                     	;# 
   803  021B                     	;# 
   804  021C                     	;# 
   805  021D                     	;# 
   806  021E                     	;# 
   807  021F                     	;# 
   808  0291                     	;# 
   809  0291                     	;# 
   810  0292                     	;# 
   811  0293                     	;# 
   812  0294                     	;# 
   813  0295                     	;# 
   814  0295                     	;# 
   815  0296                     	;# 
   816  0298                     	;# 
   817  0298                     	;# 
   818  0299                     	;# 
   819  029A                     	;# 
   820  029B                     	;# 
   821  029C                     	;# 
   822  029C                     	;# 
   823  029D                     	;# 
   824  029E                     	;# 
   825  029E                     	;# 
   826  0311                     	;# 
   827  0311                     	;# 
   828  0312                     	;# 
   829  0313                     	;# 
   830  0318                     	;# 
   831  0318                     	;# 
   832  0319                     	;# 
   833  031A                     	;# 
   834  0394                     	;# 
   835  0395                     	;# 
   836  0396                     	;# 
   837  039A                     	;# 
   838  039C                     	;# 
   839  039D                     	;# 
   840  039E                     	;# 
   841  039F                     	;# 
   842  0415                     	;# 
   843  0416                     	;# 
   844  0417                     	;# 
   845  041C                     	;# 
   846  041D                     	;# 
   847  041E                     	;# 
   848  0FE4                     	;# 
   849  0FE5                     	;# 
   850  0FE6                     	;# 
   851  0FE7                     	;# 
   852  0FE8                     	;# 
   853  0FE9                     	;# 
   854  0FEA                     	;# 
   855  0FEB                     	;# 
   856  0FED                     	;# 
   857  0FEE                     	;# 
   858  0FEF                     	;# 
   859                           
   860 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   861  0000                     
   862 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   863  0000                     
   864 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   865  0011                     _PIR1bits	set	17
   866  000C                     _PORTAbits	set	12
   867  0095                     _OPTION_REGbits	set	149
   868  008D                     _TRISB	set	141
   869  008C                     _TRISA	set	140
   870  0097                     _WDTCON	set	151
   871  0098                     _OSCTUNE	set	152
   872  0099                     _OSCCON	set	153
   873  04D6                     _PLLR	set	1238
   874  011E                     _APFCON1	set	286
   875  011D                     _APFCON0	set	285
   876  010D                     _LATB	set	269
   877  010C                     _LATA	set	268
   878  0116                     _BORCON	set	278
   879  010C                     _LATAbits	set	268
   880  018C                     _ANSELA	set	396
   881  018D                     _ANSELB	set	397
   882  019A                     _TXREG	set	410
   883  0199                     _RCREG	set	409
   884  019D                     _RCSTAbits	set	413
   885  019E                     _TXSTAbits	set	414
   886  019C                     _SPBRGH	set	412
   887  019B                     _SPBRGL	set	411
   888  019E                     _TXSTA	set	414
   889  019D                     _RCSTA	set	413
   890  019F                     _BAUDCON	set	415
   891  020C                     _WPUA	set	524
   892  020D                     _WPUB	set	525
   893                           
   894                           	psect	stringtext1
   895  0800                     __pstringtext1:	
   896  0800                     STR_1:	
   897  0800  3469               	retlw	105	;'i'
   898  0801  346E               	retlw	110	;'n'
   899  0802  3469               	retlw	105	;'i'
   900  0803  3474               	retlw	116	;'t'
   901  0804  3420               	retlw	32	;' '
   902  0805  3441               	retlw	65	;'A'
   903  0806  3445               	retlw	69	;'E'
   904  0807  3448               	retlw	72	;'H'
   905  0808  3441               	retlw	65	;'A'
   906  0809  3420               	retlw	32	;' '
   907  080A  3466               	retlw	102	;'f'
   908  080B  346F               	retlw	111	;'o'
   909  080C  3472               	retlw	114	;'r'
   910  080D  346D               	retlw	109	;'m'
   911  080E  3461               	retlw	97	;'a'
   912  080F  3474               	retlw	116	;'t'
   913  0810  3400               	retlw	0
   914                           
   915                           	psect	stringtext2
   916  0811                     __pstringtext2:	
   917  0811                     STR_5:	
   918  0811  3465               	retlw	101	;'e'
   919  0812  346E               	retlw	110	;'n'
   920  0813  3464               	retlw	100	;'d'
   921  0814  3400               	retlw	0
   922                           
   923                           	psect	stringtext3
   924  0815                     __pstringtext3:	
   925  0815                     STR_2:	
   926  0815  340D               	retlw	13
   927  0816  340A               	retlw	10
   928  0817  3400               	retlw	0
   929                           
   930                           	psect	stringtext4
   931  0818                     __pstringtext4:	
   932  0818                     STR_4:	
   933  0818  3465               	retlw	101	;'e'
   934  0819  3400               	retlw	0
   935                           
   936                           	psect	stringtext5
   937  0000                     __pstringtext5:	
   938  0815                     
   939                           ; #config settings
   940  0000                     
   941                           	psect	cinit
   942  07F1                     start_initialization:	
   943  07F1                     __initialization:	
   944                           
   945                           ; Clear objects allocated to BANK0
   946  07F1  0020               	movlb	0	; select bank0
   947  07F2  01EC               	clrf	__pbssBANK0& (0+127)
   948  07F3  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   949  07F4  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   950                           
   951                           ; Clear objects allocated to BANK1
   952  07F5  30A0               	movlw	low __pbssBANK1
   953  07F6  0084               	movwf	4
   954  07F7  3000               	movlw	high __pbssBANK1
   955  07F8  0085               	movwf	5
   956  07F9  302C               	movlw	44
   957  07FA  3185  2592  3187   	fcall	clear_ram0
   958  07FD                     end_of_initialization:	
   959                           ;End of C runtime variable initialization code
   960                           
   961  07FD                     __end_of__initialization:	
   962  07FD  0020               	movlb	0
   963  07FE  3186  2E5D         	ljmp	_main	;jump to C main() function
   964                           
   965                           	psect	bssBANK0
   966  006C                     __pbssBANK0:	
   967  006C                     _nout:	
   968  006C                     	ds	2
   969  006E                     _eusartRxLastError:	
   970  006E                     	ds	1
   971                           
   972                           	psect	bssBANK1
   973  00A0                     __pbssBANK1:	
   974  00A0                     _dbuf:	
   975  00A0                     	ds	32
   976  00C0                     _width:	
   977  00C0                     	ds	2
   978  00C2                     _prec:	
   979  00C2                     	ds	2
   980  00C4                     _flags:	
   981  00C4                     	ds	2
   982  00C6                     _EUSART_ErrorHandler:	
   983  00C6                     	ds	2
   984  00C8                     _EUSART_OverrunErrorHandler:	
   985  00C8                     	ds	2
   986  00CA                     _EUSART_FramingErrorHandler:	
   987  00CA                     	ds	2
   988                           
   989                           	psect	clrtext
   990  0592                     clear_ram0:	
   991                           ;	Called with FSR0 containing the base address, and
   992                           ;	WREG with the size to clear
   993                           
   994  0592  0064               	clrwdt	;clear the watchdog before getting into this loop
   995  0593                     clrloop0:	
   996  0593  0180               	clrf	0	;clear RAM location pointed to by FSR
   997  0594  3101               	addfsr 0,1
   998  0595  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   999  0596  2D93               	goto	clrloop0	;have we reached the end yet?
  1000  0597  3400               	retlw	0	;all done for this memory range, return
  1001                           
  1002                           	psect	cstackCOMMON
  1003  0070                     __pcstackCOMMON:	
  1004  0070                     ?_EUSART_Write:	
  1005  0070                     ??_EUSART_Write:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0070                     ?_SYSTEM_Initialize:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0070                     ?_recv_reader:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0070                     ??_recv_reader:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0070                     ?_bit_find:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0070                     ?_EUSART_SetFramingErrorHandler:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0070                     ?_EUSART_SetOverrunErrorHandler:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0070                     ?_EUSART_SetErrorHandler:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0070                     ?_PIN_MANAGER_Initialize:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0070                     ??_PIN_MANAGER_Initialize:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0070                     ?_OSCILLATOR_Initialize:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0070                     ??_OSCILLATOR_Initialize:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0070                     ?_WDT_Initialize:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0070                     ??_WDT_Initialize:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0070                     ?_putch:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050  0070                     ?_main:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053  0070                     ?_EUSART_Initialize:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056  0070                     EUSART_Write@txData:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1063                           ; 2 bytes @ 0x0
  1064                           
  1065  0070                     EUSART_SetErrorHandler@interruptHandler:	
  1066                           ; 2 bytes @ 0x0
  1067                           
  1068                           
  1069                           ; 2 bytes @ 0x0
  1070  0070                     	ds	1
  1071  0071                     ??_putch:	
  1072  0071                     putch@data:	
  1073                           ; 1 bytes @ 0x1
  1074                           
  1075  0071                     recv_reader@width:	
  1076                           ; 1 bytes @ 0x1
  1077                           
  1078                           
  1079                           ; 2 bytes @ 0x1
  1080  0071                     	ds	1
  1081  0072                     ??_SYSTEM_Initialize:	
  1082  0072                     ??_EUSART_SetFramingErrorHandler:	
  1083                           ; 1 bytes @ 0x2
  1084                           
  1085  0072                     ??_EUSART_SetOverrunErrorHandler:	
  1086                           ; 1 bytes @ 0x2
  1087                           
  1088  0072                     ??_EUSART_SetErrorHandler:	
  1089                           ; 1 bytes @ 0x2
  1090                           
  1091  0072                     ??_EUSART_Initialize:	
  1092                           ; 1 bytes @ 0x2
  1093                           
  1094  0072                     ?_fputc:	
  1095                           ; 1 bytes @ 0x2
  1096                           
  1097  0072                     fputc@c:	
  1098                           ; 2 bytes @ 0x2
  1099                           
  1100                           
  1101                           ; 2 bytes @ 0x2
  1102  0072                     	ds	2
  1103  0074                     fputc@fp:	
  1104                           
  1105                           ; 1 bytes @ 0x4
  1106  0074                     	ds	1
  1107  0075                     ??_fputc:	
  1108                           
  1109                           ; 1 bytes @ 0x5
  1110  0075                     	ds	5
  1111  007A                     ?_vfpfcnvrt:	
  1112  007A                     vfpfcnvrt@fmt:	
  1113                           ; 2 bytes @ 0xA
  1114                           
  1115                           
  1116                           ; 1 bytes @ 0xA
  1117  007A                     	ds	1
  1118  007B                     vfpfcnvrt@ap:	
  1119                           
  1120                           ; 1 bytes @ 0xB
  1121  007B                     	ds	1
  1122  007C                     vfpfcnvrt@fp:	
  1123                           
  1124                           ; 1 bytes @ 0xC
  1125  007C                     	ds	1
  1126  007D                     ??_printf:	
  1127                           
  1128                           ; 1 bytes @ 0xD
  1129  007D                     	ds	1
  1130                           
  1131                           	psect	cstackBANK0
  1132  0020                     __pcstackBANK0:	
  1133  0020                     ??_vfpfcnvrt:	
  1134                           
  1135                           ; 1 bytes @ 0x0
  1136  0020                     	ds	5
  1137  0025                     ?_vfprintf:	
  1138  0025                     vfprintf@fmt:	
  1139                           ; 2 bytes @ 0x5
  1140                           
  1141                           
  1142                           ; 2 bytes @ 0x5
  1143  0025                     	ds	2
  1144  0027                     vfprintf@ap:	
  1145                           
  1146                           ; 1 bytes @ 0x7
  1147  0027                     	ds	1
  1148  0028                     ??_vfprintf:	
  1149                           
  1150                           ; 1 bytes @ 0x8
  1151  0028                     	ds	2
  1152  002A                     vfprintf@fp:	
  1153                           
  1154                           ; 1 bytes @ 0xA
  1155  002A                     	ds	1
  1156  002B                     vfprintf@cfmt:	
  1157                           
  1158                           ; 2 bytes @ 0xB
  1159  002B                     	ds	2
  1160  002D                     ?_printf:	
  1161  002D                     printf@fmt:	
  1162                           ; 2 bytes @ 0xD
  1163                           
  1164                           
  1165                           ; 2 bytes @ 0xD
  1166  002D                     	ds	4
  1167  0031                     printf@ap:	
  1168                           
  1169                           ; 1 bytes @ 0x11
  1170  0031                     	ds	1
  1171  0032                     ??_bit_find:	
  1172                           
  1173                           ; 1 bytes @ 0x12
  1174  0032                     	ds	1
  1175  0033                     bit_find@width:	
  1176                           
  1177                           ; 2 bytes @ 0x13
  1178  0033                     	ds	2
  1179  0035                     ?_recv_data:	
  1180  0035                     recv_data@size:	
  1181                           ; 1 bytes @ 0x15
  1182                           
  1183                           
  1184                           ; 1 bytes @ 0x15
  1185  0035                     	ds	1
  1186  0036                     ??_recv_data:	
  1187                           
  1188                           ; 1 bytes @ 0x16
  1189  0036                     	ds	2
  1190  0038                     recv_data@data:	
  1191                           
  1192                           ; 1 bytes @ 0x18
  1193  0038                     	ds	1
  1194  0039                     recv_data@i:	
  1195                           
  1196                           ; 1 bytes @ 0x19
  1197  0039                     	ds	1
  1198  003A                     recv_data@a:	
  1199                           
  1200                           ; 1 bytes @ 0x1A
  1201  003A                     	ds	1
  1202  003B                     ??_main:	
  1203                           
  1204                           ; 1 bytes @ 0x1B
  1205  003B                     	ds	1
  1206  003C                     main@data:	
  1207                           
  1208                           ; 48 bytes @ 0x1C
  1209  003C                     	ds	48
  1210                           
  1211                           	psect	maintext
  1212  065D                     __pmaintext:	
  1213 ;;
  1214 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1215 ;;
  1216 ;; *************** function _main *****************
  1217 ;; Defined at:
  1218 ;;		line 36 in file "main.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  data           48   28[BANK0 ] unsigned char [48]
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : B1F/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1232 ;;      Params:         0       0       0       0       0       0
  1233 ;;      Locals:         0      48       0       0       0       0
  1234 ;;      Temps:          0       1       0       0       0       0
  1235 ;;      Totals:         0      49       0       0       0       0
  1236 ;;Total ram usage:       49 bytes
  1237 ;; Hardware stack levels required when called:    8
  1238 ;; This function calls:
  1239 ;;		_SYSTEM_Initialize
  1240 ;;		_printf
  1241 ;;		_putch
  1242 ;;		_recv_data
  1243 ;;		_recv_reader
  1244 ;; This function is called by:
  1245 ;;		Startup code after reset
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           
  1250                           ;psect for function _main
  1251  065D                     _main:	
  1252  065D                     l1261:	
  1253                           ;incstack = 0
  1254                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1255                           
  1256                           
  1257                           ;main.c: 38:     SYSTEM_Initialize();
  1258  065D  3185  25AE  3186   	fcall	_SYSTEM_Initialize
  1259  0660                     l1263:	
  1260                           
  1261                           ;main.c: 39:     printf("init AEHA format");
  1262  0660  3000               	movlw	low (STR_1| (0+32768))
  1263  0661  0020               	movlb	0	; select bank0
  1264  0662  00AD               	movwf	printf@fmt
  1265  0663  3088               	movlw	high (STR_1| (0+32768))
  1266  0664  00AE               	movwf	printf@fmt+1
  1267  0665  3185  25BB  3186   	fcall	_printf
  1268  0668                     l1265:	
  1269                           
  1270                           ;main.c: 40:     printf("\r\n");
  1271  0668  3015               	movlw	low (STR_2| (0+32768))
  1272  0669  0020               	movlb	0	; select bank0
  1273  066A  00AD               	movwf	printf@fmt
  1274  066B  3088               	movlw	high (STR_2| (0+32768))
  1275  066C  00AE               	movwf	printf@fmt+1
  1276  066D  3185  25BB  3186   	fcall	_printf
  1277  0670                     l1267:	
  1278  0670  0022               	movlb	2	; select bank2
  1279  0671  150C               	bsf	12,2	;volatile
  1280  0672  2E77               	goto	l1271
  1281  0673                     l1269:	
  1282                           
  1283                           ;main.c: 48:    _delay((unsigned long)((5)*(32000000/4000000.0)));
  1284  0673  300D               	movlw	13
  1285  0674                     u447:	
  1286  0674  0B89               	decfsz	9,f
  1287  0675  2E74               	goto	u447
  1288  0676  0000               	nop
  1289  0677                     l1271:	
  1290                           
  1291                           ;main.c: 47:   while(PORTAbits.RA1 == 1){
  1292  0677  0020               	movlb	0	; select bank0
  1293  0678  188C               	btfsc	12,1	;volatile
  1294  0679  2E7B               	goto	u411
  1295  067A  2E7C               	goto	u410
  1296  067B                     u411:	
  1297  067B  2E73               	goto	l1269
  1298  067C                     u410:	
  1299  067C                     l1273:	
  1300                           
  1301                           ;main.c: 51:   recv_reader();
  1302  067C  3186  2697  3186   	fcall	_recv_reader
  1303  067F                     l1275:	
  1304                           
  1305                           ;main.c: 52:   recv_data(data, 48);
  1306  067F  3030               	movlw	48
  1307  0680  0020               	movlb	0	; select bank0
  1308  0681  00BB               	movwf	??_main
  1309  0682  083B               	movf	??_main,w
  1310  0683  00B5               	movwf	recv_data@size
  1311  0684  303C               	movlw	(low (main@data| 0))& (0+255)
  1312  0685  3186  2630  3186   	fcall	_recv_data
  1313  0688                     l1277:	
  1314                           
  1315                           ;main.c: 53:   putch('|');
  1316  0688  307C               	movlw	124
  1317  0689  3185  258C  3186   	fcall	_putch
  1318                           
  1319                           ;main.c: 54:         printf("\r\n");
  1320  068C  3015               	movlw	low (STR_2| (0+32768))
  1321  068D  0020               	movlb	0	; select bank0
  1322  068E  00AD               	movwf	printf@fmt
  1323  068F  3088               	movlw	high (STR_2| (0+32768))
  1324  0690  00AE               	movwf	printf@fmt+1
  1325  0691  3185  25BB  3186   	fcall	_printf
  1326  0694  2E77               	goto	l1271
  1327  0695  3180  2802         	ljmp	start
  1328  0697                     __end_of_main:	
  1329                           
  1330                           	psect	text1
  1331  0697                     __ptext1:	
  1332 ;; *************** function _recv_reader *****************
  1333 ;; Defined at:
  1334 ;;		line 63 in file "main.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  width           2    1[COMMON] int 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      unsigned char 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1348 ;;      Params:         0       0       0       0       0       0
  1349 ;;      Locals:         2       0       0       0       0       0
  1350 ;;      Temps:          1       0       0       0       0       0
  1351 ;;      Totals:         3       0       0       0       0       0
  1352 ;;Total ram usage:        3 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           
  1362                           ;psect for function _recv_reader
  1363  0697                     _recv_reader:	
  1364  0697                     l1039:	
  1365                           ;incstack = 0
  1366                           ; Regs used in _recv_reader: [wreg+status,2]
  1367                           
  1368                           
  1369                           ;main.c: 64:  int width = 0;
  1370  0697  01F1               	clrf	recv_reader@width
  1371  0698  01F2               	clrf	recv_reader@width+1
  1372                           
  1373                           ;main.c: 65:  while(PORTAbits.RA1 == 0){
  1374  0699  2EA2               	goto	l1043
  1375  069A                     l1041:	
  1376                           
  1377                           ;main.c: 66:   width++;
  1378  069A  3001               	movlw	1
  1379  069B  07F1               	addwf	recv_reader@width,f
  1380  069C  3000               	movlw	0
  1381  069D  3DF2               	addwfc	recv_reader@width+1,f
  1382                           
  1383                           ;main.c: 67:   _delay((unsigned long)((5)*(32000000/4000000.0)));
  1384  069E  300D               	movlw	13
  1385  069F                     u457:	
  1386  069F  0B89               	decfsz	9,f
  1387  06A0  2E9F               	goto	u457
  1388  06A1  0000               	nop
  1389  06A2                     l1043:	
  1390                           
  1391                           ;main.c: 65:  while(PORTAbits.RA1 == 0){
  1392  06A2  0020               	movlb	0	; select bank0
  1393  06A3  1C8C               	btfss	12,1	;volatile
  1394  06A4  2EA6               	goto	u151
  1395  06A5  2EA7               	goto	u150
  1396  06A6                     u151:	
  1397  06A6  2E9A               	goto	l1041
  1398  06A7                     u150:	
  1399  06A7                     l1045:	
  1400                           
  1401                           ;main.c: 70:  if(width > 800){
  1402  06A7  0872               	movf	recv_reader@width+1,w
  1403  06A8  3A80               	xorlw	128
  1404  06A9  00F0               	movwf	??_recv_reader
  1405  06AA  3083               	movlw	131
  1406  06AB  0270               	subwf	??_recv_reader,w
  1407  06AC  1D03               	skipz
  1408  06AD  2EB0               	goto	u165
  1409  06AE  3021               	movlw	33
  1410  06AF  0271               	subwf	recv_reader@width,w
  1411  06B0                     u165:	
  1412  06B0  1C03               	skipc
  1413  06B1  2EB3               	goto	u161
  1414  06B2  2EB4               	goto	u160
  1415  06B3                     u161:	
  1416  06B3  2EB5               	goto	l1049
  1417  06B4                     u160:	
  1418  06B4  2ED3               	goto	l41
  1419  06B5                     l1049:	
  1420                           
  1421                           ;main.c: 74:  width = 0;
  1422  06B5  01F1               	clrf	recv_reader@width
  1423  06B6  01F2               	clrf	recv_reader@width+1
  1424                           
  1425                           ;main.c: 75:  while(PORTAbits.RA1 == 1){
  1426  06B7  2ECE               	goto	l42
  1427  06B8                     l1051:	
  1428                           
  1429                           ;main.c: 76:   width++;
  1430  06B8  3001               	movlw	1
  1431  06B9  07F1               	addwf	recv_reader@width,f
  1432  06BA  3000               	movlw	0
  1433  06BB  3DF2               	addwfc	recv_reader@width+1,f
  1434                           
  1435                           ;main.c: 77:   _delay((unsigned long)((5)*(32000000/4000000.0)));
  1436  06BC  300D               	movlw	13
  1437  06BD                     u467:	
  1438  06BD  0B89               	decfsz	9,f
  1439  06BE  2EBD               	goto	u467
  1440  06BF  0000               	nop
  1441                           
  1442                           ;main.c: 79:   if(width > 500){
  1443  06C0  0872               	movf	recv_reader@width+1,w
  1444  06C1  3A80               	xorlw	128
  1445  06C2  00F0               	movwf	??_recv_reader
  1446  06C3  3081               	movlw	129
  1447  06C4  0270               	subwf	??_recv_reader,w
  1448  06C5  1D03               	skipz
  1449  06C6  2EC9               	goto	u175
  1450  06C7  30F5               	movlw	245
  1451  06C8  0271               	subwf	recv_reader@width,w
  1452  06C9                     u175:	
  1453  06C9  1C03               	skipc
  1454  06CA  2ECC               	goto	u171
  1455  06CB  2ECD               	goto	u170
  1456  06CC                     u171:	
  1457  06CC  2ECE               	goto	l42
  1458  06CD                     u170:	
  1459  06CD  2ED3               	goto	l41
  1460  06CE                     l42:	
  1461                           ;main.c: 82:  }
  1462                           
  1463                           
  1464                           ;main.c: 75:  while(PORTAbits.RA1 == 1){
  1465  06CE  0020               	movlb	0	; select bank0
  1466  06CF  188C               	btfsc	12,1	;volatile
  1467  06D0  2ED2               	goto	u181
  1468  06D1  2ED3               	goto	u180
  1469  06D2                     u181:	
  1470  06D2  2EB8               	goto	l1051
  1471  06D3                     u180:	
  1472  06D3                     l41:	
  1473  06D3  0008               	return
  1474  06D4                     __end_of_recv_reader:	
  1475                           
  1476                           	psect	text2
  1477  0630                     __ptext2:	
  1478 ;; *************** function _recv_data *****************
  1479 ;; Defined at:
  1480 ;;		line 90 in file "main.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  data            1    wreg     PTR unsigned char 
  1483 ;;		 -> main@data(48), 
  1484 ;;  size            1   21[BANK0 ] unsigned char 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  data            1   24[BANK0 ] PTR unsigned char 
  1487 ;;		 -> main@data(48), 
  1488 ;;  a               1   26[BANK0 ] unsigned char 
  1489 ;;  i               1   25[BANK0 ] unsigned char 
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1499 ;;      Params:         0       1       0       0       0       0
  1500 ;;      Locals:         0       3       0       0       0       0
  1501 ;;      Temps:          0       2       0       0       0       0
  1502 ;;      Totals:         0       6       0       0       0       0
  1503 ;;Total ram usage:        6 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    7
  1506 ;; This function calls:
  1507 ;;		_bit_find
  1508 ;;		_putch
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           
  1515                           ;psect for function _recv_data
  1516  0630                     _recv_data:	
  1517                           
  1518                           ;incstack = 0
  1519                           ; Regs used in _recv_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1520                           ;recv_data@data stored from wreg
  1521  0630  0020               	movlb	0	; select bank0
  1522  0631  00B8               	movwf	recv_data@data
  1523  0632                     l1245:	
  1524                           
  1525                           ;main.c: 91:  uint8_t i;;main.c: 92:  for(i = 0; i < size; i++){
  1526  0632  01B9               	clrf	recv_data@i
  1527  0633  2E56               	goto	l1259
  1528  0634                     l1247:	
  1529                           
  1530                           ;main.c: 93:   uint8_t a = bit_find();
  1531  0634  3187  2713  3186   	fcall	_bit_find
  1532  0637  0020               	movlb	0	; select bank0
  1533  0638  00B6               	movwf	??_recv_data
  1534  0639  0836               	movf	??_recv_data,w
  1535  063A  00BA               	movwf	recv_data@a
  1536  063B                     l1249:	
  1537                           
  1538                           ;main.c: 94:   if(a == 3) break;
  1539  063B  3003               	movlw	3
  1540  063C  063A               	xorwf	recv_data@a,w
  1541  063D  1D03               	btfss	3,2
  1542  063E  2E40               	goto	u391
  1543  063F  2E41               	goto	u390
  1544  0640                     u391:	
  1545  0640  2E42               	goto	l1253
  1546  0641                     u390:	
  1547  0641  2E5C               	goto	l52
  1548  0642                     l1253:	
  1549                           
  1550                           ;main.c: 96:   data[i] = a;
  1551  0642  083A               	movf	recv_data@a,w
  1552  0643  00B6               	movwf	??_recv_data
  1553  0644  0839               	movf	recv_data@i,w
  1554  0645  0738               	addwf	recv_data@data,w
  1555  0646  00B7               	movwf	??_recv_data+1
  1556  0647  0837               	movf	??_recv_data+1,w
  1557  0648  0086               	movwf	6
  1558  0649  0187               	clrf	7
  1559  064A  0836               	movf	??_recv_data,w
  1560  064B  0081               	movwf	1
  1561  064C                     l1255:	
  1562                           
  1563                           ;main.c: 97:   putch(a + '0');
  1564  064C  083A               	movf	recv_data@a,w
  1565  064D  3E30               	addlw	48
  1566  064E  3185  258C  3186   	fcall	_putch
  1567  0651                     l1257:	
  1568                           
  1569                           ;main.c: 98:  }
  1570  0651  3001               	movlw	1
  1571  0652  0020               	movlb	0	; select bank0
  1572  0653  00B6               	movwf	??_recv_data
  1573  0654  0836               	movf	??_recv_data,w
  1574  0655  07B9               	addwf	recv_data@i,f
  1575  0656                     l1259:	
  1576  0656  0835               	movf	recv_data@size,w
  1577  0657  0239               	subwf	recv_data@i,w
  1578  0658  1C03               	skipc
  1579  0659  2E5B               	goto	u401
  1580  065A  2E5C               	goto	u400
  1581  065B                     u401:	
  1582  065B  2E34               	goto	l1247
  1583  065C                     u400:	
  1584  065C                     l52:	
  1585  065C  0008               	return
  1586  065D                     __end_of_recv_data:	
  1587                           
  1588                           	psect	text3
  1589  0713                     __ptext3:	
  1590 ;; *************** function _bit_find *****************
  1591 ;; Defined at:
  1592 ;;		line 112 in file "main.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  width           2   19[BANK0 ] int 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      unsigned char 
  1599 ;; Registers used:
  1600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1606 ;;      Params:         0       0       0       0       0       0
  1607 ;;      Locals:         0       2       0       0       0       0
  1608 ;;      Temps:          0       1       0       0       0       0
  1609 ;;      Totals:         0       3       0       0       0       0
  1610 ;;Total ram usage:        3 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    6
  1613 ;; This function calls:
  1614 ;;		_printf
  1615 ;; This function is called by:
  1616 ;;		_recv_data
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           
  1621                           ;psect for function _bit_find
  1622  0713                     _bit_find:	
  1623  0713                     l1197:	
  1624                           ;incstack = 0
  1625                           ; Regs used in _bit_find: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1626                           
  1627                           
  1628                           ;main.c: 113:  int width = 0;
  1629  0713  0020               	movlb	0	; select bank0
  1630  0714  01B3               	clrf	bit_find@width
  1631  0715  01B4               	clrf	bit_find@width+1
  1632                           
  1633                           ;main.c: 114:  while(PORTAbits.RA1 == 0){
  1634  0716  2F1F               	goto	l1201
  1635  0717                     l1199:	
  1636                           
  1637                           ;main.c: 115:   width++;
  1638  0717  3001               	movlw	1
  1639  0718  07B3               	addwf	bit_find@width,f
  1640  0719  3000               	movlw	0
  1641  071A  3DB4               	addwfc	bit_find@width+1,f
  1642                           
  1643                           ;main.c: 116:   _delay((unsigned long)((5)*(32000000/4000000.0)));
  1644  071B  300D               	movlw	13
  1645  071C                     u477:	
  1646  071C  0B89               	decfsz	9,f
  1647  071D  2F1C               	goto	u477
  1648  071E  0000               	nop
  1649  071F                     l1201:	
  1650                           
  1651                           ;main.c: 114:  while(PORTAbits.RA1 == 0){
  1652  071F  0020               	movlb	0	; select bank0
  1653  0720  1C8C               	btfss	12,1	;volatile
  1654  0721  2F23               	goto	u341
  1655  0722  2F24               	goto	u340
  1656  0723                     u341:	
  1657  0723  2F17               	goto	l1199
  1658  0724                     u340:	
  1659  0724                     l1203:	
  1660                           
  1661                           ;main.c: 119:  if(width < 50){
  1662  0724  0834               	movf	bit_find@width+1,w
  1663  0725  3A80               	xorlw	128
  1664  0726  00B2               	movwf	??_bit_find
  1665  0727  3080               	movlw	128
  1666  0728  0232               	subwf	??_bit_find,w
  1667  0729  1D03               	skipz
  1668  072A  2F2D               	goto	u355
  1669  072B  3032               	movlw	50
  1670  072C  0233               	subwf	bit_find@width,w
  1671  072D                     u355:	
  1672  072D  1803               	skipnc
  1673  072E  2F30               	goto	u351
  1674  072F  2F31               	goto	u350
  1675  0730                     u351:	
  1676  0730  2F3B               	goto	l1211
  1677  0731                     u350:	
  1678  0731                     l1205:	
  1679                           
  1680                           ;main.c: 120:         printf("e");
  1681  0731  3018               	movlw	low (STR_4| (0+32768))
  1682  0732  0020               	movlb	0	; select bank0
  1683  0733  00AD               	movwf	printf@fmt
  1684  0734  3088               	movlw	high (STR_4| (0+32768))
  1685  0735  00AE               	movwf	printf@fmt+1
  1686  0736  3185  25BB  3187   	fcall	_printf
  1687  0739                     l1207:	
  1688                           
  1689                           ;main.c: 121:   return 2;
  1690  0739  3002               	movlw	2
  1691  073A  2F74               	goto	l59
  1692  073B                     l1211:	
  1693                           
  1694                           ;main.c: 124:  width = 0;
  1695  073B  0020               	movlb	0	; select bank0
  1696  073C  01B3               	clrf	bit_find@width
  1697  073D  01B4               	clrf	bit_find@width+1
  1698                           
  1699                           ;main.c: 125:  while(PORTAbits.RA1 == 1){
  1700  073E  2F5F               	goto	l60
  1701  073F                     l1213:	
  1702                           
  1703                           ;main.c: 126:   width++;
  1704  073F  3001               	movlw	1
  1705  0740  07B3               	addwf	bit_find@width,f
  1706  0741  3000               	movlw	0
  1707  0742  3DB4               	addwfc	bit_find@width+1,f
  1708                           
  1709                           ;main.c: 127:   _delay((unsigned long)((5)*(32000000/4000000.0)));
  1710  0743  300D               	movlw	13
  1711  0744                     u487:	
  1712  0744  0B89               	decfsz	9,f
  1713  0745  2F44               	goto	u487
  1714  0746  0000               	nop
  1715                           
  1716                           ;main.c: 129:   if(width > 1800){
  1717  0747  0020               	movlb	0	; select bank0
  1718  0748  0834               	movf	bit_find@width+1,w
  1719  0749  3A80               	xorlw	128
  1720  074A  00B2               	movwf	??_bit_find
  1721  074B  3087               	movlw	135
  1722  074C  0232               	subwf	??_bit_find,w
  1723  074D  1D03               	skipz
  1724  074E  2F51               	goto	u365
  1725  074F  3009               	movlw	9
  1726  0750  0233               	subwf	bit_find@width,w
  1727  0751                     u365:	
  1728  0751  1C03               	skipc
  1729  0752  2F54               	goto	u361
  1730  0753  2F55               	goto	u360
  1731  0754                     u361:	
  1732  0754  2F5F               	goto	l60
  1733  0755                     u360:	
  1734  0755                     l1215:	
  1735                           
  1736                           ;main.c: 130:             printf("end");
  1737  0755  3011               	movlw	low (STR_5| (0+32768))
  1738  0756  0020               	movlb	0	; select bank0
  1739  0757  00AD               	movwf	printf@fmt
  1740  0758  3088               	movlw	high (STR_5| (0+32768))
  1741  0759  00AE               	movwf	printf@fmt+1
  1742  075A  3185  25BB  3187   	fcall	_printf
  1743  075D                     l1217:	
  1744                           
  1745                           ;main.c: 131:    return 3;
  1746  075D  3003               	movlw	3
  1747  075E  2F74               	goto	l59
  1748  075F                     l60:	
  1749                           ;main.c: 133:  }
  1750                           
  1751                           
  1752                           ;main.c: 125:  while(PORTAbits.RA1 == 1){
  1753  075F  0020               	movlb	0	; select bank0
  1754  0760  188C               	btfsc	12,1	;volatile
  1755  0761  2F63               	goto	u371
  1756  0762  2F64               	goto	u370
  1757  0763                     u371:	
  1758  0763  2F3F               	goto	l1213
  1759  0764                     u370:	
  1760  0764                     l1221:	
  1761                           
  1762                           ;main.c: 135:  if(width < 100){
  1763  0764  0834               	movf	bit_find@width+1,w
  1764  0765  3A80               	xorlw	128
  1765  0766  00B2               	movwf	??_bit_find
  1766  0767  3080               	movlw	128
  1767  0768  0232               	subwf	??_bit_find,w
  1768  0769  1D03               	skipz
  1769  076A  2F6D               	goto	u385
  1770  076B  3064               	movlw	100
  1771  076C  0233               	subwf	bit_find@width,w
  1772  076D                     u385:	
  1773  076D  1803               	skipnc
  1774  076E  2F70               	goto	u381
  1775  076F  2F71               	goto	u380
  1776  0770                     u381:	
  1777  0770  2F73               	goto	l1229
  1778  0771                     u380:	
  1779  0771                     l1223:	
  1780                           
  1781                           ;main.c: 136:   return 0;
  1782  0771  3000               	movlw	0
  1783  0772  2F74               	goto	l59
  1784  0773                     l1229:	
  1785                           
  1786                           ;main.c: 138:   return 1;
  1787  0773  3001               	movlw	1
  1788  0774                     l59:	
  1789  0774  0008               	return
  1790  0775                     __end_of_bit_find:	
  1791                           
  1792                           	psect	text4
  1793  05BB                     __ptext4:	
  1794 ;; *************** function _printf *****************
  1795 ;; Defined at:
  1796 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  fmt             2   13[BANK0 ] PTR const unsigned char 
  1799 ;;		 -> STR_5(4), STR_4(2), STR_3(3), STR_2(3), 
  1800 ;;		 -> STR_1(17), 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  ret             2    0        int 
  1803 ;;  ap              1   17[BANK0 ] PTR void [1]
  1804 ;;		 -> ?_printf(2), 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  2   13[BANK0 ] int 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1814 ;;      Params:         0       2       0       0       0       0
  1815 ;;      Locals:         0       3       0       0       0       0
  1816 ;;      Temps:          1       0       0       0       0       0
  1817 ;;      Totals:         1       5       0       0       0       0
  1818 ;;Total ram usage:        6 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    5
  1821 ;; This function calls:
  1822 ;;		_vfprintf
  1823 ;; This function is called by:
  1824 ;;		_main
  1825 ;;		_bit_find
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           
  1830                           ;psect for function _printf
  1831  05BB                     _printf:	
  1832  05BB                     l1185:	
  1833                           ;incstack = 0
  1834                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1835                           
  1836  05BB  302F               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1837  05BC  00FD               	movwf	??_printf
  1838  05BD  087D               	movf	??_printf,w
  1839  05BE  0020               	movlb	0	; select bank0
  1840  05BF  00B1               	movwf	printf@ap
  1841  05C0                     l1187:	
  1842  05C0  082E               	movf	printf@fmt+1,w
  1843  05C1  00A6               	movwf	vfprintf@fmt+1
  1844  05C2  082D               	movf	printf@fmt,w
  1845  05C3  00A5               	movwf	vfprintf@fmt
  1846  05C4  3031               	movlw	(low (printf@ap| 0))& (0+255)
  1847  05C5  00FD               	movwf	??_printf
  1848  05C6  087D               	movf	??_printf,w
  1849  05C7  00A7               	movwf	vfprintf@ap
  1850  05C8  3000               	movlw	0
  1851  05C9  3186  2608  3185   	fcall	_vfprintf
  1852  05CC                     l877:	
  1853  05CC  0008               	return
  1854  05CD                     __end_of_printf:	
  1855                           
  1856                           	psect	text5
  1857  0608                     __ptext5:	
  1858 ;; *************** function _vfprintf *****************
  1859 ;; Defined at:
  1860 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  fp              1    wreg     PTR struct _IO_FILE
  1863 ;;		 -> NULL(0), 
  1864 ;;  fmt             2    5[BANK0 ] PTR const unsigned char 
  1865 ;;		 -> STR_5(4), STR_4(2), STR_3(3), STR_2(3), 
  1866 ;;		 -> STR_1(17), 
  1867 ;;  ap              1    7[BANK0 ] PTR PTR void 
  1868 ;;		 -> printf@ap(1), 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  1871 ;;		 -> NULL(0), 
  1872 ;;  cfmt            2   11[BANK0 ] PTR unsigned char 
  1873 ;;		 -> STR_5(4), STR_4(2), STR_3(3), STR_2(3), 
  1874 ;;		 -> STR_1(17), 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  2    5[BANK0 ] int 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1884 ;;      Params:         0       3       0       0       0       0
  1885 ;;      Locals:         0       3       0       0       0       0
  1886 ;;      Temps:          0       2       0       0       0       0
  1887 ;;      Totals:         0       8       0       0       0       0
  1888 ;;Total ram usage:        8 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    4
  1891 ;; This function calls:
  1892 ;;		_vfpfcnvrt
  1893 ;; This function is called by:
  1894 ;;		_printf
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           
  1899                           ;psect for function _vfprintf
  1900  0608                     _vfprintf:	
  1901                           
  1902                           ;incstack = 0
  1903                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1904                           ;vfprintf@fp stored from wreg
  1905  0608  0020               	movlb	0	; select bank0
  1906  0609  00AA               	movwf	vfprintf@fp
  1907  060A                     l1173:	
  1908                           
  1909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1910  060A  0826               	movf	vfprintf@fmt+1,w
  1911  060B  00AC               	movwf	vfprintf@cfmt+1
  1912  060C  0825               	movf	vfprintf@fmt,w
  1913  060D  00AB               	movwf	vfprintf@cfmt
  1914  060E                     l1175:	
  1915                           
  1916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1917  060E  01EC               	clrf	_nout
  1918  060F  01ED               	clrf	_nout+1
  1919                           
  1920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1921  0610  2E22               	goto	l1179
  1922  0611                     l1177:	
  1923                           
  1924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1925  0611  302B               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1926  0612  00A8               	movwf	??_vfprintf
  1927  0613  0828               	movf	??_vfprintf,w
  1928  0614  00FA               	movwf	vfpfcnvrt@fmt
  1929  0615  0827               	movf	vfprintf@ap,w
  1930  0616  00A9               	movwf	??_vfprintf+1
  1931  0617  0829               	movf	??_vfprintf+1,w
  1932  0618  00FB               	movwf	vfpfcnvrt@ap
  1933  0619  082A               	movf	vfprintf@fp,w
  1934  061A  3187  2775  3186   	fcall	_vfpfcnvrt
  1935  061D  087A               	movf	?_vfpfcnvrt,w
  1936  061E  0020               	movlb	0	; select bank0
  1937  061F  07EC               	addwf	_nout,f
  1938  0620  087B               	movf	?_vfpfcnvrt+1,w
  1939  0621  3DED               	addwfc	_nout+1,f
  1940  0622                     l1179:	
  1941                           
  1942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1943  0622  082B               	movf	vfprintf@cfmt,w
  1944  0623  0084               	movwf	4
  1945  0624  082C               	movf	vfprintf@cfmt+1,w
  1946  0625  0085               	movwf	5
  1947  0626  0012               	moviw fsr0++
  1948  0627  1D03               	btfss	3,2
  1949  0628  2E2A               	goto	u331
  1950  0629  2E2B               	goto	u330
  1951  062A                     u331:	
  1952  062A  2E11               	goto	l1177
  1953  062B                     u330:	
  1954  062B                     l1181:	
  1955                           
  1956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1957  062B  086D               	movf	_nout+1,w
  1958  062C  00A6               	movwf	?_vfprintf+1
  1959  062D  086C               	movf	_nout,w
  1960  062E  00A5               	movwf	?_vfprintf
  1961  062F                     l396:	
  1962  062F  0008               	return
  1963  0630                     __end_of_vfprintf:	
  1964                           
  1965                           	psect	text6
  1966  0775                     __ptext6:	
  1967 ;; *************** function _vfpfcnvrt *****************
  1968 ;; Defined at:
  1969 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  fp              1    wreg     PTR struct _IO_FILE
  1972 ;;		 -> NULL(0), 
  1973 ;;  fmt             1   10[COMMON] PTR PTR unsigned char 
  1974 ;;		 -> vfprintf@cfmt(2), 
  1975 ;;  ap              1   11[COMMON] PTR PTR void 
  1976 ;;		 -> printf@ap(1), 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  fp              1   12[COMMON] PTR struct _IO_FILE
  1979 ;;		 -> NULL(0), 
  1980 ;;  llu             8    0        unsigned long long 
  1981 ;;  ll              8    0        long long 
  1982 ;;  f               4    0        long long 
  1983 ;;  ct              3    0        unsigned char [3]
  1984 ;;  vp              2    0        PTR void 
  1985 ;;  i               2    0        int 
  1986 ;;  done            2    0        int 
  1987 ;;  cp              2    0        PTR unsigned char 
  1988 ;;  c               1    0        unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  2   10[COMMON] int 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1998 ;;      Params:         2       0       0       0       0       0
  1999 ;;      Locals:         1       0       0       0       0       0
  2000 ;;      Temps:          0       5       0       0       0       0
  2001 ;;      Totals:         3       5       0       0       0       0
  2002 ;;Total ram usage:        8 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    3
  2005 ;; This function calls:
  2006 ;;		_fputc
  2007 ;; This function is called by:
  2008 ;;		_vfprintf
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function _vfpfcnvrt
  2014  0775                     _vfpfcnvrt:	
  2015                           
  2016                           ;incstack = 0
  2017                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2018                           ;vfpfcnvrt@fp stored from wreg
  2019  0775  00FC               	movwf	vfpfcnvrt@fp
  2020  0776                     l1141:	
  2021                           
  2022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2023  0776  087A               	movf	vfpfcnvrt@fmt,w
  2024  0777  0086               	movwf	6
  2025  0778  0187               	clrf	7
  2026  0779  3F40               	moviw [0]fsr1
  2027  077A  0020               	movlb	0	; select bank0
  2028  077B  00A0               	movwf	??_vfpfcnvrt
  2029  077C  3F41               	moviw [1]fsr1
  2030  077D  00A1               	movwf	??_vfpfcnvrt+1
  2031  077E  0820               	movf	??_vfpfcnvrt,w
  2032  077F  0084               	movwf	4
  2033  0780  0821               	movf	??_vfpfcnvrt+1,w
  2034  0781  0085               	movwf	5
  2035  0782  0012               	moviw fsr0++
  2036  0783  3A25               	xorlw	37
  2037  0784  1D03               	btfss	3,2
  2038  0785  2F87               	goto	u311
  2039  0786  2F88               	goto	u310
  2040  0787                     u311:	
  2041  0787  2FCE               	goto	l1165
  2042  0788                     u310:	
  2043  0788                     l1143:	
  2044                           
  2045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2046  0788  087A               	movf	vfpfcnvrt@fmt,w
  2047  0789  0086               	movwf	6
  2048  078A  0187               	clrf	7
  2049  078B  3001               	movlw	1
  2050  078C  0781               	addwf	1,f
  2051  078D  3141               	addfsr 1,1
  2052  078E  1803               	skipnc
  2053  078F  0A81               	incf	1,f
  2054  0790                     l1145:	
  2055                           
  2056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2057  0790  0021               	movlb	1	; select bank1
  2058  0791  01C0               	clrf	_width^(0+128)
  2059  0792  01C1               	clrf	(_width+1)^(0+128)
  2060  0793  01C4               	clrf	_flags^(0+128)
  2061  0794  01C5               	clrf	(_flags+1)^(0+128)
  2062  0795                     l1147:	
  2063                           
  2064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2065  0795  30FF               	movlw	255
  2066  0796  00C2               	movwf	_prec^(0+128)
  2067  0797  30FF               	movlw	255
  2068  0798  00C3               	movwf	(_prec^(0+128)+1)
  2069  0799                     l1149:	
  2070                           
  2071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2072  0799  087A               	movf	vfpfcnvrt@fmt,w
  2073  079A  0086               	movwf	6
  2074  079B  0187               	clrf	7
  2075  079C  3F40               	moviw [0]fsr1
  2076  079D  0020               	movlb	0	; select bank0
  2077  079E  00A0               	movwf	??_vfpfcnvrt
  2078  079F  3F41               	moviw [1]fsr1
  2079  07A0  00A1               	movwf	??_vfpfcnvrt+1
  2080  07A1  0820               	movf	??_vfpfcnvrt,w
  2081  07A2  0084               	movwf	4
  2082  07A3  0821               	movf	??_vfpfcnvrt+1,w
  2083  07A4  0085               	movwf	5
  2084  07A5  0012               	moviw fsr0++
  2085  07A6  3A25               	xorlw	37
  2086  07A7  1D03               	btfss	3,2
  2087  07A8  2FAA               	goto	u321
  2088  07A9  2FAB               	goto	u320
  2089  07AA                     u321:	
  2090  07AA  2FC3               	goto	l1159
  2091  07AB                     u320:	
  2092  07AB                     l1151:	
  2093                           
  2094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2095  07AB  087A               	movf	vfpfcnvrt@fmt,w
  2096  07AC  0086               	movwf	6
  2097  07AD  0187               	clrf	7
  2098  07AE  3001               	movlw	1
  2099  07AF  0781               	addwf	1,f
  2100  07B0  3141               	addfsr 1,1
  2101  07B1  1803               	skipnc
  2102  07B2  0A81               	incf	1,f
  2103  07B3                     l1153:	
  2104                           
  2105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2106  07B3  3025               	movlw	37
  2107  07B4  00F2               	movwf	fputc@c
  2108  07B5  3000               	movlw	0
  2109  07B6  00F3               	movwf	fputc@c+1
  2110  07B7  087C               	movf	vfpfcnvrt@fp,w
  2111  07B8  00A0               	movwf	??_vfpfcnvrt
  2112  07B9  0820               	movf	??_vfpfcnvrt,w
  2113  07BA  00F4               	movwf	fputc@fp
  2114  07BB  3186  26D4  3187   	fcall	_fputc
  2115  07BE                     l1155:	
  2116                           
  2117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2118  07BE  3001               	movlw	1
  2119  07BF  00FA               	movwf	?_vfpfcnvrt
  2120  07C0  3000               	movlw	0
  2121  07C1  00FB               	movwf	?_vfpfcnvrt+1
  2122  07C2  2FF0               	goto	l390
  2123  07C3                     l1159:	
  2124                           
  2125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2126  07C3  087A               	movf	vfpfcnvrt@fmt,w
  2127  07C4  0086               	movwf	6
  2128  07C5  0187               	clrf	7
  2129  07C6  3001               	movlw	1
  2130  07C7  0781               	addwf	1,f
  2131  07C8  3141               	addfsr 1,1
  2132  07C9  1803               	skipnc
  2133  07CA  0A81               	incf	1,f
  2134  07CB                     l1161:	
  2135                           
  2136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2137  07CB  01FA               	clrf	?_vfpfcnvrt
  2138  07CC  01FB               	clrf	?_vfpfcnvrt+1
  2139  07CD  2FF0               	goto	l390
  2140  07CE                     l1165:	
  2141                           
  2142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2143  07CE  087A               	movf	vfpfcnvrt@fmt,w
  2144  07CF  0086               	movwf	6
  2145  07D0  0187               	clrf	7
  2146  07D1  3F40               	moviw [0]fsr1
  2147  07D2  00A0               	movwf	??_vfpfcnvrt
  2148  07D3  3F41               	moviw [1]fsr1
  2149  07D4  00A1               	movwf	??_vfpfcnvrt+1
  2150  07D5  0820               	movf	??_vfpfcnvrt,w
  2151  07D6  0084               	movwf	4
  2152  07D7  0821               	movf	??_vfpfcnvrt+1,w
  2153  07D8  0085               	movwf	5
  2154  07D9  0800               	movf	0,w	;code access
  2155  07DA  00A2               	movwf	??_vfpfcnvrt+2
  2156  07DB  01A3               	clrf	??_vfpfcnvrt+3
  2157  07DC  0822               	movf	??_vfpfcnvrt+2,w
  2158  07DD  00F2               	movwf	fputc@c
  2159  07DE  0823               	movf	??_vfpfcnvrt+3,w
  2160  07DF  00F3               	movwf	fputc@c+1
  2161  07E0  087C               	movf	vfpfcnvrt@fp,w
  2162  07E1  00A4               	movwf	??_vfpfcnvrt+4
  2163  07E2  0824               	movf	??_vfpfcnvrt+4,w
  2164  07E3  00F4               	movwf	fputc@fp
  2165  07E4  3186  26D4  3187   	fcall	_fputc
  2166  07E7                     l1167:	
  2167                           
  2168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2169  07E7  087A               	movf	vfpfcnvrt@fmt,w
  2170  07E8  0086               	movwf	6
  2171  07E9  0187               	clrf	7
  2172  07EA  3001               	movlw	1
  2173  07EB  0781               	addwf	1,f
  2174  07EC  3141               	addfsr 1,1
  2175  07ED  1803               	skipnc
  2176  07EE  0A81               	incf	1,f
  2177  07EF  2FBE               	goto	l1155
  2178  07F0                     l390:	
  2179  07F0  0008               	return
  2180  07F1                     __end_of_vfpfcnvrt:	
  2181                           
  2182                           	psect	text7
  2183  06D4                     __ptext7:	
  2184 ;; *************** function _fputc *****************
  2185 ;; Defined at:
  2186 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  c               2    2[COMMON] int 
  2189 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  2190 ;;		 -> NULL(0), 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  2    2[COMMON] int 
  2195 ;; Registers used:
  2196 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2202 ;;      Params:         3       0       0       0       0       0
  2203 ;;      Locals:         0       0       0       0       0       0
  2204 ;;      Temps:          5       0       0       0       0       0
  2205 ;;      Totals:         8       0       0       0       0       0
  2206 ;;Total ram usage:        8 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    2
  2209 ;; This function calls:
  2210 ;;		_putch
  2211 ;; This function is called by:
  2212 ;;		_vfpfcnvrt
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           
  2217                           ;psect for function _fputc
  2218  06D4                     _fputc:	
  2219  06D4                     l1127:	
  2220                           ;incstack = 0
  2221                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2222                           
  2223  06D4  0874               	movf	fputc@fp,w
  2224  06D5  1903               	btfsc	3,2
  2225  06D6  2ED8               	goto	u271
  2226  06D7  2ED9               	goto	u270
  2227  06D8                     u271:	
  2228  06D8  2EDE               	goto	l1131
  2229  06D9                     u270:	
  2230  06D9                     l1129:	
  2231  06D9  0874               	movf	fputc@fp,w
  2232  06DA  1D03               	btfss	3,2
  2233  06DB  2EDD               	goto	u281
  2234  06DC  2EDE               	goto	u280
  2235  06DD                     u281:	
  2236  06DD  2EE3               	goto	l1133
  2237  06DE                     u280:	
  2238  06DE                     l1131:	
  2239  06DE  0872               	movf	fputc@c,w
  2240  06DF  3185  258C  3186   	fcall	_putch
  2241  06E2  2F12               	goto	l862
  2242  06E3                     l1133:	
  2243  06E3  0874               	movf	fputc@fp,w
  2244  06E4  3E03               	addlw	3
  2245  06E5  0086               	movwf	6
  2246  06E6  0187               	clrf	7
  2247  06E7  0016               	moviw fsr1++
  2248  06E8  0401               	iorwf	1,w
  2249  06E9  1903               	btfsc	3,2
  2250  06EA  2EEC               	goto	u291
  2251  06EB  2EED               	goto	u290
  2252  06EC                     u291:	
  2253  06EC  2F0A               	goto	l1137
  2254  06ED                     u290:	
  2255  06ED                     l1135:	
  2256  06ED  0874               	movf	fputc@fp,w
  2257  06EE  3E03               	addlw	3
  2258  06EF  0086               	movwf	6
  2259  06F0  0187               	clrf	7
  2260  06F1  3F40               	moviw [0]fsr1
  2261  06F2  00F5               	movwf	??_fputc
  2262  06F3  3F41               	moviw [1]fsr1
  2263  06F4  00F6               	movwf	??_fputc+1
  2264  06F5  0A74               	incf	fputc@fp,w
  2265  06F6  0086               	movwf	6
  2266  06F7  0187               	clrf	7
  2267  06F8  3F40               	moviw [0]fsr1
  2268  06F9  00F7               	movwf	??_fputc+2
  2269  06FA  3F41               	moviw [1]fsr1
  2270  06FB  00F8               	movwf	??_fputc+3
  2271  06FC  0878               	movf	??_fputc+3,w
  2272  06FD  3A80               	xorlw	128
  2273  06FE  00F9               	movwf	??_fputc+4
  2274  06FF  0876               	movf	??_fputc+1,w
  2275  0700  3A80               	xorlw	128
  2276  0701  0279               	subwf	??_fputc+4,w
  2277  0702  1D03               	skipz
  2278  0703  2F06               	goto	u305
  2279  0704  0875               	movf	??_fputc,w
  2280  0705  0277               	subwf	??_fputc+2,w
  2281  0706                     u305:	
  2282  0706  1803               	skipnc
  2283  0707  2F09               	goto	u301
  2284  0708  2F0A               	goto	u300
  2285  0709                     u301:	
  2286  0709  2F12               	goto	l862
  2287  070A                     u300:	
  2288  070A                     l1137:	
  2289  070A  0A74               	incf	fputc@fp,w
  2290  070B  0086               	movwf	6
  2291  070C  0187               	clrf	7
  2292  070D  3001               	movlw	1
  2293  070E  0781               	addwf	1,f
  2294  070F  3141               	addfsr 1,1
  2295  0710  1803               	skipnc
  2296  0711  0A81               	incf	1,f
  2297  0712                     l862:	
  2298  0712  0008               	return
  2299  0713                     __end_of_fputc:	
  2300                           
  2301                           	psect	text8
  2302  058C                     __ptext8:	
  2303 ;; *************** function _putch *****************
  2304 ;; Defined at:
  2305 ;;		line 28 in file "main.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  data            1    wreg     unsigned char 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  data            1    1[COMMON] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2, status,0, pclath, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2319 ;;      Params:         0       0       0       0       0       0
  2320 ;;      Locals:         1       0       0       0       0       0
  2321 ;;      Temps:          0       0       0       0       0       0
  2322 ;;      Totals:         1       0       0       0       0       0
  2323 ;;Total ram usage:        1 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    1
  2326 ;; This function calls:
  2327 ;;		_EUSART_Write
  2328 ;; This function is called by:
  2329 ;;		_main
  2330 ;;		_recv_data
  2331 ;;		_fputc
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           
  2336                           ;psect for function _putch
  2337  058C                     _putch:	
  2338                           
  2339                           ;incstack = 0
  2340                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  2341                           ;putch@data stored from wreg
  2342  058C  00F1               	movwf	putch@data
  2343  058D                     l1125:	
  2344                           
  2345                           ;main.c: 29:     EUSART_Write(data);
  2346  058D  0871               	movf	putch@data,w
  2347  058E  3185  2598  3185   	fcall	_EUSART_Write
  2348  0591                     l21:	
  2349  0591  0008               	return
  2350  0592                     __end_of_putch:	
  2351                           
  2352                           	psect	text9
  2353  0598                     __ptext9:	
  2354 ;; *************** function _EUSART_Write *****************
  2355 ;; Defined at:
  2356 ;;		line 132 in file "mcc_generated_files/eusart.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  txData          1    wreg     unsigned char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  txData          1    0[COMMON] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2370 ;;      Params:         0       0       0       0       0       0
  2371 ;;      Locals:         1       0       0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0
  2373 ;;      Totals:         1       0       0       0       0       0
  2374 ;;Total ram usage:        1 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_putch
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           
  2384                           ;psect for function _EUSART_Write
  2385  0598                     _EUSART_Write:	
  2386                           
  2387                           ;incstack = 0
  2388                           ; Regs used in _EUSART_Write: [wreg]
  2389                           ;EUSART_Write@txData stored from wreg
  2390  0598  00F0               	movwf	EUSART_Write@txData
  2391  0599                     l1121:	
  2392  0599                     l132:	
  2393                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  2394                           
  2395                           
  2396                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  2397  0599  0020               	movlb	0	; select bank0
  2398  059A  1E11               	btfss	17,4	;volatile
  2399  059B  2D9D               	goto	u261
  2400  059C  2D9E               	goto	u260
  2401  059D                     u261:	
  2402  059D  2D99               	goto	l132
  2403  059E                     u260:	
  2404  059E                     l1123:	
  2405                           
  2406                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  2407  059E  0870               	movf	EUSART_Write@txData,w
  2408  059F  0023               	movlb	3	; select bank3
  2409  05A0  009A               	movwf	26	;volatile
  2410  05A1                     l135:	
  2411  05A1  0008               	return
  2412  05A2                     __end_of_EUSART_Write:	
  2413                           
  2414                           	psect	text10
  2415  05AE                     __ptext10:	
  2416 ;; *************** function _SYSTEM_Initialize *****************
  2417 ;; Defined at:
  2418 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;		None
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, status,2, status,0, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2432 ;;      Params:         0       0       0       0       0       0
  2433 ;;      Locals:         0       0       0       0       0       0
  2434 ;;      Temps:          0       0       0       0       0       0
  2435 ;;      Totals:         0       0       0       0       0       0
  2436 ;;Total ram usage:        0 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    2
  2439 ;; This function calls:
  2440 ;;		_EUSART_Initialize
  2441 ;;		_OSCILLATOR_Initialize
  2442 ;;		_PIN_MANAGER_Initialize
  2443 ;;		_WDT_Initialize
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function _SYSTEM_Initialize
  2451  05AE                     _SYSTEM_Initialize:	
  2452  05AE                     l1243:	
  2453                           ;incstack = 0
  2454                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2455                           
  2456                           
  2457                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2458  05AE  3185  25CD  3185   	fcall	_PIN_MANAGER_Initialize
  2459                           
  2460                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2461  05B1  3185  25A2  3185   	fcall	_OSCILLATOR_Initialize
  2462                           
  2463                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2464  05B4  3185  2576  3185   	fcall	_WDT_Initialize
  2465                           
  2466                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  2467  05B7  3185  25E5  3185   	fcall	_EUSART_Initialize
  2468  05BA                     l174:	
  2469  05BA  0008               	return
  2470  05BB                     __end_of_SYSTEM_Initialize:	
  2471                           
  2472                           	psect	text11
  2473  0576                     __ptext11:	
  2474 ;; *************** function _WDT_Initialize *****************
  2475 ;; Defined at:
  2476 ;;		line 73 in file "mcc_generated_files/mcc.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;		None
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2490 ;;      Params:         0       0       0       0       0       0
  2491 ;;      Locals:         0       0       0       0       0       0
  2492 ;;      Temps:          0       0       0       0       0       0
  2493 ;;      Totals:         0       0       0       0       0       0
  2494 ;;Total ram usage:        0 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; This function calls:
  2497 ;;		Nothing
  2498 ;; This function is called by:
  2499 ;;		_SYSTEM_Initialize
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           
  2504                           ;psect for function _WDT_Initialize
  2505  0576                     _WDT_Initialize:	
  2506  0576                     l1035:	
  2507                           ;incstack = 0
  2508                           ; Regs used in _WDT_Initialize: [wreg]
  2509                           
  2510                           
  2511                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  2512  0576  3016               	movlw	22
  2513  0577  0021               	movlb	1	; select bank1
  2514  0578  0097               	movwf	23	;volatile
  2515  0579                     l183:	
  2516  0579  0008               	return
  2517  057A                     __end_of_WDT_Initialize:	
  2518                           
  2519                           	psect	text12
  2520  05CD                     __ptext12:	
  2521 ;; *************** function _PIN_MANAGER_Initialize *****************
  2522 ;; Defined at:
  2523 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;		None
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		wreg, status,2
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2537 ;;      Params:         0       0       0       0       0       0
  2538 ;;      Locals:         0       0       0       0       0       0
  2539 ;;      Temps:          0       0       0       0       0       0
  2540 ;;      Totals:         0       0       0       0       0       0
  2541 ;;Total ram usage:        0 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_SYSTEM_Initialize
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           
  2551                           ;psect for function _PIN_MANAGER_Initialize
  2552  05CD                     _PIN_MANAGER_Initialize:	
  2553  05CD                     l1013:	
  2554                           ;incstack = 0
  2555                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2556                           
  2557                           
  2558                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2559  05CD  0022               	movlb	2	; select bank2
  2560  05CE  018C               	clrf	12	;volatile
  2561                           
  2562                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2563  05CF  018D               	clrf	13	;volatile
  2564  05D0                     l1015:	
  2565                           
  2566                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFB;
  2567  05D0  30FB               	movlw	251
  2568  05D1  0021               	movlb	1	; select bank1
  2569  05D2  008C               	movwf	12	;volatile
  2570  05D3                     l1017:	
  2571                           
  2572                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  2573  05D3  30FF               	movlw	255
  2574  05D4  008D               	movwf	13	;volatile
  2575  05D5                     l1019:	
  2576                           
  2577                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xDA;
  2578  05D5  30DA               	movlw	218
  2579  05D6  0023               	movlb	3	; select bank3
  2580  05D7  008D               	movwf	13	;volatile
  2581  05D8                     l1021:	
  2582                           
  2583                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x19;
  2584  05D8  3019               	movlw	25
  2585  05D9  008C               	movwf	12	;volatile
  2586                           
  2587                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2588  05DA  0024               	movlb	4	; select bank4
  2589  05DB  018D               	clrf	13	;volatile
  2590                           
  2591                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2592  05DC  018C               	clrf	12	;volatile
  2593  05DD                     l1023:	
  2594                           
  2595                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2596  05DD  0021               	movlb	1	; select bank1
  2597  05DE  1795               	bsf	21,7	;volatile
  2598  05DF                     l1025:	
  2599                           
  2600                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x80;
  2601  05DF  3080               	movlw	128
  2602  05E0  0022               	movlb	2	; select bank2
  2603  05E1  009D               	movwf	29	;volatile
  2604  05E2                     l1027:	
  2605                           
  2606                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  2607  05E2  3001               	movlw	1
  2608  05E3  009E               	movwf	30	;volatile
  2609  05E4                     l208:	
  2610  05E4  0008               	return
  2611  05E5                     __end_of_PIN_MANAGER_Initialize:	
  2612                           
  2613                           	psect	text13
  2614  05A2                     __ptext13:	
  2615 ;; *************** function _OSCILLATOR_Initialize *****************
  2616 ;; Defined at:
  2617 ;;		line 59 in file "mcc_generated_files/mcc.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;		None
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2631 ;;      Params:         0       0       0       0       0       0
  2632 ;;      Locals:         0       0       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0
  2634 ;;      Totals:         0       0       0       0       0       0
  2635 ;;Total ram usage:        0 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_SYSTEM_Initialize
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           
  2645                           ;psect for function _OSCILLATOR_Initialize
  2646  05A2                     _OSCILLATOR_Initialize:	
  2647  05A2                     l1029:	
  2648                           ;incstack = 0
  2649                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2650                           
  2651                           
  2652                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  2653  05A2  3070               	movlw	112
  2654  05A3  0021               	movlb	1	; select bank1
  2655  05A4  0099               	movwf	25	;volatile
  2656  05A5                     l1031:	
  2657                           
  2658                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  2659  05A5  0198               	clrf	24	;volatile
  2660  05A6                     l1033:	
  2661                           
  2662                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  2663  05A6  0022               	movlb	2	; select bank2
  2664  05A7  0196               	clrf	22	;volatile
  2665  05A8                     l177:	
  2666                           ;mcc_generated_files/mcc.c: 69:     {;mcc_generated_files/mcc.c: 70:     }
  2667                           
  2668                           
  2669                           ;mcc_generated_files/mcc.c: 68:     while(PLLR == 0)
  2670  05A8  0021               	movlb	1	; select bank1
  2671  05A9  1F1A               	btfss	26,6	;volatile
  2672  05AA  2DAC               	goto	u141
  2673  05AB  2DAD               	goto	u140
  2674  05AC                     u141:	
  2675  05AC  2DA8               	goto	l177
  2676  05AD                     u140:	
  2677  05AD                     l180:	
  2678  05AD  0008               	return
  2679  05AE                     __end_of_OSCILLATOR_Initialize:	
  2680                           
  2681                           	psect	text14
  2682  05E5                     __ptext14:	
  2683 ;; *************** function _EUSART_Initialize *****************
  2684 ;; Defined at:
  2685 ;;		line 66 in file "mcc_generated_files/eusart.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0, pclath, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2699 ;;      Params:         0       0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0       0
  2702 ;;      Totals:         0       0       0       0       0       0
  2703 ;;Total ram usage:        0 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    1
  2706 ;; This function calls:
  2707 ;;		_EUSART_SetErrorHandler
  2708 ;;		_EUSART_SetFramingErrorHandler
  2709 ;;		_EUSART_SetOverrunErrorHandler
  2710 ;; This function is called by:
  2711 ;;		_SYSTEM_Initialize
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _EUSART_Initialize
  2717  05E5                     _EUSART_Initialize:	
  2718  05E5                     l1233:	
  2719                           ;incstack = 0
  2720                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2721                           
  2722                           
  2723                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  2724  05E5  3008               	movlw	8
  2725  05E6  0023               	movlb	3	; select bank3
  2726  05E7  009F               	movwf	31	;volatile
  2727                           
  2728                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  2729  05E8  3090               	movlw	144
  2730  05E9  009D               	movwf	29	;volatile
  2731                           
  2732                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  2733  05EA  3024               	movlw	36
  2734  05EB  009E               	movwf	30	;volatile
  2735                           
  2736                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x40;
  2737  05EC  3040               	movlw	64
  2738  05ED  009B               	movwf	27	;volatile
  2739                           
  2740                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x03;
  2741  05EE  3003               	movlw	3
  2742  05EF  009C               	movwf	28	;volatile
  2743  05F0                     l1235:	
  2744                           
  2745                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  2746  05F0  3000               	movlw	0
  2747  05F1  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  2748  05F2  3000               	movlw	0
  2749  05F3  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  2750  05F4  3185  2580  3185   	fcall	_EUSART_SetFramingErrorHandler
  2751  05F7                     l1237:	
  2752                           
  2753                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  2754  05F7  3000               	movlw	0
  2755  05F8  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2756  05F9  3000               	movlw	0
  2757  05FA  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2758  05FB  3185  2586  3185   	fcall	_EUSART_SetOverrunErrorHandler
  2759  05FE                     l1239:	
  2760                           
  2761                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  2762  05FE  3000               	movlw	0
  2763  05FF  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  2764  0600  3000               	movlw	0
  2765  0601  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  2766  0602  3185  257A  3185   	fcall	_EUSART_SetErrorHandler
  2767  0605                     l1241:	
  2768                           
  2769                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  2770  0605  0020               	movlb	0	; select bank0
  2771  0606  01EE               	clrf	_eusartRxLastError	;volatile
  2772  0607                     l108:	
  2773  0607  0008               	return
  2774  0608                     __end_of_EUSART_Initialize:	
  2775                           
  2776                           	psect	text15
  2777  0586                     __ptext15:	
  2778 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2779 ;; Defined at:
  2780 ;;		line 161 in file "mcc_generated_files/eusart.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2783 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2795 ;;      Params:         2       0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0       0
  2798 ;;      Totals:         2       0       0       0       0       0
  2799 ;;Total ram usage:        2 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_EUSART_Initialize
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           
  2809                           ;psect for function _EUSART_SetOverrunErrorHandler
  2810  0586                     _EUSART_SetOverrunErrorHandler:	
  2811  0586                     l1193:	
  2812                           ;incstack = 0
  2813                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2814                           
  2815                           
  2816                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  2817  0586  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  2818  0587  0021               	movlb	1	; select bank1
  2819  0588  00C9               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  2820  0589  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  2821  058A  00C8               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  2822  058B                     l150:	
  2823  058B  0008               	return
  2824  058C                     __end_of_EUSART_SetOverrunErrorHandler:	
  2825                           
  2826                           	psect	text16
  2827  0580                     __ptext16:	
  2828 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2829 ;; Defined at:
  2830 ;;		line 157 in file "mcc_generated_files/eusart.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2833 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2845 ;;      Params:         2       0       0       0       0       0
  2846 ;;      Locals:         0       0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0
  2848 ;;      Totals:         2       0       0       0       0       0
  2849 ;;Total ram usage:        2 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_EUSART_Initialize
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           
  2859                           ;psect for function _EUSART_SetFramingErrorHandler
  2860  0580                     _EUSART_SetFramingErrorHandler:	
  2861  0580                     l1191:	
  2862                           ;incstack = 0
  2863                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2864                           
  2865                           
  2866                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  2867  0580  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2868  0581  0021               	movlb	1	; select bank1
  2869  0582  00CB               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  2870  0583  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2871  0584  00CA               	movwf	_EUSART_FramingErrorHandler^(0+128)
  2872  0585                     l147:	
  2873  0585  0008               	return
  2874  0586                     __end_of_EUSART_SetFramingErrorHandler:	
  2875                           
  2876                           	psect	text17
  2877  057A                     __ptext17:	
  2878 ;; *************** function _EUSART_SetErrorHandler *****************
  2879 ;; Defined at:
  2880 ;;		line 165 in file "mcc_generated_files/eusart.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2883 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2895 ;;      Params:         2       0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0
  2898 ;;      Totals:         2       0       0       0       0       0
  2899 ;;Total ram usage:        2 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_EUSART_Initialize
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           
  2909                           ;psect for function _EUSART_SetErrorHandler
  2910  057A                     _EUSART_SetErrorHandler:	
  2911  057A                     l1195:	
  2912                           ;incstack = 0
  2913                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2914                           
  2915                           
  2916                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  2917  057A  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2918  057B  0021               	movlb	1	; select bank1
  2919  057C  00C7               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  2920  057D  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2921  057E  00C6               	movwf	_EUSART_ErrorHandler^(0+128)
  2922  057F                     l153:	
  2923  057F  0008               	return
  2924  0580                     __end_of_EUSART_SetErrorHandler:	
  2925  007E                     btemp	set	126	;btemp
  2926  007E                     wtemp0	set	126


Data Sizes:
    Strings     26
    Constant    0
    Data        0
    BSS         47
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      79
    BANK1            80      0      44
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[4]), STR_4(CODE[2]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    S889_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[4]), STR_4(CODE[2]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[4]), STR_4(CODE[2]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    recv_data@data	PTR unsigned char  size(1) Largest target is 48
		 -> main@data(BANK0[48]), 


Critical Paths under _main in COMMON

    _main->_printf
    _bit_find->_printf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_recv_data
    _recv_data->_bit_find
    _bit_find->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                49    49      0    4604
                                             27 BANK0     49    49      0
                  _SYSTEM_Initialize
                             _printf
                              _putch
                          _recv_data
                        _recv_reader
 ---------------------------------------------------------------------------------
 (1) _recv_reader                                          3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _recv_data                                            6     5      1    2296
                                             21 BANK0      6     5      1
                           _bit_find
                              _putch
 ---------------------------------------------------------------------------------
 (2) _bit_find                                             3     3      0    1986
                                             18 BANK0      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               6     4      2    1916
                                             13 COMMON     1     1      0
                                             13 BANK0      5     3      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     5      3    1484
                                              5 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           40    38      2    1160
                                             10 COMMON     3     1      2
                                              0 BANK0      5     5      0
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     760
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write
   _putch
     _EUSART_Write
   _recv_data
     _bit_find
       _printf
         _vfprintf
           _vfpfcnvrt
             _fputc
               _putch
                 _EUSART_Write
     _putch
       _EUSART_Write
   _recv_reader

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      89       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4C      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      2C       8       55.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      89      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat May 02 00:15:41 2020

                                  __CFG_CP$OFF 0000                                             l21 0591  
                                           l41 06D3                                             l42 06CE  
                                           l60 075F                                             l52 065C  
                                           l59 0774                                            l108 0607  
                                          l132 0599                                            l150 058B  
                                          l135 05A1                                            l208 05E4  
                                          l153 057F                                            l147 0585  
                                          l180 05AD                                            l174 05BA  
                                          l183 0579                                            l177 05A8  
                                          l390 07F0                                            l396 062F  
                                          l862 0712                                            l877 05CC  
                                          u140 05AD                                            u300 070A  
                                          u141 05AC                                            u301 0709  
                                          u310 0788                                            u150 06A7  
                                          u311 0787                                            u151 06A6  
                                          u320 07AB                                            u400 065C  
                                          u160 06B4                                            u305 0706  
                                          u321 07AA                                            u401 065B  
                                          u161 06B3                                            u330 062B  
                                          u170 06CD                                            u410 067C  
                                          u331 062A                                            u171 06CC  
                                          u411 067B                                            u260 059E  
                                          u340 0724                                            u180 06D3  
                                          u261 059D                                            u341 0723  
                                          u181 06D2                                            u165 06B0  
                                          u270 06D9                                            u350 0731  
                                          u271 06D8                                            u351 0730  
                                          u175 06C9                                            u280 06DE  
                                          u360 0755                                            u281 06DD  
                                          u361 0754                                            u290 06ED  
                                          u370 0764                                   __CFG_CPD$OFF 0000  
                                          u291 06EC                                            u371 0763  
                                          u355 072D                                            u380 0771  
                                          u381 0770                                            u365 0751  
                                          u390 0641                                            u391 0640  
                                          u447 0674                                            u385 076D  
                                          u457 069F                                            u467 06BD  
                                          u477 071C                                            u487 0744  
               ?_EUSART_SetFramingErrorHandler 0070                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
                                 __CFG_LVP$OFF 0000                                           l1021 05D8  
                                         l1013 05CD                                           l1031 05A5  
                                         l1023 05DD                                           l1015 05D0  
                                         l1033 05A6                                           l1025 05DF  
                                         l1017 05D3                                           l1121 0599  
                                         l1201 071F                                           l1041 069A  
                                         l1027 05E2                                           l1019 05D5  
                                         l1035 0576                                           l1123 059E  
                                         l1131 06DE                                           l1211 073B  
                                         l1203 0724                                           l1051 06B8  
                                         l1043 06A2                                           l1029 05A2  
                                         l1125 058D                                           l1133 06E3  
                                         l1141 0776                                           l1221 0764  
                                         l1213 073F                                           l1205 0731  
                                         l1045 06A7                                           l1135 06ED  
                                         l1127 06D4                                           l1151 07AB  
                                         l1143 0788                                           l1223 0771  
                                         l1215 0755                                           l1207 0739  
                                         l1039 0697                                           l1241 0605  
                                         l1233 05E5                                           l1137 070A  
                                         l1129 06D9                                           l1161 07CB  
                                         l1153 07B3                                           l1145 0790  
                                         l1217 075D                                           l1049 06B5  
                                         l1235 05F0                                           l1243 05AE  
                                         l1155 07BE                                           l1147 0795  
                                         l1237 05F7                                           l1149 0799  
                                         l1165 07CE                                           l1181 062B  
                                         l1173 060A                                           l1229 0773  
                                         l1253 0642                                           l1245 0632  
                                         l1261 065D                                           l1191 0580  
                                         l1239 05FE                                           l1167 07E7  
                                         l1159 07C3                                           l1175 060E  
                                         l1255 064C                                           l1247 0634  
                                         l1271 0677                                           l1263 0660  
                                         l1193 0586                                           l1177 0611  
                                         l1185 05BB                                           l1257 0651  
                                         l1249 063B                                           l1273 067C  
                                         l1265 0668                                           l1195 057A  
                                         l1179 0622                                           l1187 05C0  
                                         l1259 0656                                           l1275 067F  
                                         l1267 0670                                           l1197 0713  
                                         l1277 0688                                           l1269 0673  
                                         l1199 0717                                           STR_1 0800  
                                         STR_2 0815                                           STR_3 0815  
                                         STR_4 0818                                           STR_5 0811  
                                         _LATA 010C                                           _LATB 010D  
                                         _PLLR 04D6                                           _WPUA 020C  
                                         _WPUB 020D                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           _dbuf 00A0  
                                         _main 065D                                           _prec 00C2  
                                         _nout 006C                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                           start 0002  
                                __CFG_MCLRE$ON 0000                                  __CFG_PLLEN$ON 0000  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 000C  
                __end_of_OSCILLATOR_Initialize 05AE                                          ?_main 0070  
                                __CFG_WDTE$OFF 0000                                          _RCREG 0199  
                                        _RCSTA 019D                                   vfpfcnvrt@fmt 007A  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                                        _flags 00C4                                 _WDT_Initialize 0576  
                                        _fputc 06D4                                          _width 00C0  
                                        _putch 058C                                          status 0003  
                                        wtemp0 007E                                __initialization 07F1  
                                 __end_of_main 0697                                 ??_EUSART_Write 0070  
                                 ?_recv_reader 0070                                         ??_main 003B  
                       __end_of_WDT_Initialize 057A              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 00C8                                         ?_fputc 0072  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _BORCON 0116  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                               __CFG_PWRTE$OFF 0000                               __end_of_bit_find 0775  
                                 vfprintf@cfmt 002B                                 __CFG_STVREN$ON 0000  
                                       _printf 05BB                                         fputc@c 0072  
                              ?_WDT_Initialize 0070                               __end_of_vfprintf 0630  
                            _SYSTEM_Initialize 05AE                        __end_of__initialization 07FD  
                           ?_SYSTEM_Initialize 0070                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0072                                  recv_data@data 0038  
                                __end_of_fputc 0713                                  recv_data@size 0035  
                                __end_of_putch 0592                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 0072                                        ??_fputc 0075  
                    __end_of_SYSTEM_Initialize 05BB                                        ??_putch 0071  
                                   __pbssBANK0 006C                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 05A2                                     __pmaintext 065D  
                           __size_of_recv_data 002D                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                      ?_printf 002D                           __size_of_recv_reader 003D  
                           __size_of_vfpfcnvrt 007C                                      ?_bit_find 0070  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0072  
                                    ?_vfprintf 0025                                        __ptext1 0697  
                                      __ptext2 0630                                        __ptext3 0713  
                                      __ptext4 05BB                                        __ptext5 0608  
                                      __ptext6 0775                                        __ptext7 06D4  
                                      __ptext8 058C                                        __ptext9 0598  
                              __size_of_printf 0012                          _OSCILLATOR_Initialize 05A2  
                     ??_PIN_MANAGER_Initialize 0070                                     ??_bit_find 0032  
                            __end_of_recv_data 065D                     __size_of_SYSTEM_Initialize 000D  
                                      clrloop0 0593                           end_of_initialization 07FD  
        __end_of_EUSART_SetOverrunErrorHandler 058C         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 0586                                        fputc@fp 0074  
                            _EUSART_Initialize 05E5                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 07F1                                      _RCSTAbits 019D  
                                   ??_vfprintf 0028                            ??_EUSART_Initialize 0072  
                             ??_WDT_Initialize 0070                                      _PORTAbits 000C  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 000A  
              __size_of_EUSART_SetErrorHandler 0006                      __end_of_EUSART_Initialize 0608  
                                    _TXSTAbits 019E                     _EUSART_DefaultErrorHandler 0000  
                                  vfpfcnvrt@ap 007B                                    vfpfcnvrt@fp 007C  
                                 _EUSART_Write 0598                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_printf 05CD                            start_initialization 07F1  
              __size_of_PIN_MANAGER_Initialize 0018                 ?_EUSART_SetOverrunErrorHandler 0070  
                                  vfprintf@fmt 0025                     _EUSART_FramingErrorHandler 00CA  
                       _EUSART_SetErrorHandler 057A                                       ??_printf 007D  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                            __size_of_bit_find 0062                     __size_of_EUSART_Initialize 0023  
                                bit_find@width 0033                                     recv_data@a 003A  
                                   recv_data@i 0039                         _PIN_MANAGER_Initialize 05CD  
                             recv_reader@width 0071                                  ??_recv_reader 0070  
                            __size_of_vfprintf 0028                                 __size_of_fputc 003F  
                               __size_of_putch 0006                                      _recv_data 0630  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0070  
                                    clear_ram0 0592                              _eusartRxLastError 006E  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0072  
            _EUSART_DefaultOverrunErrorHandler 0000                                      _vfpfcnvrt 0775  
                          __end_of_recv_reader 06D4                                     ?_recv_data 0035  
                                   vfprintf@ap 0027                                     vfprintf@fp 002A  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 00C6  
                                   ?_vfpfcnvrt 007A                                       _bit_find 0713  
                                     __ptext10 05AE                                       __ptext11 0576  
                                     __ptext12 05CD                                       __ptext13 05A2  
                                     __ptext14 05E5                                       __ptext15 0586  
                                     __ptext16 0580                                       __ptext17 057A  
                                __size_of_main 003A                        ?_EUSART_SetErrorHandler 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                       _vfprintf 0608  
                                     main@data 003C                                      printf@fmt 002D  
        __end_of_EUSART_SetFramingErrorHandler 0586         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0580                                    _recv_reader 0697  
                                    putch@data 0071                        __size_of_WDT_Initialize 0004  
                                  ??_recv_data 0036                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0580                              __CFG_CLKOUTEN$OFF 0000  
                                     printf@ap 0031  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                                  ??_vfpfcnvrt 0020                                  __pstringtext1 0800  
                                __pstringtext2 0811                                  __pstringtext3 0815  
                                __pstringtext4 0818                                  __pstringtext5 0000  
                           EUSART_Write@txData 0070                 __end_of_PIN_MANAGER_Initialize 05E5  
