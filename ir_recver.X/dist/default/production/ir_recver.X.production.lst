

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun May 17 11:33:47 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	stringtext11,global,class=STRCODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.10
    43                           ; Generated 31/07/2019 GMT
    44                           ; 
    45                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F1827 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  0111                     	;# 
   125  0112                     	;# 
   126  0113                     	;# 
   127  0114                     	;# 
   128  0115                     	;# 
   129  0116                     	;# 
   130  0117                     	;# 
   131  0118                     	;# 
   132  0119                     	;# 
   133  011A                     	;# 
   134  011B                     	;# 
   135  011D                     	;# 
   136  011E                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0191                     	;# 
   140  0191                     	;# 
   141  0192                     	;# 
   142  0193                     	;# 
   143  0193                     	;# 
   144  0193                     	;# 
   145  0194                     	;# 
   146  0195                     	;# 
   147  0196                     	;# 
   148  0199                     	;# 
   149  019A                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019C                     	;# 
   155  019C                     	;# 
   156  019D                     	;# 
   157  019E                     	;# 
   158  019F                     	;# 
   159  020C                     	;# 
   160  020D                     	;# 
   161  0211                     	;# 
   162  0211                     	;# 
   163  0212                     	;# 
   164  0212                     	;# 
   165  0213                     	;# 
   166  0213                     	;# 
   167  0214                     	;# 
   168  0214                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0216                     	;# 
   173  0216                     	;# 
   174  0217                     	;# 
   175  0217                     	;# 
   176  0219                     	;# 
   177  021A                     	;# 
   178  021B                     	;# 
   179  021C                     	;# 
   180  021D                     	;# 
   181  021E                     	;# 
   182  021F                     	;# 
   183  0291                     	;# 
   184  0291                     	;# 
   185  0292                     	;# 
   186  0293                     	;# 
   187  0294                     	;# 
   188  0295                     	;# 
   189  0295                     	;# 
   190  0296                     	;# 
   191  0298                     	;# 
   192  0298                     	;# 
   193  0299                     	;# 
   194  029A                     	;# 
   195  029B                     	;# 
   196  029C                     	;# 
   197  029C                     	;# 
   198  029D                     	;# 
   199  029E                     	;# 
   200  029E                     	;# 
   201  0311                     	;# 
   202  0311                     	;# 
   203  0312                     	;# 
   204  0313                     	;# 
   205  0318                     	;# 
   206  0318                     	;# 
   207  0319                     	;# 
   208  031A                     	;# 
   209  0394                     	;# 
   210  0395                     	;# 
   211  0396                     	;# 
   212  039A                     	;# 
   213  039C                     	;# 
   214  039D                     	;# 
   215  039E                     	;# 
   216  039F                     	;# 
   217  0415                     	;# 
   218  0416                     	;# 
   219  0417                     	;# 
   220  041C                     	;# 
   221  041D                     	;# 
   222  041E                     	;# 
   223  0FE4                     	;# 
   224  0FE5                     	;# 
   225  0FE6                     	;# 
   226  0FE7                     	;# 
   227  0FE8                     	;# 
   228  0FE9                     	;# 
   229  0FEA                     	;# 
   230  0FEB                     	;# 
   231  0FED                     	;# 
   232  0FEE                     	;# 
   233  0FEF                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  0111                     	;# 
   283  0112                     	;# 
   284  0113                     	;# 
   285  0114                     	;# 
   286  0115                     	;# 
   287  0116                     	;# 
   288  0117                     	;# 
   289  0118                     	;# 
   290  0119                     	;# 
   291  011A                     	;# 
   292  011B                     	;# 
   293  011D                     	;# 
   294  011E                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0191                     	;# 
   298  0191                     	;# 
   299  0192                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0193                     	;# 
   303  0194                     	;# 
   304  0195                     	;# 
   305  0196                     	;# 
   306  0199                     	;# 
   307  019A                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019C                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020C                     	;# 
   318  020D                     	;# 
   319  0211                     	;# 
   320  0211                     	;# 
   321  0212                     	;# 
   322  0212                     	;# 
   323  0213                     	;# 
   324  0213                     	;# 
   325  0214                     	;# 
   326  0214                     	;# 
   327  0215                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0216                     	;# 
   331  0216                     	;# 
   332  0217                     	;# 
   333  0217                     	;# 
   334  0219                     	;# 
   335  021A                     	;# 
   336  021B                     	;# 
   337  021C                     	;# 
   338  021D                     	;# 
   339  021E                     	;# 
   340  021F                     	;# 
   341  0291                     	;# 
   342  0291                     	;# 
   343  0292                     	;# 
   344  0293                     	;# 
   345  0294                     	;# 
   346  0295                     	;# 
   347  0295                     	;# 
   348  0296                     	;# 
   349  0298                     	;# 
   350  0298                     	;# 
   351  0299                     	;# 
   352  029A                     	;# 
   353  029B                     	;# 
   354  029C                     	;# 
   355  029C                     	;# 
   356  029D                     	;# 
   357  029E                     	;# 
   358  029E                     	;# 
   359  0311                     	;# 
   360  0311                     	;# 
   361  0312                     	;# 
   362  0313                     	;# 
   363  0318                     	;# 
   364  0318                     	;# 
   365  0319                     	;# 
   366  031A                     	;# 
   367  0394                     	;# 
   368  0395                     	;# 
   369  0396                     	;# 
   370  039A                     	;# 
   371  039C                     	;# 
   372  039D                     	;# 
   373  039E                     	;# 
   374  039F                     	;# 
   375  0415                     	;# 
   376  0416                     	;# 
   377  0417                     	;# 
   378  041C                     	;# 
   379  041D                     	;# 
   380  041E                     	;# 
   381  0FE4                     	;# 
   382  0FE5                     	;# 
   383  0FE6                     	;# 
   384  0FE7                     	;# 
   385  0FE8                     	;# 
   386  0FE9                     	;# 
   387  0FEA                     	;# 
   388  0FEB                     	;# 
   389  0FED                     	;# 
   390  0FEE                     	;# 
   391  0FEF                     	;# 
   392  0000                     	;# 
   393  0001                     	;# 
   394  0002                     	;# 
   395  0003                     	;# 
   396  0004                     	;# 
   397  0005                     	;# 
   398  0006                     	;# 
   399  0007                     	;# 
   400  0008                     	;# 
   401  0009                     	;# 
   402  000A                     	;# 
   403  000B                     	;# 
   404  000C                     	;# 
   405  000D                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  0111                     	;# 
   441  0112                     	;# 
   442  0113                     	;# 
   443  0114                     	;# 
   444  0115                     	;# 
   445  0116                     	;# 
   446  0117                     	;# 
   447  0118                     	;# 
   448  0119                     	;# 
   449  011A                     	;# 
   450  011B                     	;# 
   451  011D                     	;# 
   452  011E                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0191                     	;# 
   456  0191                     	;# 
   457  0192                     	;# 
   458  0193                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0194                     	;# 
   462  0195                     	;# 
   463  0196                     	;# 
   464  0199                     	;# 
   465  019A                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019C                     	;# 
   471  019C                     	;# 
   472  019D                     	;# 
   473  019E                     	;# 
   474  019F                     	;# 
   475  020C                     	;# 
   476  020D                     	;# 
   477  0211                     	;# 
   478  0211                     	;# 
   479  0212                     	;# 
   480  0212                     	;# 
   481  0213                     	;# 
   482  0213                     	;# 
   483  0214                     	;# 
   484  0214                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0215                     	;# 
   488  0216                     	;# 
   489  0216                     	;# 
   490  0217                     	;# 
   491  0217                     	;# 
   492  0219                     	;# 
   493  021A                     	;# 
   494  021B                     	;# 
   495  021C                     	;# 
   496  021D                     	;# 
   497  021E                     	;# 
   498  021F                     	;# 
   499  0291                     	;# 
   500  0291                     	;# 
   501  0292                     	;# 
   502  0293                     	;# 
   503  0294                     	;# 
   504  0295                     	;# 
   505  0295                     	;# 
   506  0296                     	;# 
   507  0298                     	;# 
   508  0298                     	;# 
   509  0299                     	;# 
   510  029A                     	;# 
   511  029B                     	;# 
   512  029C                     	;# 
   513  029C                     	;# 
   514  029D                     	;# 
   515  029E                     	;# 
   516  029E                     	;# 
   517  0311                     	;# 
   518  0311                     	;# 
   519  0312                     	;# 
   520  0313                     	;# 
   521  0318                     	;# 
   522  0318                     	;# 
   523  0319                     	;# 
   524  031A                     	;# 
   525  0394                     	;# 
   526  0395                     	;# 
   527  0396                     	;# 
   528  039A                     	;# 
   529  039C                     	;# 
   530  039D                     	;# 
   531  039E                     	;# 
   532  039F                     	;# 
   533  0415                     	;# 
   534  0416                     	;# 
   535  0417                     	;# 
   536  041C                     	;# 
   537  041D                     	;# 
   538  041E                     	;# 
   539  0FE4                     	;# 
   540  0FE5                     	;# 
   541  0FE6                     	;# 
   542  0FE7                     	;# 
   543  0FE8                     	;# 
   544  0FE9                     	;# 
   545  0FEA                     	;# 
   546  0FEB                     	;# 
   547  0FED                     	;# 
   548  0FEE                     	;# 
   549  0FEF                     	;# 
   550  0000                     	;# 
   551  0001                     	;# 
   552  0002                     	;# 
   553  0003                     	;# 
   554  0004                     	;# 
   555  0005                     	;# 
   556  0006                     	;# 
   557  0007                     	;# 
   558  0008                     	;# 
   559  0009                     	;# 
   560  000A                     	;# 
   561  000B                     	;# 
   562  000C                     	;# 
   563  000D                     	;# 
   564  0011                     	;# 
   565  0012                     	;# 
   566  0013                     	;# 
   567  0014                     	;# 
   568  0015                     	;# 
   569  0016                     	;# 
   570  0016                     	;# 
   571  0017                     	;# 
   572  0018                     	;# 
   573  0019                     	;# 
   574  001A                     	;# 
   575  001B                     	;# 
   576  001C                     	;# 
   577  001E                     	;# 
   578  001F                     	;# 
   579  008C                     	;# 
   580  008D                     	;# 
   581  0091                     	;# 
   582  0092                     	;# 
   583  0093                     	;# 
   584  0094                     	;# 
   585  0095                     	;# 
   586  0096                     	;# 
   587  0097                     	;# 
   588  0098                     	;# 
   589  0099                     	;# 
   590  009A                     	;# 
   591  009B                     	;# 
   592  009B                     	;# 
   593  009C                     	;# 
   594  009D                     	;# 
   595  009E                     	;# 
   596  010C                     	;# 
   597  010D                     	;# 
   598  0111                     	;# 
   599  0112                     	;# 
   600  0113                     	;# 
   601  0114                     	;# 
   602  0115                     	;# 
   603  0116                     	;# 
   604  0117                     	;# 
   605  0118                     	;# 
   606  0119                     	;# 
   607  011A                     	;# 
   608  011B                     	;# 
   609  011D                     	;# 
   610  011E                     	;# 
   611  018C                     	;# 
   612  018D                     	;# 
   613  0191                     	;# 
   614  0191                     	;# 
   615  0192                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0193                     	;# 
   619  0194                     	;# 
   620  0195                     	;# 
   621  0196                     	;# 
   622  0199                     	;# 
   623  019A                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019C                     	;# 
   629  019C                     	;# 
   630  019D                     	;# 
   631  019E                     	;# 
   632  019F                     	;# 
   633  020C                     	;# 
   634  020D                     	;# 
   635  0211                     	;# 
   636  0211                     	;# 
   637  0212                     	;# 
   638  0212                     	;# 
   639  0213                     	;# 
   640  0213                     	;# 
   641  0214                     	;# 
   642  0214                     	;# 
   643  0215                     	;# 
   644  0215                     	;# 
   645  0215                     	;# 
   646  0216                     	;# 
   647  0216                     	;# 
   648  0217                     	;# 
   649  0217                     	;# 
   650  0219                     	;# 
   651  021A                     	;# 
   652  021B                     	;# 
   653  021C                     	;# 
   654  021D                     	;# 
   655  021E                     	;# 
   656  021F                     	;# 
   657  0291                     	;# 
   658  0291                     	;# 
   659  0292                     	;# 
   660  0293                     	;# 
   661  0294                     	;# 
   662  0295                     	;# 
   663  0295                     	;# 
   664  0296                     	;# 
   665  0298                     	;# 
   666  0298                     	;# 
   667  0299                     	;# 
   668  029A                     	;# 
   669  029B                     	;# 
   670  029C                     	;# 
   671  029C                     	;# 
   672  029D                     	;# 
   673  029E                     	;# 
   674  029E                     	;# 
   675  0311                     	;# 
   676  0311                     	;# 
   677  0312                     	;# 
   678  0313                     	;# 
   679  0318                     	;# 
   680  0318                     	;# 
   681  0319                     	;# 
   682  031A                     	;# 
   683  0394                     	;# 
   684  0395                     	;# 
   685  0396                     	;# 
   686  039A                     	;# 
   687  039C                     	;# 
   688  039D                     	;# 
   689  039E                     	;# 
   690  039F                     	;# 
   691  0415                     	;# 
   692  0416                     	;# 
   693  0417                     	;# 
   694  041C                     	;# 
   695  041D                     	;# 
   696  041E                     	;# 
   697  0FE4                     	;# 
   698  0FE5                     	;# 
   699  0FE6                     	;# 
   700  0FE7                     	;# 
   701  0FE8                     	;# 
   702  0FE9                     	;# 
   703  0FEA                     	;# 
   704  0FEB                     	;# 
   705  0FED                     	;# 
   706  0FEE                     	;# 
   707  0FEF                     	;# 
   708  0000                     	;# 
   709  0001                     	;# 
   710  0002                     	;# 
   711  0003                     	;# 
   712  0004                     	;# 
   713  0005                     	;# 
   714  0006                     	;# 
   715  0007                     	;# 
   716  0008                     	;# 
   717  0009                     	;# 
   718  000A                     	;# 
   719  000B                     	;# 
   720  000C                     	;# 
   721  000D                     	;# 
   722  0011                     	;# 
   723  0012                     	;# 
   724  0013                     	;# 
   725  0014                     	;# 
   726  0015                     	;# 
   727  0016                     	;# 
   728  0016                     	;# 
   729  0017                     	;# 
   730  0018                     	;# 
   731  0019                     	;# 
   732  001A                     	;# 
   733  001B                     	;# 
   734  001C                     	;# 
   735  001E                     	;# 
   736  001F                     	;# 
   737  008C                     	;# 
   738  008D                     	;# 
   739  0091                     	;# 
   740  0092                     	;# 
   741  0093                     	;# 
   742  0094                     	;# 
   743  0095                     	;# 
   744  0096                     	;# 
   745  0097                     	;# 
   746  0098                     	;# 
   747  0099                     	;# 
   748  009A                     	;# 
   749  009B                     	;# 
   750  009B                     	;# 
   751  009C                     	;# 
   752  009D                     	;# 
   753  009E                     	;# 
   754  010C                     	;# 
   755  010D                     	;# 
   756  0111                     	;# 
   757  0112                     	;# 
   758  0113                     	;# 
   759  0114                     	;# 
   760  0115                     	;# 
   761  0116                     	;# 
   762  0117                     	;# 
   763  0118                     	;# 
   764  0119                     	;# 
   765  011A                     	;# 
   766  011B                     	;# 
   767  011D                     	;# 
   768  011E                     	;# 
   769  018C                     	;# 
   770  018D                     	;# 
   771  0191                     	;# 
   772  0191                     	;# 
   773  0192                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0194                     	;# 
   778  0195                     	;# 
   779  0196                     	;# 
   780  0199                     	;# 
   781  019A                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019C                     	;# 
   787  019C                     	;# 
   788  019D                     	;# 
   789  019E                     	;# 
   790  019F                     	;# 
   791  020C                     	;# 
   792  020D                     	;# 
   793  0211                     	;# 
   794  0211                     	;# 
   795  0212                     	;# 
   796  0212                     	;# 
   797  0213                     	;# 
   798  0213                     	;# 
   799  0214                     	;# 
   800  0214                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0216                     	;# 
   805  0216                     	;# 
   806  0217                     	;# 
   807  0217                     	;# 
   808  0219                     	;# 
   809  021A                     	;# 
   810  021B                     	;# 
   811  021C                     	;# 
   812  021D                     	;# 
   813  021E                     	;# 
   814  021F                     	;# 
   815  0291                     	;# 
   816  0291                     	;# 
   817  0292                     	;# 
   818  0293                     	;# 
   819  0294                     	;# 
   820  0295                     	;# 
   821  0295                     	;# 
   822  0296                     	;# 
   823  0298                     	;# 
   824  0298                     	;# 
   825  0299                     	;# 
   826  029A                     	;# 
   827  029B                     	;# 
   828  029C                     	;# 
   829  029C                     	;# 
   830  029D                     	;# 
   831  029E                     	;# 
   832  029E                     	;# 
   833  0311                     	;# 
   834  0311                     	;# 
   835  0312                     	;# 
   836  0313                     	;# 
   837  0318                     	;# 
   838  0318                     	;# 
   839  0319                     	;# 
   840  031A                     	;# 
   841  0394                     	;# 
   842  0395                     	;# 
   843  0396                     	;# 
   844  039A                     	;# 
   845  039C                     	;# 
   846  039D                     	;# 
   847  039E                     	;# 
   848  039F                     	;# 
   849  0415                     	;# 
   850  0416                     	;# 
   851  0417                     	;# 
   852  041C                     	;# 
   853  041D                     	;# 
   854  041E                     	;# 
   855  0FE4                     	;# 
   856  0FE5                     	;# 
   857  0FE6                     	;# 
   858  0FE7                     	;# 
   859  0FE8                     	;# 
   860  0FE9                     	;# 
   861  0FEA                     	;# 
   862  0FEB                     	;# 
   863  0FED                     	;# 
   864  0FEE                     	;# 
   865  0FEF                     	;# 
   866  0000                     	;# 
   867  0001                     	;# 
   868  0002                     	;# 
   869  0003                     	;# 
   870  0004                     	;# 
   871  0005                     	;# 
   872  0006                     	;# 
   873  0007                     	;# 
   874  0008                     	;# 
   875  0009                     	;# 
   876  000A                     	;# 
   877  000B                     	;# 
   878  000C                     	;# 
   879  000D                     	;# 
   880  0011                     	;# 
   881  0012                     	;# 
   882  0013                     	;# 
   883  0014                     	;# 
   884  0015                     	;# 
   885  0016                     	;# 
   886  0016                     	;# 
   887  0017                     	;# 
   888  0018                     	;# 
   889  0019                     	;# 
   890  001A                     	;# 
   891  001B                     	;# 
   892  001C                     	;# 
   893  001E                     	;# 
   894  001F                     	;# 
   895  008C                     	;# 
   896  008D                     	;# 
   897  0091                     	;# 
   898  0092                     	;# 
   899  0093                     	;# 
   900  0094                     	;# 
   901  0095                     	;# 
   902  0096                     	;# 
   903  0097                     	;# 
   904  0098                     	;# 
   905  0099                     	;# 
   906  009A                     	;# 
   907  009B                     	;# 
   908  009B                     	;# 
   909  009C                     	;# 
   910  009D                     	;# 
   911  009E                     	;# 
   912  010C                     	;# 
   913  010D                     	;# 
   914  0111                     	;# 
   915  0112                     	;# 
   916  0113                     	;# 
   917  0114                     	;# 
   918  0115                     	;# 
   919  0116                     	;# 
   920  0117                     	;# 
   921  0118                     	;# 
   922  0119                     	;# 
   923  011A                     	;# 
   924  011B                     	;# 
   925  011D                     	;# 
   926  011E                     	;# 
   927  018C                     	;# 
   928  018D                     	;# 
   929  0191                     	;# 
   930  0191                     	;# 
   931  0192                     	;# 
   932  0193                     	;# 
   933  0193                     	;# 
   934  0193                     	;# 
   935  0194                     	;# 
   936  0195                     	;# 
   937  0196                     	;# 
   938  0199                     	;# 
   939  019A                     	;# 
   940  019B                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019C                     	;# 
   945  019C                     	;# 
   946  019D                     	;# 
   947  019E                     	;# 
   948  019F                     	;# 
   949  020C                     	;# 
   950  020D                     	;# 
   951  0211                     	;# 
   952  0211                     	;# 
   953  0212                     	;# 
   954  0212                     	;# 
   955  0213                     	;# 
   956  0213                     	;# 
   957  0214                     	;# 
   958  0214                     	;# 
   959  0215                     	;# 
   960  0215                     	;# 
   961  0215                     	;# 
   962  0216                     	;# 
   963  0216                     	;# 
   964  0217                     	;# 
   965  0217                     	;# 
   966  0219                     	;# 
   967  021A                     	;# 
   968  021B                     	;# 
   969  021C                     	;# 
   970  021D                     	;# 
   971  021E                     	;# 
   972  021F                     	;# 
   973  0291                     	;# 
   974  0291                     	;# 
   975  0292                     	;# 
   976  0293                     	;# 
   977  0294                     	;# 
   978  0295                     	;# 
   979  0295                     	;# 
   980  0296                     	;# 
   981  0298                     	;# 
   982  0298                     	;# 
   983  0299                     	;# 
   984  029A                     	;# 
   985  029B                     	;# 
   986  029C                     	;# 
   987  029C                     	;# 
   988  029D                     	;# 
   989  029E                     	;# 
   990  029E                     	;# 
   991  0311                     	;# 
   992  0311                     	;# 
   993  0312                     	;# 
   994  0313                     	;# 
   995  0318                     	;# 
   996  0318                     	;# 
   997  0319                     	;# 
   998  031A                     	;# 
   999  0394                     	;# 
  1000  0395                     	;# 
  1001  0396                     	;# 
  1002  039A                     	;# 
  1003  039C                     	;# 
  1004  039D                     	;# 
  1005  039E                     	;# 
  1006  039F                     	;# 
  1007  0415                     	;# 
  1008  0416                     	;# 
  1009  0417                     	;# 
  1010  041C                     	;# 
  1011  041D                     	;# 
  1012  041E                     	;# 
  1013  0FE4                     	;# 
  1014  0FE5                     	;# 
  1015  0FE6                     	;# 
  1016  0FE7                     	;# 
  1017  0FE8                     	;# 
  1018  0FE9                     	;# 
  1019  0FEA                     	;# 
  1020  0FEB                     	;# 
  1021  0FED                     	;# 
  1022  0FEE                     	;# 
  1023  0FEF                     	;# 
  1024                           
  1025 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1026  0000                     
  1027 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1028  0000                     
  1029 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1030  0000                     
  1031                           	psect	stringtext1
  1032  0800                     __pstringtext1:	
  1033  0800                     _dpowers:	
  1034  0800  3401               	retlw	1
  1035  0801  3400               	retlw	0
  1036  0802  340A               	retlw	10
  1037  0803  3400               	retlw	0
  1038  0804  3464               	retlw	100
  1039  0805  3400               	retlw	0
  1040  0806  34E8               	retlw	232
  1041  0807  3403               	retlw	3
  1042  0808  3410               	retlw	16
  1043  0809  3427               	retlw	39
  1044  080A                     __end_of_dpowers:	
  1045  000C                     _PORTAbits	set	12
  1046  0011                     _PIR1bits	set	17
  1047  0095                     _OPTION_REGbits	set	149
  1048  008D                     _TRISB	set	141
  1049  008C                     _TRISA	set	140
  1050  0097                     _WDTCON	set	151
  1051  0098                     _OSCTUNE	set	152
  1052  0099                     _OSCCON	set	153
  1053  04D6                     _PLLR	set	1238
  1054  010C                     _LATAbits	set	268
  1055  011E                     _APFCON1	set	286
  1056  011D                     _APFCON0	set	285
  1057  010D                     _LATB	set	269
  1058  010C                     _LATA	set	268
  1059  0116                     _BORCON	set	278
  1060  018C                     _ANSELA	set	396
  1061  018D                     _ANSELB	set	397
  1062  019A                     _TXREG	set	410
  1063  0199                     _RCREG	set	409
  1064  019D                     _RCSTAbits	set	413
  1065  019E                     _TXSTAbits	set	414
  1066  019C                     _SPBRGH	set	412
  1067  019B                     _SPBRGL	set	411
  1068  019E                     _TXSTA	set	414
  1069  019D                     _RCSTA	set	413
  1070  019F                     _BAUDCON	set	415
  1071  020C                     _WPUA	set	524
  1072  020D                     _WPUB	set	525
  1073  080A                     STR_5:	
  1074  080A  344E               	retlw	78	;'N'
  1075  080B  3445               	retlw	69	;'E'
  1076  080C  3443               	retlw	67	;'C'
  1077  080D  343A               	retlw	58	;':'
  1078  080E  344E               	retlw	78	;'N'
  1079  080F  3420               	retlw	32	;' '
  1080  0810  347C               	retlw	124	;'|'
  1081  0811  3420               	retlw	32	;' '
  1082  0812  3441               	retlw	65	;'A'
  1083  0813  3445               	retlw	69	;'E'
  1084  0814  3448               	retlw	72	;'H'
  1085  0815  3441               	retlw	65	;'A'
  1086  0816  343A               	retlw	58	;':'
  1087  0817  3441               	retlw	65	;'A'
  1088  0818  3420               	retlw	32	;' '
  1089  0819  347C               	retlw	124	;'|'
  1090  081A  3420               	retlw	32	;' '
  1091  081B  3444               	retlw	68	;'D'
  1092  081C  3441               	retlw	65	;'A'
  1093  081D  3449               	retlw	73	;'I'
  1094  081E  344B               	retlw	75	;'K'
  1095  081F  3449               	retlw	73	;'I'
  1096  0820  344E               	retlw	78	;'N'
  1097  0821  343A               	retlw	58	;':'
  1098  0822  3444               	retlw	68	;'D'
  1099  0823  3420               	retlw	32	;' '
  1100  0824  347C               	retlw	124	;'|'
  1101  0825  3420               	retlw	32	;' '
  1102  0826  3453               	retlw	83	;'S'
  1103  0827  344F               	retlw	79	;'O'
  1104  0828  344E               	retlw	78	;'N'
  1105  0829  3459               	retlw	89	;'Y'
  1106  082A  343A               	retlw	58	;':'
  1107  082B  3453               	retlw	83	;'S'
  1108  082C  347C               	retlw	124	;'|'
  1109  082D  3428               	retlw	40	;'('
  1110  082E  342A               	retlw	42	;'*'
  1111  082F  3464               	retlw	100	;'d'
  1112  0830  3465               	retlw	101	;'e'
  1113  0831  3466               	retlw	102	;'f'
  1114  0832  3461               	retlw	97	;'a'
  1115  0833  3475               	retlw	117	;'u'
  1116  0834  346C               	retlw	108	;'l'
  1117  0835  3474               	retlw	116	;'t'
  1118  0836  343A               	retlw	58	;':'
  1119  0837  3444               	retlw	68	;'D'
  1120  0838  3429               	retlw	41	;')'
  1121  0839  340D               	retlw	13
  1122  083A  340A               	retlw	10
  1123  083B  3400               	retlw	0
  1124                           
  1125                           	psect	stringtext2
  1126  083C                     __pstringtext2:	
  1127  083C                     STR_2:	
  1128  083C  345B               	retlw	91	;'['
  1129  083D  3425               	retlw	37	;'%'
  1130  083E  3464               	retlw	100	;'d'
  1131  083F  345D               	retlw	93	;']'
  1132  0840  342D               	retlw	45	;'-'
  1133  0841  342D               	retlw	45	;'-'
  1134  0842  342D               	retlw	45	;'-'
  1135  0843  342D               	retlw	45	;'-'
  1136  0844  342D               	retlw	45	;'-'
  1137  0845  342D               	retlw	45	;'-'
  1138  0846  342D               	retlw	45	;'-'
  1139  0847  342D               	retlw	45	;'-'
  1140  0848  342D               	retlw	45	;'-'
  1141  0849  342D               	retlw	45	;'-'
  1142  084A  342D               	retlw	45	;'-'
  1143  084B  342D               	retlw	45	;'-'
  1144  084C  342D               	retlw	45	;'-'
  1145  084D  342D               	retlw	45	;'-'
  1146  084E  342D               	retlw	45	;'-'
  1147  084F  342D               	retlw	45	;'-'
  1148  0850  342D               	retlw	45	;'-'
  1149  0851  342D               	retlw	45	;'-'
  1150  0852  342D               	retlw	45	;'-'
  1151  0853  342D               	retlw	45	;'-'
  1152  0854  342D               	retlw	45	;'-'
  1153  0855  342D               	retlw	45	;'-'
  1154  0856  342D               	retlw	45	;'-'
  1155  0857  342D               	retlw	45	;'-'
  1156  0858  342D               	retlw	45	;'-'
  1157  0859  342D               	retlw	45	;'-'
  1158  085A  340D               	retlw	13
  1159  085B  340A               	retlw	10
  1160  085C  3400               	retlw	0
  1161                           
  1162                           	psect	stringtext3
  1163  085D                     __pstringtext3:	
  1164  085D                     STR_4:	
  1165  085D  342D               	retlw	45	;'-'
  1166  085E  342D               	retlw	45	;'-'
  1167  085F  342D               	retlw	45	;'-'
  1168  0860  342D               	retlw	45	;'-'
  1169  0861  342D               	retlw	45	;'-'
  1170  0862  342D               	retlw	45	;'-'
  1171  0863  342D               	retlw	45	;'-'
  1172  0864  342D               	retlw	45	;'-'
  1173  0865  342D               	retlw	45	;'-'
  1174  0866  342D               	retlw	45	;'-'
  1175  0867  342D               	retlw	45	;'-'
  1176  0868  342D               	retlw	45	;'-'
  1177  0869  342D               	retlw	45	;'-'
  1178  086A  342D               	retlw	45	;'-'
  1179  086B  342D               	retlw	45	;'-'
  1180  086C  342D               	retlw	45	;'-'
  1181  086D  342D               	retlw	45	;'-'
  1182  086E  342D               	retlw	45	;'-'
  1183  086F  342D               	retlw	45	;'-'
  1184  0870  342D               	retlw	45	;'-'
  1185  0871  342D               	retlw	45	;'-'
  1186  0872  342D               	retlw	45	;'-'
  1187  0873  342D               	retlw	45	;'-'
  1188  0874  342D               	retlw	45	;'-'
  1189  0875  342D               	retlw	45	;'-'
  1190  0876  342D               	retlw	45	;'-'
  1191  0877  342D               	retlw	45	;'-'
  1192  0878  342D               	retlw	45	;'-'
  1193  0879  342D               	retlw	45	;'-'
  1194  087A  340D               	retlw	13
  1195  087B  340A               	retlw	10
  1196  087C  3400               	retlw	0
  1197                           
  1198                           	psect	stringtext4
  1199  087D                     __pstringtext4:	
  1200  087D                     STR_8:	
  1201  087D  3444               	retlw	68	;'D'
  1202  087E  3465               	retlw	101	;'e'
  1203  087F  3474               	retlw	116	;'t'
  1204  0880  3465               	retlw	101	;'e'
  1205  0881  3463               	retlw	99	;'c'
  1206  0882  3474               	retlw	116	;'t'
  1207  0883  3420               	retlw	32	;' '
  1208  0884  3444               	retlw	68	;'D'
  1209  0885  3441               	retlw	65	;'A'
  1210  0886  3449               	retlw	73	;'I'
  1211  0887  344B               	retlw	75	;'K'
  1212  0888  3449               	retlw	73	;'I'
  1213  0889  344E               	retlw	78	;'N'
  1214  088A  340D               	retlw	13
  1215  088B  340A               	retlw	10
  1216  088C  3400               	retlw	0
  1217                           
  1218                           	psect	stringtext5
  1219  088D                     __pstringtext5:	
  1220  088D                     STR_7:	
  1221  088D  3444               	retlw	68	;'D'
  1222  088E  3465               	retlw	101	;'e'
  1223  088F  3474               	retlw	116	;'t'
  1224  0890  3465               	retlw	101	;'e'
  1225  0891  3463               	retlw	99	;'c'
  1226  0892  3474               	retlw	116	;'t'
  1227  0893  3420               	retlw	32	;' '
  1228  0894  3441               	retlw	65	;'A'
  1229  0895  3445               	retlw	69	;'E'
  1230  0896  3448               	retlw	72	;'H'
  1231  0897  3441               	retlw	65	;'A'
  1232  0898  340D               	retlw	13
  1233  0899  340A               	retlw	10
  1234  089A  3400               	retlw	0
  1235                           
  1236                           	psect	stringtext6
  1237  089B                     __pstringtext6:	
  1238  089B                     STR_9:	
  1239  089B  3444               	retlw	68	;'D'
  1240  089C  3465               	retlw	101	;'e'
  1241  089D  3474               	retlw	116	;'t'
  1242  089E  3465               	retlw	101	;'e'
  1243  089F  3463               	retlw	99	;'c'
  1244  08A0  3474               	retlw	116	;'t'
  1245  08A1  3420               	retlw	32	;' '
  1246  08A2  3453               	retlw	83	;'S'
  1247  08A3  344F               	retlw	79	;'O'
  1248  08A4  344E               	retlw	78	;'N'
  1249  08A5  3459               	retlw	89	;'Y'
  1250  08A6  340D               	retlw	13
  1251  08A7  340A               	retlw	10
  1252  08A8  3400               	retlw	0
  1253                           
  1254                           	psect	stringtext7
  1255  08A9                     __pstringtext7:	
  1256  08A9                     STR_6:	
  1257  08A9  3444               	retlw	68	;'D'
  1258  08AA  3465               	retlw	101	;'e'
  1259  08AB  3474               	retlw	116	;'t'
  1260  08AC  3465               	retlw	101	;'e'
  1261  08AD  3463               	retlw	99	;'c'
  1262  08AE  3474               	retlw	116	;'t'
  1263  08AF  3420               	retlw	32	;' '
  1264  08B0  344E               	retlw	78	;'N'
  1265  08B1  3445               	retlw	69	;'E'
  1266  08B2  3443               	retlw	67	;'C'
  1267  08B3  340D               	retlw	13
  1268  08B4  340A               	retlw	10
  1269  08B5  3400               	retlw	0
  1270                           
  1271                           	psect	stringtext8
  1272  08B6                     __pstringtext8:	
  1273  08B6                     STR_3:	
  1274  08B6  3449               	retlw	73	;'I'
  1275  08B7  3452               	retlw	82	;'R'
  1276  08B8  3420               	retlw	32	;' '
  1277  08B9  3452               	retlw	82	;'R'
  1278  08BA  3465               	retlw	101	;'e'
  1279  08BB  3463               	retlw	99	;'c'
  1280  08BC  3469               	retlw	105	;'i'
  1281  08BD  3476               	retlw	118	;'v'
  1282  08BE  3465               	retlw	101	;'e'
  1283  08BF  3472               	retlw	114	;'r'
  1284  08C0  340D               	retlw	13
  1285  08C1  340A               	retlw	10
  1286  08C2  3400               	retlw	0
  1287                           
  1288                           	psect	stringtext9
  1289  08C3                     __pstringtext9:	
  1290  08C3                     STR_1:	
  1291  08C3  3465               	retlw	101	;'e'
  1292  08C4  346E               	retlw	110	;'n'
  1293  08C5  3464               	retlw	100	;'d'
  1294  08C6  340D               	retlw	13
  1295  08C7  340A               	retlw	10
  1296  08C8  3400               	retlw	0
  1297                           
  1298                           	psect	stringtext10
  1299  08C9                     __pstringtext10:	
  1300  08C9                     STR_11:	
  1301  08C9  347C               	retlw	124	;'|'
  1302  08CA  347C               	retlw	124	;'|'
  1303  08CB  3400               	retlw	0
  1304                           
  1305                           	psect	stringtext11
  1306  0000                     __pstringtext11:	
  1307  085D                     
  1308                           ; #config settings
  1309  0000                     
  1310                           	psect	cinit
  1311  07F5                     start_initialization:	
  1312  07F5                     __initialization:	
  1313                           
  1314                           ; Clear objects allocated to BANK0
  1315  07F5  0020               	movlb	0	; select bank0
  1316  07F6  01B5               	clrf	__pbssBANK0& (0+127)
  1317  07F7  01B6               	clrf	(__pbssBANK0+1)& (0+127)
  1318  07F8  01B7               	clrf	(__pbssBANK0+2)& (0+127)
  1319  07F9  01B8               	clrf	(__pbssBANK0+3)& (0+127)
  1320  07FA  01B9               	clrf	(__pbssBANK0+4)& (0+127)
  1321  07FB  01BA               	clrf	(__pbssBANK0+5)& (0+127)
  1322  07FC  01BB               	clrf	(__pbssBANK0+6)& (0+127)
  1323  07FD                     end_of_initialization:	
  1324                           ;End of C runtime variable initialization code
  1325                           
  1326  07FD                     __end_of__initialization:	
  1327  07FD  0020               	movlb	0
  1328  07FE  3186  2E7A         	ljmp	_main	;jump to C main() function
  1329                           
  1330                           	psect	bssBANK0
  1331  0035                     __pbssBANK0:	
  1332  0035                     _EUSART_ErrorHandler:	
  1333  0035                     	ds	2
  1334  0037                     _EUSART_OverrunErrorHandler:	
  1335  0037                     	ds	2
  1336  0039                     _EUSART_FramingErrorHandler:	
  1337  0039                     	ds	2
  1338  003B                     _eusartRxLastError:	
  1339  003B                     	ds	1
  1340                           
  1341                           	psect	cstackCOMMON
  1342  0070                     __pcstackCOMMON:	
  1343  0070                     ?_EUSART_SetFramingErrorHandler:	
  1344  0070                     ?_EUSART_SetOverrunErrorHandler:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0070                     ?_EUSART_SetErrorHandler:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0070                     ?_PIN_MANAGER_Initialize:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353  0070                     ??_PIN_MANAGER_Initialize:	
  1354                           ; 1 bytes @ 0x0
  1355                           
  1356  0070                     ?_OSCILLATOR_Initialize:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359  0070                     ??_OSCILLATOR_Initialize:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0070                     ?_WDT_Initialize:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0070                     ??_WDT_Initialize:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  0070                     ?_detect_mode:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0070                     ?_recv_daikin_reader:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  0070                     ?_recv_reader:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  0070                     ??_recv_reader:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0070                     ?_recv_daikin_frame:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0070                     ?_bit_find:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  0070                     ??_bit_find:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  0070                     ?_EUSART_Initialize:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0070                     ?_EUSART_Read:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  0070                     ??_EUSART_Read:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  0070                     ?_EUSART_Write:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  0070                     ??_EUSART_Write:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404  0070                     ?_SYSTEM_Initialize:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407  0070                     ?_putch:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410  0070                     ?_getch:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413  0070                     ??_getch:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416  0070                     ?_main:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419  0070                     ?___lwdiv:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  0070                     EUSART_Write@txData:	
  1423                           ; 2 bytes @ 0x0
  1424                           
  1425  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1429                           ; 2 bytes @ 0x0
  1430                           
  1431  0070                     EUSART_SetErrorHandler@interruptHandler:	
  1432                           ; 2 bytes @ 0x0
  1433                           
  1434  0070                     ___lwdiv@divisor:	
  1435                           ; 2 bytes @ 0x0
  1436                           
  1437                           
  1438                           ; 2 bytes @ 0x0
  1439  0070                     	ds	1
  1440  0071                     ??_putch:	
  1441  0071                     putch@data:	
  1442                           ; 1 bytes @ 0x1
  1443                           
  1444  0071                     recv_reader@width:	
  1445                           ; 1 bytes @ 0x1
  1446                           
  1447  0071                     bit_find@width:	
  1448                           ; 2 bytes @ 0x1
  1449                           
  1450                           
  1451                           ; 2 bytes @ 0x1
  1452  0071                     	ds	1
  1453  0072                     ??_EUSART_SetFramingErrorHandler:	
  1454  0072                     ??_EUSART_SetOverrunErrorHandler:	
  1455                           ; 1 bytes @ 0x2
  1456                           
  1457  0072                     ??_EUSART_SetErrorHandler:	
  1458                           ; 1 bytes @ 0x2
  1459                           
  1460  0072                     ??_EUSART_Initialize:	
  1461                           ; 1 bytes @ 0x2
  1462                           
  1463  0072                     ??_SYSTEM_Initialize:	
  1464                           ; 1 bytes @ 0x2
  1465                           
  1466  0072                     ___lwdiv@dividend:	
  1467                           ; 1 bytes @ 0x2
  1468                           
  1469                           
  1470                           ; 2 bytes @ 0x2
  1471  0072                     	ds	1
  1472  0073                     ??_recv_daikin_frame:	
  1473                           
  1474                           ; 1 bytes @ 0x3
  1475  0073                     	ds	1
  1476  0074                     ??___lwdiv:	
  1477  0074                     recv_daikin_frame@size:	
  1478                           ; 1 bytes @ 0x4
  1479                           
  1480                           
  1481                           ; 1 bytes @ 0x4
  1482  0074                     	ds	1
  1483  0075                     recv_daikin_frame@i:	
  1484  0075                     ___lwdiv@quotient:	
  1485                           ; 1 bytes @ 0x5
  1486                           
  1487                           
  1488                           ; 2 bytes @ 0x5
  1489  0075                     	ds	1
  1490  0076                     recv_daikin_frame@a:	
  1491                           
  1492                           ; 1 bytes @ 0x6
  1493  0076                     	ds	1
  1494  0077                     ___lwdiv@counter:	
  1495                           
  1496                           ; 1 bytes @ 0x7
  1497  0077                     	ds	1
  1498  0078                     ?___lwmod:	
  1499  0078                     ___lwmod@divisor:	
  1500                           ; 2 bytes @ 0x8
  1501                           
  1502                           
  1503                           ; 2 bytes @ 0x8
  1504  0078                     	ds	2
  1505  007A                     ___lwmod@dividend:	
  1506                           
  1507                           ; 2 bytes @ 0xA
  1508  007A                     	ds	2
  1509  007C                     ??___lwmod:	
  1510                           
  1511                           ; 1 bytes @ 0xC
  1512  007C                     	ds	1
  1513  007D                     ___lwmod@counter:	
  1514                           
  1515                           ; 1 bytes @ 0xD
  1516  007D                     	ds	1
  1517                           
  1518                           	psect	cstackBANK0
  1519  0020                     __pcstackBANK0:	
  1520  0020                     ?_printf:	
  1521  0020                     printf@f:	
  1522                           ; 2 bytes @ 0x0
  1523                           
  1524                           
  1525                           ; 2 bytes @ 0x0
  1526  0020                     	ds	4
  1527  0024                     ??_printf:	
  1528                           
  1529                           ; 1 bytes @ 0x4
  1530  0024                     	ds	4
  1531  0028                     printf@ap:	
  1532                           
  1533                           ; 1 bytes @ 0x8
  1534  0028                     	ds	1
  1535  0029                     printf@flag:	
  1536                           
  1537                           ; 1 bytes @ 0x9
  1538  0029                     	ds	1
  1539  002A                     printf@prec:	
  1540                           
  1541                           ; 1 bytes @ 0xA
  1542  002A                     	ds	1
  1543  002B                     printf@val:	
  1544                           
  1545                           ; 2 bytes @ 0xB
  1546  002B                     	ds	2
  1547  002D                     printf@c:	
  1548                           
  1549                           ; 1 bytes @ 0xD
  1550  002D                     	ds	1
  1551  002E                     ??_detect_mode:	
  1552  002E                     ??_recv_daikin_reader:	
  1553                           ; 1 bytes @ 0xE
  1554                           
  1555                           
  1556                           ; 1 bytes @ 0xE
  1557  002E                     	ds	1
  1558  002F                     detect_mode@mode:	
  1559                           
  1560                           ; 1 bytes @ 0xF
  1561  002F                     	ds	1
  1562  0030                     recv_daikin_reader@a:	
  1563                           
  1564                           ; 1 bytes @ 0x10
  1565  0030                     	ds	1
  1566  0031                     recv_daikin_reader@i:	
  1567                           
  1568                           ; 1 bytes @ 0x11
  1569  0031                     	ds	1
  1570  0032                     ??_main:	
  1571                           
  1572                           ; 1 bytes @ 0x12
  1573  0032                     	ds	2
  1574  0034                     main@cnt:	
  1575                           
  1576                           ; 1 bytes @ 0x14
  1577  0034                     	ds	1
  1578                           
  1579                           	psect	maintext
  1580  067A                     __pmaintext:	
  1581 ;;
  1582 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1583 ;;
  1584 ;; *************** function _main *****************
  1585 ;; Defined at:
  1586 ;;		line 47 in file "main.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  cnt             1   20[BANK0 ] unsigned char 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : B1F/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1600 ;;      Params:         0       0       0       0       0       0
  1601 ;;      Locals:         0       1       0       0       0       0
  1602 ;;      Temps:          0       2       0       0       0       0
  1603 ;;      Totals:         0       3       0       0       0       0
  1604 ;;Total ram usage:        3 bytes
  1605 ;; Hardware stack levels required when called:    4
  1606 ;; This function calls:
  1607 ;;		_SYSTEM_Initialize
  1608 ;;		_detect_mode
  1609 ;;		_printf
  1610 ;;		_putch
  1611 ;;		_recv_daikin_frame
  1612 ;;		_recv_daikin_reader
  1613 ;;		_recv_reader
  1614 ;; This function is called by:
  1615 ;;		Startup code after reset
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           
  1620                           ;psect for function _main
  1621  067A                     _main:	
  1622  067A                     l1663:	
  1623                           ;incstack = 0
  1624                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1625                           
  1626                           
  1627                           ;main.c: 49: SYSTEM_Initialize();
  1628  067A  3184  24E1  3186   	fcall	_SYSTEM_Initialize
  1629  067D                     l1665:	
  1630  067D  0022               	movlb	2	; select bank2
  1631  067E  150C               	bsf	12,2	;volatile
  1632  067F                     l1667:	
  1633                           
  1634                           ;main.c: 52: detect_mode();
  1635  067F  3186  26D3  3186   	fcall	_detect_mode
  1636  0682                     l1669:	
  1637                           
  1638                           ;main.c: 54: uint8_t cnt = 0;
  1639  0682  0020               	movlb	0	; select bank0
  1640  0683  01B4               	clrf	main@cnt
  1641  0684  2E89               	goto	l1673
  1642  0685                     l1671:	
  1643                           
  1644                           ;main.c: 59: _delay((unsigned long)((5)*(32000000/4000000.0)));
  1645  0685  300D               	movlw	13
  1646  0686                     u1027:	
  1647  0686  0B89               	decfsz	9,f
  1648  0687  2E86               	goto	u1027
  1649  0688  0000               	nop
  1650  0689                     l1673:	
  1651  0689  0020               	movlb	0	; select bank0
  1652  068A  188C               	btfsc	12,1	;volatile
  1653  068B  2E8D               	goto	u951
  1654  068C  2E8E               	goto	u950
  1655  068D                     u951:	
  1656  068D  2E85               	goto	l1671
  1657  068E                     u950:	
  1658  068E                     l1675:	
  1659                           
  1660                           ;main.c: 60: };main.c: 62: recv_daikin_reader();
  1661  068E  3185  255E  3186   	fcall	_recv_daikin_reader
  1662  0691                     l1677:	
  1663                           
  1664                           ;main.c: 64: recv_reader();
  1665  0691  3185  25FD  3186   	fcall	_recv_reader
  1666  0694                     l1679:	
  1667                           
  1668                           ;main.c: 65: recv_daikin_frame(160);
  1669  0694  30A0               	movlw	160
  1670  0695  3185  2538  3186   	fcall	_recv_daikin_frame
  1671  0698                     l1681:	
  1672                           
  1673                           ;main.c: 66: putch('|');
  1674  0698  307C               	movlw	124
  1675  0699  3184  24C5  3186   	fcall	_putch
  1676  069C                     l1683:	
  1677                           
  1678                           ;main.c: 68: _delay((unsigned long)((35)*(32000000/4000.0)));
  1679  069C  3002               	movlw	2
  1680  069D  0020               	movlb	0	; select bank0
  1681  069E  00B3               	movwf	??_main+1
  1682  069F  306C               	movlw	108
  1683  06A0  00B2               	movwf	??_main
  1684  06A1  309F               	movlw	159
  1685  06A2                     u1037:	
  1686  06A2  0B89               	decfsz	9,f
  1687  06A3  2EA2               	goto	u1037
  1688  06A4  0BB2               	decfsz	??_main,f
  1689  06A5  2EA2               	goto	u1037
  1690  06A6  0BB3               	decfsz	??_main+1,f
  1691  06A7  2EA2               	goto	u1037
  1692  06A8  3200               	nop2
  1693  06A9                     l1685:	
  1694                           
  1695                           ;main.c: 70: recv_reader();
  1696  06A9  3185  25FD  3186   	fcall	_recv_reader
  1697  06AC                     l1687:	
  1698                           
  1699                           ;main.c: 71: recv_daikin_frame(152);
  1700  06AC  3098               	movlw	152
  1701  06AD  3185  2538  3186   	fcall	_recv_daikin_frame
  1702  06B0                     l1689:	
  1703                           
  1704                           ;main.c: 72: putch('|');
  1705  06B0  307C               	movlw	124
  1706  06B1  3184  24C5  3186   	fcall	_putch
  1707  06B4                     l1691:	
  1708                           
  1709                           ;main.c: 74: printf("end\r\n");
  1710  06B4  30C3               	movlw	low (STR_1| (0+32768))
  1711  06B5  0020               	movlb	0	; select bank0
  1712  06B6  00A0               	movwf	printf@f
  1713  06B7  3088               	movlw	high (STR_1| (0+32768))
  1714  06B8  00A1               	movwf	printf@f+1
  1715  06B9  3187  2733  3186   	fcall	_printf
  1716  06BC                     l1693:	
  1717                           
  1718                           ;main.c: 75: printf("[%d]--------------------------\r\n", cnt);
  1719  06BC  303C               	movlw	low (STR_2| (0+32768))
  1720  06BD  0020               	movlb	0	; select bank0
  1721  06BE  00A0               	movwf	printf@f
  1722  06BF  3088               	movlw	high (STR_2| (0+32768))
  1723  06C0  00A1               	movwf	printf@f+1
  1724  06C1  0834               	movf	main@cnt,w
  1725  06C2  00B2               	movwf	??_main
  1726  06C3  01B3               	clrf	??_main+1
  1727  06C4  0832               	movf	??_main,w
  1728  06C5  00A2               	movwf	?_printf+2
  1729  06C6  0833               	movf	??_main+1,w
  1730  06C7  00A3               	movwf	?_printf+3
  1731  06C8  3187  2733  3186   	fcall	_printf
  1732  06CB                     l1695:	
  1733                           
  1734                           ;main.c: 76: cnt++;
  1735  06CB  3001               	movlw	1
  1736  06CC  0020               	movlb	0	; select bank0
  1737  06CD  00B2               	movwf	??_main
  1738  06CE  0832               	movf	??_main,w
  1739  06CF  07B4               	addwf	main@cnt,f
  1740  06D0  2E89               	goto	l1673
  1741  06D1  3180  2802         	ljmp	start
  1742  06D3                     __end_of_main:	
  1743                           
  1744                           	psect	text1
  1745  05FD                     __ptext1:	
  1746 ;; *************** function _recv_reader *****************
  1747 ;; Defined at:
  1748 ;;		line 121 in file "main.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  width           2    1[COMMON] int 
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      unsigned char 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1762 ;;      Params:         0       0       0       0       0       0
  1763 ;;      Locals:         2       0       0       0       0       0
  1764 ;;      Temps:          1       0       0       0       0       0
  1765 ;;      Totals:         3       0       0       0       0       0
  1766 ;;Total ram usage:        3 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; This function calls:
  1769 ;;		Nothing
  1770 ;; This function is called by:
  1771 ;;		_main
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           
  1776                           ;psect for function _recv_reader
  1777  05FD                     _recv_reader:	
  1778  05FD                     l1633:	
  1779                           ;incstack = 0
  1780                           ; Regs used in _recv_reader: [wreg+status,2]
  1781                           
  1782                           
  1783                           ;main.c: 122: int width = 0;
  1784  05FD  01F1               	clrf	recv_reader@width
  1785  05FE  01F2               	clrf	recv_reader@width+1
  1786                           
  1787                           ;main.c: 123: while(PORTAbits.RA1 == 0){
  1788  05FF  2E08               	goto	l1637
  1789  0600                     l1635:	
  1790                           
  1791                           ;main.c: 124: width++;
  1792  0600  3001               	movlw	1
  1793  0601  07F1               	addwf	recv_reader@width,f
  1794  0602  3000               	movlw	0
  1795  0603  3DF2               	addwfc	recv_reader@width+1,f
  1796                           
  1797                           ;main.c: 125: _delay((unsigned long)((5)*(32000000/4000000.0)));
  1798  0604  300D               	movlw	13
  1799  0605                     u1047:	
  1800  0605  0B89               	decfsz	9,f
  1801  0606  2E05               	goto	u1047
  1802  0607  0000               	nop
  1803  0608                     l1637:	
  1804  0608  0020               	movlb	0	; select bank0
  1805  0609  1C8C               	btfss	12,1	;volatile
  1806  060A  2E0C               	goto	u881
  1807  060B  2E0D               	goto	u880
  1808  060C                     u881:	
  1809  060C  2E00               	goto	l1635
  1810  060D                     u880:	
  1811  060D                     l1639:	
  1812                           
  1813                           ;main.c: 126: };main.c: 128: if(width > 800){
  1814  060D  0872               	movf	recv_reader@width+1,w
  1815  060E  3A80               	xorlw	128
  1816  060F  00F0               	movwf	??_recv_reader
  1817  0610  3083               	movlw	131
  1818  0611  0270               	subwf	??_recv_reader,w
  1819  0612  1D03               	skipz
  1820  0613  2E16               	goto	u895
  1821  0614  3021               	movlw	33
  1822  0615  0271               	subwf	recv_reader@width,w
  1823  0616                     u895:	
  1824  0616  1C03               	skipc
  1825  0617  2E19               	goto	u891
  1826  0618  2E1A               	goto	u890
  1827  0619                     u891:	
  1828  0619  2E1B               	goto	l1643
  1829  061A                     u890:	
  1830  061A  2E39               	goto	l207
  1831  061B                     l1643:	
  1832                           
  1833                           ;main.c: 130: };main.c: 132: width = 0;
  1834  061B  01F1               	clrf	recv_reader@width
  1835  061C  01F2               	clrf	recv_reader@width+1
  1836                           
  1837                           ;main.c: 133: while(PORTAbits.RA1 == 1){
  1838  061D  2E34               	goto	l208
  1839  061E                     l1645:	
  1840                           
  1841                           ;main.c: 134: width++;
  1842  061E  3001               	movlw	1
  1843  061F  07F1               	addwf	recv_reader@width,f
  1844  0620  3000               	movlw	0
  1845  0621  3DF2               	addwfc	recv_reader@width+1,f
  1846                           
  1847                           ;main.c: 135: _delay((unsigned long)((5)*(32000000/4000000.0)));
  1848  0622  300D               	movlw	13
  1849  0623                     u1057:	
  1850  0623  0B89               	decfsz	9,f
  1851  0624  2E23               	goto	u1057
  1852  0625  0000               	nop
  1853                           
  1854                           ;main.c: 137: if(width > 500){
  1855  0626  0872               	movf	recv_reader@width+1,w
  1856  0627  3A80               	xorlw	128
  1857  0628  00F0               	movwf	??_recv_reader
  1858  0629  3081               	movlw	129
  1859  062A  0270               	subwf	??_recv_reader,w
  1860  062B  1D03               	skipz
  1861  062C  2E2F               	goto	u905
  1862  062D  30F5               	movlw	245
  1863  062E  0271               	subwf	recv_reader@width,w
  1864  062F                     u905:	
  1865  062F  1C03               	skipc
  1866  0630  2E32               	goto	u901
  1867  0631  2E33               	goto	u900
  1868  0632                     u901:	
  1869  0632  2E34               	goto	l208
  1870  0633                     u900:	
  1871  0633  2E39               	goto	l207
  1872  0634                     l208:	
  1873  0634  0020               	movlb	0	; select bank0
  1874  0635  188C               	btfsc	12,1	;volatile
  1875  0636  2E38               	goto	u911
  1876  0637  2E39               	goto	u910
  1877  0638                     u911:	
  1878  0638  2E1E               	goto	l1645
  1879  0639                     u910:	
  1880  0639                     l207:	
  1881  0639  0008               	return
  1882  063A                     __end_of_recv_reader:	
  1883                           
  1884                           	psect	text2
  1885  055E                     __ptext2:	
  1886 ;; *************** function _recv_daikin_reader *****************
  1887 ;; Defined at:
  1888 ;;		line 159 in file "main.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  a               1   16[BANK0 ] unsigned char 
  1893 ;;  i               1   17[BANK0 ] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1903 ;;      Params:         0       0       0       0       0       0
  1904 ;;      Locals:         0       2       0       0       0       0
  1905 ;;      Temps:          0       2       0       0       0       0
  1906 ;;      Totals:         0       4       0       0       0       0
  1907 ;;Total ram usage:        4 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    3
  1910 ;; This function calls:
  1911 ;;		_bit_find
  1912 ;;		_printf
  1913 ;;		_putch
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function _recv_daikin_reader
  1921  055E                     _recv_daikin_reader:	
  1922  055E                     l1615:	
  1923                           ;incstack = 0
  1924                           ; Regs used in _recv_daikin_reader: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1925                           
  1926                           
  1927                           ;main.c: 160: uint8_t i;;main.c: 161: for(i = 0; i < 5; i++){
  1928  055E  0020               	movlb	0	; select bank0
  1929  055F  01B1               	clrf	recv_daikin_reader@i
  1930  0560                     l1621:	
  1931                           
  1932                           ;main.c: 162: uint8_t a = bit_find();
  1933  0560  3186  263A  3185   	fcall	_bit_find
  1934  0563  0020               	movlb	0	; select bank0
  1935  0564  00AE               	movwf	??_recv_daikin_reader
  1936  0565  082E               	movf	??_recv_daikin_reader,w
  1937  0566  00B0               	movwf	recv_daikin_reader@a
  1938  0567                     l1623:	
  1939                           
  1940                           ;main.c: 163: putch(a + '0');
  1941  0567  0830               	movf	recv_daikin_reader@a,w
  1942  0568  3E30               	addlw	48
  1943  0569  3184  24C5  3185   	fcall	_putch
  1944  056C                     l1625:	
  1945  056C  3001               	movlw	1
  1946  056D  0020               	movlb	0	; select bank0
  1947  056E  00AE               	movwf	??_recv_daikin_reader
  1948  056F  082E               	movf	??_recv_daikin_reader,w
  1949  0570  07B1               	addwf	recv_daikin_reader@i,f
  1950  0571                     l1627:	
  1951  0571  3005               	movlw	5
  1952  0572  0231               	subwf	recv_daikin_reader@i,w
  1953  0573  1C03               	skipc
  1954  0574  2D76               	goto	u871
  1955  0575  2D77               	goto	u870
  1956  0576                     u871:	
  1957  0576  2D60               	goto	l1621
  1958  0577                     u870:	
  1959  0577                     l1629:	
  1960                           
  1961                           ;main.c: 164: };main.c: 166: _delay((unsigned long)((25)*(32000000/4000.0)));
  1962  0577  3002               	movlw	2
  1963  0578  0020               	movlb	0	; select bank0
  1964  0579  00AF               	movwf	??_recv_daikin_reader+1
  1965  057A  3004               	movlw	4
  1966  057B  00AE               	movwf	??_recv_daikin_reader
  1967  057C  30BA               	movlw	186
  1968  057D                     u1067:	
  1969  057D  0B89               	decfsz	9,f
  1970  057E  2D7D               	goto	u1067
  1971  057F  0BAE               	decfsz	??_recv_daikin_reader,f
  1972  0580  2D7D               	goto	u1067
  1973  0581  0BAF               	decfsz	??_recv_daikin_reader+1,f
  1974  0582  2D7D               	goto	u1067
  1975  0583  0000               	nop
  1976  0584                     l1631:	
  1977                           
  1978                           ;main.c: 167: printf("||");
  1979  0584  30C9               	movlw	low (STR_11| (0+32768))
  1980  0585  0020               	movlb	0	; select bank0
  1981  0586  00A0               	movwf	printf@f
  1982  0587  3088               	movlw	high (STR_11| (0+32768))
  1983  0588  00A1               	movwf	printf@f+1
  1984  0589  3187  2733  3185   	fcall	_printf
  1985  058C                     l225:	
  1986  058C  0008               	return
  1987  058D                     __end_of_recv_daikin_reader:	
  1988                           
  1989                           	psect	text3
  1990  0538                     __ptext3:	
  1991 ;; *************** function _recv_daikin_frame *****************
  1992 ;; Defined at:
  1993 ;;		line 170 in file "main.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  size            1    wreg     unsigned char 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  size            1    4[COMMON] unsigned char 
  1998 ;;  a               1    6[COMMON] unsigned char 
  1999 ;;  i               1    5[COMMON] unsigned char 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, status,0, pclath, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2009 ;;      Params:         0       0       0       0       0       0
  2010 ;;      Locals:         3       0       0       0       0       0
  2011 ;;      Temps:          1       0       0       0       0       0
  2012 ;;      Totals:         4       0       0       0       0       0
  2013 ;;Total ram usage:        4 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; Hardware stack levels required when called:    2
  2016 ;; This function calls:
  2017 ;;		_bit_find
  2018 ;;		_putch
  2019 ;; This function is called by:
  2020 ;;		_main
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           
  2025                           ;psect for function _recv_daikin_frame
  2026  0538                     _recv_daikin_frame:	
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in _recv_daikin_frame: [wreg+status,2+status,0+pclath+cstack]
  2030                           ;recv_daikin_frame@size stored from wreg
  2031  0538  00F4               	movwf	recv_daikin_frame@size
  2032  0539                     l1649:	
  2033                           
  2034                           ;main.c: 171: uint8_t i;;main.c: 172: for(i = 0; i < size; i++){
  2035  0539  01F5               	clrf	recv_daikin_frame@i
  2036  053A  2D57               	goto	l1661
  2037  053B                     l1651:	
  2038                           
  2039                           ;main.c: 173: uint8_t a = bit_find();
  2040  053B  3186  263A  3185   	fcall	_bit_find
  2041  053E  00F3               	movwf	??_recv_daikin_frame
  2042  053F  0873               	movf	??_recv_daikin_frame,w
  2043  0540  00F6               	movwf	recv_daikin_frame@a
  2044  0541                     l1653:	
  2045                           
  2046                           ;main.c: 174: putch(a + '0');
  2047  0541  0876               	movf	recv_daikin_frame@a,w
  2048  0542  3E30               	addlw	48
  2049  0543  3184  24C5  3185   	fcall	_putch
  2050  0546                     l1655:	
  2051                           
  2052                           ;main.c: 175: if(a == 3 || a == 2) break;
  2053  0546  3003               	movlw	3
  2054  0547  0676               	xorwf	recv_daikin_frame@a,w
  2055  0548  1903               	btfsc	3,2
  2056  0549  2D4B               	goto	u921
  2057  054A  2D4C               	goto	u920
  2058  054B                     u921:	
  2059  054B  2D5D               	goto	l234
  2060  054C                     u920:	
  2061  054C                     l1657:	
  2062  054C  3002               	movlw	2
  2063  054D  0676               	xorwf	recv_daikin_frame@a,w
  2064  054E  1D03               	btfss	3,2
  2065  054F  2D51               	goto	u931
  2066  0550  2D52               	goto	u930
  2067  0551                     u931:	
  2068  0551  2D53               	goto	l1659
  2069  0552                     u930:	
  2070  0552  2D5D               	goto	l234
  2071  0553                     l1659:	
  2072  0553  3001               	movlw	1
  2073  0554  00F3               	movwf	??_recv_daikin_frame
  2074  0555  0873               	movf	??_recv_daikin_frame,w
  2075  0556  07F5               	addwf	recv_daikin_frame@i,f
  2076  0557                     l1661:	
  2077  0557  0874               	movf	recv_daikin_frame@size,w
  2078  0558  0275               	subwf	recv_daikin_frame@i,w
  2079  0559  1C03               	skipc
  2080  055A  2D5C               	goto	u941
  2081  055B  2D5D               	goto	u940
  2082  055C                     u941:	
  2083  055C  2D3B               	goto	l1651
  2084  055D                     u940:	
  2085  055D                     l234:	
  2086  055D  0008               	return
  2087  055E                     __end_of_recv_daikin_frame:	
  2088                           
  2089                           	psect	text4
  2090  063A                     __ptext4:	
  2091 ;; *************** function _bit_find *****************
  2092 ;; Defined at:
  2093 ;;		line 190 in file "main.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  width           2    1[COMMON] int 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      unsigned char 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2107 ;;      Params:         0       0       0       0       0       0
  2108 ;;      Locals:         2       0       0       0       0       0
  2109 ;;      Temps:          1       0       0       0       0       0
  2110 ;;      Totals:         3       0       0       0       0       0
  2111 ;;Total ram usage:        3 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_recv_daikin_reader
  2117 ;;		_recv_daikin_frame
  2118 ;;		_recv_data
  2119 ;;		_byte_recv
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           
  2124                           ;psect for function _bit_find
  2125  063A                     _bit_find:	
  2126  063A                     l1561:	
  2127                           ;incstack = 0
  2128                           ; Regs used in _bit_find: [wreg+status,2]
  2129                           
  2130                           
  2131                           ;main.c: 191: int width = 0;
  2132  063A  01F1               	clrf	bit_find@width
  2133  063B  01F2               	clrf	bit_find@width+1
  2134                           
  2135                           ;main.c: 192: while(PORTAbits.RA1 == 0){
  2136  063C  2E45               	goto	l1565
  2137  063D                     l1563:	
  2138                           
  2139                           ;main.c: 193: width++;
  2140  063D  3001               	movlw	1
  2141  063E  07F1               	addwf	bit_find@width,f
  2142  063F  3000               	movlw	0
  2143  0640  3DF2               	addwfc	bit_find@width+1,f
  2144                           
  2145                           ;main.c: 194: _delay((unsigned long)((5)*(32000000/4000000.0)));
  2146  0641  300D               	movlw	13
  2147  0642                     u1077:	
  2148  0642  0B89               	decfsz	9,f
  2149  0643  2E42               	goto	u1077
  2150  0644  0000               	nop
  2151  0645                     l1565:	
  2152  0645  0020               	movlb	0	; select bank0
  2153  0646  1C8C               	btfss	12,1	;volatile
  2154  0647  2E49               	goto	u791
  2155  0648  2E4A               	goto	u790
  2156  0649                     u791:	
  2157  0649  2E3D               	goto	l1563
  2158  064A                     u790:	
  2159  064A                     l1567:	
  2160                           
  2161                           ;main.c: 195: };main.c: 204: width = 0;
  2162  064A  01F1               	clrf	bit_find@width
  2163  064B  01F2               	clrf	bit_find@width+1
  2164                           
  2165                           ;main.c: 205: while(PORTAbits.RA1 == 1){
  2166  064C  2E64               	goto	l240
  2167  064D                     l1569:	
  2168                           
  2169                           ;main.c: 206: width++;
  2170  064D  3001               	movlw	1
  2171  064E  07F1               	addwf	bit_find@width,f
  2172  064F  3000               	movlw	0
  2173  0650  3DF2               	addwfc	bit_find@width+1,f
  2174                           
  2175                           ;main.c: 207: _delay((unsigned long)((5)*(32000000/4000000.0)));
  2176  0651  300D               	movlw	13
  2177  0652                     u1087:	
  2178  0652  0B89               	decfsz	9,f
  2179  0653  2E52               	goto	u1087
  2180  0654  0000               	nop
  2181                           
  2182                           ;main.c: 209: if(width > 300){
  2183  0655  0872               	movf	bit_find@width+1,w
  2184  0656  3A80               	xorlw	128
  2185  0657  00F0               	movwf	??_bit_find
  2186  0658  3081               	movlw	129
  2187  0659  0270               	subwf	??_bit_find,w
  2188  065A  1D03               	skipz
  2189  065B  2E5E               	goto	u805
  2190  065C  302D               	movlw	45
  2191  065D  0271               	subwf	bit_find@width,w
  2192  065E                     u805:	
  2193  065E  1C03               	skipc
  2194  065F  2E61               	goto	u801
  2195  0660  2E62               	goto	u800
  2196  0661                     u801:	
  2197  0661  2E64               	goto	l240
  2198  0662                     u800:	
  2199  0662                     l1571:	
  2200                           
  2201                           ;main.c: 210: return 3;
  2202  0662  3003               	movlw	3
  2203  0663  2E79               	goto	l243
  2204  0664                     l240:	
  2205  0664  0020               	movlb	0	; select bank0
  2206  0665  188C               	btfsc	12,1	;volatile
  2207  0666  2E68               	goto	u811
  2208  0667  2E69               	goto	u810
  2209  0668                     u811:	
  2210  0668  2E4D               	goto	l1569
  2211  0669                     u810:	
  2212  0669                     l1575:	
  2213                           
  2214                           ;main.c: 211: };main.c: 212: };main.c: 214: if(width < 100){
  2215  0669  0872               	movf	bit_find@width+1,w
  2216  066A  3A80               	xorlw	128
  2217  066B  00F0               	movwf	??_bit_find
  2218  066C  3080               	movlw	128
  2219  066D  0270               	subwf	??_bit_find,w
  2220  066E  1D03               	skipz
  2221  066F  2E72               	goto	u825
  2222  0670  3064               	movlw	100
  2223  0671  0271               	subwf	bit_find@width,w
  2224  0672                     u825:	
  2225  0672  1803               	skipnc
  2226  0673  2E75               	goto	u821
  2227  0674  2E76               	goto	u820
  2228  0675                     u821:	
  2229  0675  2E78               	goto	l1583
  2230  0676                     u820:	
  2231  0676                     l1577:	
  2232                           
  2233                           ;main.c: 215: return 0;
  2234  0676  3000               	movlw	0
  2235  0677  2E79               	goto	l243
  2236  0678                     l1583:	
  2237                           
  2238                           ;main.c: 217: return 1;
  2239  0678  3001               	movlw	1
  2240  0679                     l243:	
  2241  0679  0008               	return
  2242  067A                     __end_of_bit_find:	
  2243                           
  2244                           	psect	text5
  2245  06D3                     __ptext5:	
  2246 ;; *************** function _detect_mode *****************
  2247 ;; Defined at:
  2248 ;;		line 93 in file "main.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  mode            1   15[BANK0 ] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      unsigned char 
  2255 ;; Registers used:
  2256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2262 ;;      Params:         0       0       0       0       0       0
  2263 ;;      Locals:         0       1       0       0       0       0
  2264 ;;      Temps:          0       1       0       0       0       0
  2265 ;;      Totals:         0       2       0       0       0       0
  2266 ;;Total ram usage:        2 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    3
  2269 ;; This function calls:
  2270 ;;		_getch
  2271 ;;		_printf
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           
  2278                           ;psect for function _detect_mode
  2279  06D3                     _detect_mode:	
  2280  06D3                     l1589:	
  2281                           ;incstack = 0
  2282                           ; Regs used in _detect_mode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2283                           
  2284                           
  2285                           ;main.c: 94: printf("IR Reciver\r\n");
  2286  06D3  30B6               	movlw	low (STR_3| (0+32768))
  2287  06D4  0020               	movlb	0	; select bank0
  2288  06D5  00A0               	movwf	printf@f
  2289  06D6  3088               	movlw	high (STR_3| (0+32768))
  2290  06D7  00A1               	movwf	printf@f+1
  2291  06D8  3187  2733  3186   	fcall	_printf
  2292                           
  2293                           ;main.c: 95: printf("-----------------------------\r\n");
  2294  06DB  305D               	movlw	low (STR_4| (0+32768))
  2295  06DC  0020               	movlb	0	; select bank0
  2296  06DD  00A0               	movwf	printf@f
  2297  06DE  3088               	movlw	high (STR_4| (0+32768))
  2298  06DF  00A1               	movwf	printf@f+1
  2299  06E0  3187  2733  3186   	fcall	_printf
  2300                           
  2301                           ;main.c: 96: printf("NEC:N | AEHA:A | DAIKIN:D | SONY:S|(*default:D)\r\n");
  2302  06E3  300A               	movlw	low (STR_5| (0+32768))
  2303  06E4  0020               	movlb	0	; select bank0
  2304  06E5  00A0               	movwf	printf@f
  2305  06E6  3088               	movlw	high (STR_5| (0+32768))
  2306  06E7  00A1               	movwf	printf@f+1
  2307  06E8  3187  2733  3186   	fcall	_printf
  2308  06EB                     l1591:	
  2309                           
  2310                           ;main.c: 98: uint8_t mode = getch();
  2311  06EB  3184  24AF  3186   	fcall	_getch
  2312  06EE  0020               	movlb	0	; select bank0
  2313  06EF  00AE               	movwf	??_detect_mode
  2314  06F0  082E               	movf	??_detect_mode,w
  2315  06F1  00AF               	movwf	detect_mode@mode
  2316  06F2                     l1593:	
  2317                           
  2318                           ;main.c: 100: if(mode == 'N'){
  2319  06F2  304E               	movlw	78
  2320  06F3  062F               	xorwf	detect_mode@mode,w
  2321  06F4  1D03               	btfss	3,2
  2322  06F5  2EF7               	goto	u831
  2323  06F6  2EF8               	goto	u830
  2324  06F7                     u831:	
  2325  06F7  2F00               	goto	l1597
  2326  06F8                     u830:	
  2327  06F8                     l1595:	
  2328                           
  2329                           ;main.c: 101: printf("Detect NEC\r\n");
  2330  06F8  30A9               	movlw	low (STR_6| (0+32768))
  2331  06F9  00A0               	movwf	printf@f
  2332  06FA  3088               	movlw	high (STR_6| (0+32768))
  2333  06FB  00A1               	movwf	printf@f+1
  2334  06FC  3187  2733  3186   	fcall	_printf
  2335                           
  2336                           ;main.c: 102: }else if(mode == 'A'){
  2337  06FF  2F2A               	goto	l1611
  2338  0700                     l1597:	
  2339  0700  3041               	movlw	65
  2340  0701  062F               	xorwf	detect_mode@mode,w
  2341  0702  1D03               	btfss	3,2
  2342  0703  2F05               	goto	u841
  2343  0704  2F06               	goto	u840
  2344  0705                     u841:	
  2345  0705  2F0E               	goto	l1601
  2346  0706                     u840:	
  2347  0706                     l1599:	
  2348                           
  2349                           ;main.c: 103: printf("Detect AEHA\r\n");
  2350  0706  308D               	movlw	low (STR_7| (0+32768))
  2351  0707  00A0               	movwf	printf@f
  2352  0708  3088               	movlw	high (STR_7| (0+32768))
  2353  0709  00A1               	movwf	printf@f+1
  2354  070A  3187  2733  3186   	fcall	_printf
  2355                           
  2356                           ;main.c: 104: }else if(mode == 'D'){
  2357  070D  2F2A               	goto	l1611
  2358  070E                     l1601:	
  2359  070E  3044               	movlw	68
  2360  070F  062F               	xorwf	detect_mode@mode,w
  2361  0710  1D03               	btfss	3,2
  2362  0711  2F13               	goto	u851
  2363  0712  2F14               	goto	u850
  2364  0713                     u851:	
  2365  0713  2F1C               	goto	l1605
  2366  0714                     u850:	
  2367  0714                     l1603:	
  2368                           
  2369                           ;main.c: 105: printf("Detect DAIKIN\r\n");
  2370  0714  307D               	movlw	low (STR_8| (0+32768))
  2371  0715  00A0               	movwf	printf@f
  2372  0716  3088               	movlw	high (STR_8| (0+32768))
  2373  0717  00A1               	movwf	printf@f+1
  2374  0718  3187  2733  3186   	fcall	_printf
  2375                           
  2376                           ;main.c: 106: }else if(mode == 'S'){
  2377  071B  2F2A               	goto	l1611
  2378  071C                     l1605:	
  2379  071C  3053               	movlw	83
  2380  071D  062F               	xorwf	detect_mode@mode,w
  2381  071E  1D03               	btfss	3,2
  2382  071F  2F21               	goto	u861
  2383  0720  2F22               	goto	u860
  2384  0721                     u861:	
  2385  0721  2F2A               	goto	l1609
  2386  0722                     u860:	
  2387  0722                     l1607:	
  2388                           
  2389                           ;main.c: 107: printf("Detect SONY\r\n");
  2390  0722  309B               	movlw	low (STR_9| (0+32768))
  2391  0723  00A0               	movwf	printf@f
  2392  0724  3088               	movlw	high (STR_9| (0+32768))
  2393  0725  00A1               	movwf	printf@f+1
  2394  0726  3187  2733  3186   	fcall	_printf
  2395                           
  2396                           ;main.c: 108: }else{
  2397  0729  2F2A               	goto	l1611
  2398  072A                     l1609:	
  2399  072A                     l1611:	
  2400                           
  2401                           ;main.c: 110: };main.c: 111: printf("-----------------------------\r\n");
  2402  072A  305D               	movlw	low (STR_4| (0+32768))
  2403  072B  0020               	movlb	0	; select bank0
  2404  072C  00A0               	movwf	printf@f
  2405  072D  3088               	movlw	high (STR_4| (0+32768))
  2406  072E  00A1               	movwf	printf@f+1
  2407  072F  3187  2733  3186   	fcall	_printf
  2408  0732                     l200:	
  2409  0732  0008               	return
  2410  0733                     __end_of_detect_mode:	
  2411                           
  2412                           	psect	text6
  2413  0733                     __ptext6:	
  2414 ;; *************** function _printf *****************
  2415 ;; Defined at:
  2416 ;;		line 477 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  2419 ;;		 -> STR_11(3), STR_10(32), STR_9(14), STR_8(16), 
  2420 ;;		 -> STR_7(14), STR_6(13), STR_5(50), STR_4(32), 
  2421 ;;		 -> STR_3(13), STR_2(33), STR_1(6), 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  tmpval          4    0        struct .
  2424 ;;  val             2   11[BANK0 ] unsigned int 
  2425 ;;  cp              2    0        PTR const unsigned char 
  2426 ;;  len             2    0        unsigned int 
  2427 ;;  c               1   13[BANK0 ] unsigned char 
  2428 ;;  prec            1   10[BANK0 ] char 
  2429 ;;  flag            1    9[BANK0 ] unsigned char 
  2430 ;;  ap              1    8[BANK0 ] PTR void [1]
  2431 ;;		 -> ?_printf(2), 
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  2    0[BANK0 ] int 
  2434 ;; Registers used:
  2435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2441 ;;      Params:         0       4       0       0       0       0
  2442 ;;      Locals:         0       6       0       0       0       0
  2443 ;;      Temps:          0       4       0       0       0       0
  2444 ;;      Totals:         0      14       0       0       0       0
  2445 ;;Total ram usage:       14 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    2
  2448 ;; This function calls:
  2449 ;;		___lwdiv
  2450 ;;		___lwmod
  2451 ;;		_putch
  2452 ;; This function is called by:
  2453 ;;		_main
  2454 ;;		_detect_mode
  2455 ;;		_recv_daikin_reader
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           
  2460                           ;psect for function _printf
  2461  0733                     _printf:	
  2462  0733                     l1513:	
  2463                           ;incstack = 0
  2464                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2465                           
  2466                           
  2467                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  2468  0733  3022               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2469  0734  0020               	movlb	0	; select bank0
  2470  0735  00A4               	movwf	??_printf
  2471  0736  0824               	movf	??_printf,w
  2472  0737  00A8               	movwf	printf@ap
  2473                           
  2474                           ;doprnt.c: 553: while((c = *f++)) {
  2475  0738  2FDF               	goto	l1559
  2476  0739                     l1515:	
  2477                           
  2478                           ;doprnt.c: 555: if(c != '%')
  2479  0739  3025               	movlw	37
  2480  073A  062D               	xorwf	printf@c,w
  2481  073B  1903               	btfsc	3,2
  2482  073C  2F3E               	goto	u721
  2483  073D  2F3F               	goto	u720
  2484  073E                     u721:	
  2485  073E  2F44               	goto	l1519
  2486  073F                     u720:	
  2487  073F                     l1517:	
  2488                           
  2489                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  2490  073F  082D               	movf	printf@c,w
  2491  0740  3184  24C5  3187   	fcall	_putch
  2492                           
  2493                           ;doprnt.c: 559: continue;
  2494  0743  2FDF               	goto	l1559
  2495  0744                     l1519:	
  2496                           
  2497                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2498  0744  01A9               	clrf	printf@flag
  2499  0745                     l1523:	
  2500                           ;doprnt.c: 661: switch(c = *f++) {
  2501                           
  2502  0745  0821               	movf	printf@f+1,w
  2503  0746  00A5               	movwf	??_printf+1
  2504  0747  0820               	movf	printf@f,w
  2505  0748  00A4               	movwf	??_printf
  2506  0749  0AA0               	incf	printf@f,f
  2507  074A  1903               	skipnz
  2508  074B  0AA1               	incf	printf@f+1,f
  2509  074C  0824               	movf	??_printf,w
  2510  074D  0084               	movwf	4
  2511  074E  0825               	movf	??_printf+1,w
  2512  074F  0085               	movwf	5
  2513  0750  0800               	movf	0,w	;code access
  2514  0751  00AD               	movwf	printf@c
  2515                           
  2516                           ; Switch size 1, requested type "simple"
  2517                           ; Number of cases is 3, Range of values is 0 to 105
  2518                           ; switch strategies available:
  2519                           ; Name         Instructions Cycles
  2520                           ; simple_byte           10     6 (average)
  2521                           ; direct_byte          218     6 (fixed)
  2522                           ; jumptable            260     6 (fixed)
  2523                           ;	Chosen strategy is simple_byte
  2524  0752  3A00               	xorlw	0	; case 0
  2525  0753  1903               	skipnz
  2526  0754  2FF4               	goto	l481
  2527  0755  3A64               	xorlw	100	; case 100
  2528  0756  1903               	skipnz
  2529  0757  2F5C               	goto	l1525
  2530  0758  3A0D               	xorlw	13	; case 105
  2531  0759  1903               	skipnz
  2532  075A  2F5C               	goto	l1525
  2533  075B  2FDF               	goto	l1559
  2534  075C                     l1525:	
  2535                           
  2536                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2537  075C  0828               	movf	printf@ap,w
  2538  075D  0086               	movwf	6
  2539  075E  0187               	clrf	7
  2540  075F  3F40               	moviw [0]fsr1
  2541  0760  00AB               	movwf	printf@val
  2542  0761  3F41               	moviw [1]fsr1
  2543  0762  00AC               	movwf	printf@val+1
  2544  0763                     l1527:	
  2545  0763  3002               	movlw	2
  2546  0764  00A4               	movwf	??_printf
  2547  0765  0824               	movf	??_printf,w
  2548  0766  07A8               	addwf	printf@ap,f
  2549  0767                     l1529:	
  2550                           
  2551                           ;doprnt.c: 1287: if((int)val < 0) {
  2552  0767  1FAC               	btfss	printf@val+1,7
  2553  0768  2F6A               	goto	u731
  2554  0769  2F6B               	goto	u730
  2555  076A                     u731:	
  2556  076A  2F74               	goto	l1535
  2557  076B                     u730:	
  2558  076B                     l1531:	
  2559                           
  2560                           ;doprnt.c: 1288: flag |= 0x03;
  2561  076B  3003               	movlw	3
  2562  076C  00A4               	movwf	??_printf
  2563  076D  0824               	movf	??_printf,w
  2564  076E  04A9               	iorwf	printf@flag,f
  2565  076F                     l1533:	
  2566                           
  2567                           ;doprnt.c: 1289: val = -val;
  2568  076F  09AB               	comf	printf@val,f
  2569  0770  09AC               	comf	printf@val+1,f
  2570  0771  0AAB               	incf	printf@val,f
  2571  0772  1903               	skipnz
  2572  0773  0AAC               	incf	printf@val+1,f
  2573  0774                     l1535:	
  2574                           
  2575                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  2576  0774  01AD               	clrf	printf@c
  2577  0775  0AAD               	incf	printf@c,f
  2578  0776                     l1541:	
  2579                           
  2580                           ;doprnt.c: 1332: if(val < dpowers[c])
  2581  0776  082D               	movf	printf@c,w
  2582  0777  00A4               	movwf	??_printf
  2583  0778  01A5               	clrf	??_printf+1
  2584  0779  35A4               	lslf	??_printf,f
  2585  077A  0DA5               	rlf	??_printf+1,f
  2586  077B  3000               	movlw	low (_dpowers| (0+32768))
  2587  077C  0724               	addwf	??_printf,w
  2588  077D  0084               	movwf	4
  2589  077E  3088               	movlw	high (_dpowers| (0+32768))
  2590  077F  3D25               	addwfc	??_printf+1,w
  2591  0780  0085               	movwf	5
  2592  0781  3F00               	moviw [0]fsr0
  2593  0782  00A6               	movwf	??_printf+2
  2594  0783  3F01               	moviw [1]fsr0
  2595  0784  00A7               	movwf	??_printf+3
  2596  0785  0827               	movf	??_printf+3,w
  2597  0786  022C               	subwf	printf@val+1,w
  2598  0787  1D03               	skipz
  2599  0788  2F8B               	goto	u745
  2600  0789  0826               	movf	??_printf+2,w
  2601  078A  022B               	subwf	printf@val,w
  2602  078B                     u745:	
  2603  078B  1803               	skipnc
  2604  078C  2F8E               	goto	u741
  2605  078D  2F8F               	goto	u740
  2606  078E                     u741:	
  2607  078E  2F90               	goto	l1545
  2608  078F                     u740:	
  2609  078F  2F9A               	goto	l1547
  2610  0790                     l1545:	
  2611  0790  3001               	movlw	1
  2612  0791  00A4               	movwf	??_printf
  2613  0792  0824               	movf	??_printf,w
  2614  0793  07AD               	addwf	printf@c,f
  2615  0794  3005               	movlw	5
  2616  0795  062D               	xorwf	printf@c,w
  2617  0796  1D03               	btfss	3,2
  2618  0797  2F99               	goto	u751
  2619  0798  2F9A               	goto	u750
  2620  0799                     u751:	
  2621  0799  2F76               	goto	l1541
  2622  079A                     u750:	
  2623  079A                     l1547:	
  2624                           
  2625                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2626  079A  0829               	movf	printf@flag,w
  2627  079B  3903               	andlw	3
  2628  079C  1903               	btfsc	3,2
  2629  079D  2F9F               	goto	u761
  2630  079E  2FA0               	goto	u760
  2631  079F                     u761:	
  2632  079F  2FA4               	goto	l1551
  2633  07A0                     u760:	
  2634  07A0                     l1549:	
  2635                           
  2636                           ;doprnt.c: 1465: (putch('-') );
  2637  07A0  302D               	movlw	45
  2638  07A1  3184  24C5  3187   	fcall	_putch
  2639  07A4                     l1551:	
  2640                           
  2641                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2642  07A4  0020               	movlb	0	; select bank0
  2643  07A5  082D               	movf	printf@c,w
  2644  07A6  00A4               	movwf	??_printf
  2645  07A7  0824               	movf	??_printf,w
  2646  07A8  00AA               	movwf	printf@prec
  2647                           
  2648                           ;doprnt.c: 1500: while(prec--) {
  2649  07A9  2FD5               	goto	l1557
  2650  07AA                     l1553:	
  2651                           
  2652                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2653  07AA  300A               	movlw	10
  2654  07AB  00F8               	movwf	___lwmod@divisor
  2655  07AC  3000               	movlw	0
  2656  07AD  00F9               	movwf	___lwmod@divisor+1
  2657  07AE  082A               	movf	printf@prec,w
  2658  07AF  00A4               	movwf	??_printf
  2659  07B0  01A5               	clrf	??_printf+1
  2660  07B1  35A4               	lslf	??_printf,f
  2661  07B2  0DA5               	rlf	??_printf+1,f
  2662  07B3  3000               	movlw	low (_dpowers| (0+32768))
  2663  07B4  0724               	addwf	??_printf,w
  2664  07B5  0084               	movwf	4
  2665  07B6  3088               	movlw	high (_dpowers| (0+32768))
  2666  07B7  3D25               	addwfc	??_printf+1,w
  2667  07B8  0085               	movwf	5
  2668  07B9  3F00               	moviw [0]fsr0
  2669  07BA  00F0               	movwf	___lwdiv@divisor
  2670  07BB  3F01               	moviw [1]fsr0
  2671  07BC  00F1               	movwf	___lwdiv@divisor+1
  2672  07BD  082C               	movf	printf@val+1,w
  2673  07BE  00F3               	movwf	___lwdiv@dividend+1
  2674  07BF  082B               	movf	printf@val,w
  2675  07C0  00F2               	movwf	___lwdiv@dividend
  2676  07C1  3185  25C1  3187   	fcall	___lwdiv
  2677  07C4  0871               	movf	?___lwdiv+1,w
  2678  07C5  00FB               	movwf	___lwmod@dividend+1
  2679  07C6  0870               	movf	?___lwdiv,w
  2680  07C7  00FA               	movwf	___lwmod@dividend
  2681  07C8  3185  258D  3187   	fcall	___lwmod
  2682  07CB  0878               	movf	?___lwmod,w
  2683  07CC  3E30               	addlw	48
  2684  07CD  0020               	movlb	0	; select bank0
  2685  07CE  00A6               	movwf	??_printf+2
  2686  07CF  0826               	movf	??_printf+2,w
  2687  07D0  00AD               	movwf	printf@c
  2688  07D1                     l1555:	
  2689                           
  2690                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  2691  07D1  082D               	movf	printf@c,w
  2692  07D2  3184  24C5  3187   	fcall	_putch
  2693  07D5                     l1557:	
  2694  07D5  30FF               	movlw	255
  2695  07D6  0020               	movlb	0	; select bank0
  2696  07D7  00A4               	movwf	??_printf
  2697  07D8  0824               	movf	??_printf,w
  2698  07D9  07AA               	addwf	printf@prec,f
  2699  07DA  0A2A               	incf	printf@prec,w
  2700  07DB  1D03               	btfss	3,2
  2701  07DC  2FDE               	goto	u771
  2702  07DD  2FDF               	goto	u770
  2703  07DE                     u771:	
  2704  07DE  2FAA               	goto	l1553
  2705  07DF                     u770:	
  2706  07DF                     l1559:	
  2707  07DF  0020               	movlb	0	; select bank0
  2708  07E0  0821               	movf	printf@f+1,w
  2709  07E1  00A5               	movwf	??_printf+1
  2710  07E2  0820               	movf	printf@f,w
  2711  07E3  00A4               	movwf	??_printf
  2712  07E4  0AA0               	incf	printf@f,f
  2713  07E5  1903               	skipnz
  2714  07E6  0AA1               	incf	printf@f+1,f
  2715  07E7  0824               	movf	??_printf,w
  2716  07E8  0084               	movwf	4
  2717  07E9  0825               	movf	??_printf+1,w
  2718  07EA  0085               	movwf	5
  2719  07EB  0800               	movf	0,w	;code access
  2720  07EC  00A6               	movwf	??_printf+2
  2721  07ED  0826               	movf	??_printf+2,w
  2722  07EE  00AD               	movwf	printf@c
  2723  07EF  082D               	movf	printf@c,w
  2724  07F0  1D03               	btfss	3,2
  2725  07F1  2FF3               	goto	u781
  2726  07F2  2FF4               	goto	u780
  2727  07F3                     u781:	
  2728  07F3  2F39               	goto	l1515
  2729  07F4                     u780:	
  2730  07F4                     l481:	
  2731  07F4  0008               	return
  2732  07F5                     __end_of_printf:	
  2733                           
  2734                           	psect	text7
  2735  04C5                     __ptext7:	
  2736 ;; *************** function _putch *****************
  2737 ;; Defined at:
  2738 ;;		line 31 in file "main.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  data            1    wreg     unsigned char 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  data            1    1[COMMON] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0, pclath, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2752 ;;      Params:         0       0       0       0       0       0
  2753 ;;      Locals:         1       0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0
  2755 ;;      Totals:         1       0       0       0       0       0
  2756 ;;Total ram usage:        1 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    1
  2759 ;; This function calls:
  2760 ;;		_EUSART_Write
  2761 ;; This function is called by:
  2762 ;;		_main
  2763 ;;		_recv_daikin_reader
  2764 ;;		_recv_daikin_frame
  2765 ;;		_printf
  2766 ;;		_recv_data
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           
  2771                           ;psect for function _putch
  2772  04C5                     _putch:	
  2773                           
  2774                           ;incstack = 0
  2775                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  2776                           ;putch@data stored from wreg
  2777  04C5  00F1               	movwf	putch@data
  2778  04C6                     l1425:	
  2779                           
  2780                           ;main.c: 32: EUSART_Write(data);
  2781  04C6  0871               	movf	putch@data,w
  2782  04C7  3184  24CB  3184   	fcall	_EUSART_Write
  2783  04CA                     l173:	
  2784  04CA  0008               	return
  2785  04CB                     __end_of_putch:	
  2786                           
  2787                           	psect	text8
  2788  04CB                     __ptext8:	
  2789 ;; *************** function _EUSART_Write *****************
  2790 ;; Defined at:
  2791 ;;		line 132 in file "mcc_generated_files/eusart.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  txData          1    wreg     unsigned char 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  txData          1    0[COMMON] unsigned char 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2805 ;;      Params:         0       0       0       0       0       0
  2806 ;;      Locals:         1       0       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0
  2808 ;;      Totals:         1       0       0       0       0       0
  2809 ;;Total ram usage:        1 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_putch
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           
  2819                           ;psect for function _EUSART_Write
  2820  04CB                     _EUSART_Write:	
  2821                           
  2822                           ;incstack = 0
  2823                           ; Regs used in _EUSART_Write: [wreg]
  2824                           ;EUSART_Write@txData stored from wreg
  2825  04CB  00F0               	movwf	EUSART_Write@txData
  2826  04CC                     l1403:	
  2827  04CC                     l67:	
  2828                           ;eusart.c: 135: {
  2829                           
  2830  04CC  0020               	movlb	0	; select bank0
  2831  04CD  1E11               	btfss	17,4	;volatile
  2832  04CE  2CD0               	goto	u551
  2833  04CF  2CD1               	goto	u550
  2834  04D0                     u551:	
  2835  04D0  2CCC               	goto	l67
  2836  04D1                     u550:	
  2837  04D1                     l1405:	
  2838                           
  2839                           ;eusart.c: 136: };eusart.c: 138: TXREG = txData;
  2840  04D1  0870               	movf	EUSART_Write@txData,w
  2841  04D2  0023               	movlb	3	; select bank3
  2842  04D3  009A               	movwf	26	;volatile
  2843  04D4                     l70:	
  2844  04D4  0008               	return
  2845  04D5                     __end_of_EUSART_Write:	
  2846                           
  2847                           	psect	text9
  2848  058D                     __ptext9:	
  2849 ;; *************** function ___lwmod *****************
  2850 ;; Defined at:
  2851 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  divisor         2    8[COMMON] unsigned int 
  2854 ;;  dividend        2   10[COMMON] unsigned int 
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  counter         1   13[COMMON] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  2    8[COMMON] unsigned int 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2, status,0
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2866 ;;      Params:         4       0       0       0       0       0
  2867 ;;      Locals:         1       0       0       0       0       0
  2868 ;;      Temps:          1       0       0       0       0       0
  2869 ;;      Totals:         6       0       0       0       0       0
  2870 ;;Total ram usage:        6 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_printf
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           
  2880                           ;psect for function ___lwmod
  2881  058D                     ___lwmod:	
  2882  058D                     l1453:	
  2883                           ;incstack = 0
  2884                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2885                           
  2886  058D  0878               	movf	___lwmod@divisor,w
  2887  058E  0479               	iorwf	___lwmod@divisor+1,w
  2888  058F  1903               	btfsc	3,2
  2889  0590  2D92               	goto	u651
  2890  0591  2D93               	goto	u650
  2891  0592                     u651:	
  2892  0592  2DBC               	goto	l1471
  2893  0593                     u650:	
  2894  0593                     l1455:	
  2895  0593  01FD               	clrf	___lwmod@counter
  2896  0594  0AFD               	incf	___lwmod@counter,f
  2897  0595  2D9F               	goto	l1461
  2898  0596                     l1457:	
  2899  0596  3001               	movlw	1
  2900  0597                     u665:	
  2901  0597  35F8               	lslf	___lwmod@divisor,f
  2902  0598  0DF9               	rlf	___lwmod@divisor+1,f
  2903  0599  0B89               	decfsz	9,f
  2904  059A  2D97               	goto	u665
  2905  059B                     l1459:	
  2906  059B  3001               	movlw	1
  2907  059C  00FC               	movwf	??___lwmod
  2908  059D  087C               	movf	??___lwmod,w
  2909  059E  07FD               	addwf	___lwmod@counter,f
  2910  059F                     l1461:	
  2911  059F  1FF9               	btfss	___lwmod@divisor+1,7
  2912  05A0  2DA2               	goto	u671
  2913  05A1  2DA3               	goto	u670
  2914  05A2                     u671:	
  2915  05A2  2D96               	goto	l1457
  2916  05A3                     u670:	
  2917  05A3                     l1463:	
  2918  05A3  0879               	movf	___lwmod@divisor+1,w
  2919  05A4  027B               	subwf	___lwmod@dividend+1,w
  2920  05A5  1D03               	skipz
  2921  05A6  2DA9               	goto	u685
  2922  05A7  0878               	movf	___lwmod@divisor,w
  2923  05A8  027A               	subwf	___lwmod@dividend,w
  2924  05A9                     u685:	
  2925  05A9  1C03               	skipc
  2926  05AA  2DAC               	goto	u681
  2927  05AB  2DAD               	goto	u680
  2928  05AC                     u681:	
  2929  05AC  2DB1               	goto	l1467
  2930  05AD                     u680:	
  2931  05AD                     l1465:	
  2932  05AD  0878               	movf	___lwmod@divisor,w
  2933  05AE  02FA               	subwf	___lwmod@dividend,f
  2934  05AF  0879               	movf	___lwmod@divisor+1,w
  2935  05B0  3BFB               	subwfb	___lwmod@dividend+1,f
  2936  05B1                     l1467:	
  2937  05B1  3001               	movlw	1
  2938  05B2                     u695:	
  2939  05B2  36F9               	lsrf	___lwmod@divisor+1,f
  2940  05B3  0CF8               	rrf	___lwmod@divisor,f
  2941  05B4  0B89               	decfsz	9,f
  2942  05B5  2DB2               	goto	u695
  2943  05B6                     l1469:	
  2944  05B6  3001               	movlw	1
  2945  05B7  02FD               	subwf	___lwmod@counter,f
  2946  05B8  1D03               	btfss	3,2
  2947  05B9  2DBB               	goto	u701
  2948  05BA  2DBC               	goto	u700
  2949  05BB                     u701:	
  2950  05BB  2DA3               	goto	l1463
  2951  05BC                     u700:	
  2952  05BC                     l1471:	
  2953  05BC  087B               	movf	___lwmod@dividend+1,w
  2954  05BD  00F9               	movwf	?___lwmod+1
  2955  05BE  087A               	movf	___lwmod@dividend,w
  2956  05BF  00F8               	movwf	?___lwmod
  2957  05C0                     l767:	
  2958  05C0  0008               	return
  2959  05C1                     __end_of___lwmod:	
  2960                           
  2961                           	psect	text10
  2962  05C1                     __ptext10:	
  2963 ;; *************** function ___lwdiv *****************
  2964 ;; Defined at:
  2965 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  divisor         2    0[COMMON] unsigned int 
  2968 ;;  dividend        2    2[COMMON] unsigned int 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  quotient        2    5[COMMON] unsigned int 
  2971 ;;  counter         1    7[COMMON] unsigned char 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  2    0[COMMON] unsigned int 
  2974 ;; Registers used:
  2975 ;;		wreg, status,2, status,0
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2981 ;;      Params:         4       0       0       0       0       0
  2982 ;;      Locals:         3       0       0       0       0       0
  2983 ;;      Temps:          1       0       0       0       0       0
  2984 ;;      Totals:         8       0       0       0       0       0
  2985 ;;Total ram usage:        8 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_printf
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           
  2995                           ;psect for function ___lwdiv
  2996  05C1                     ___lwdiv:	
  2997  05C1                     l1427:	
  2998                           ;incstack = 0
  2999                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3000                           
  3001  05C1  01F5               	clrf	___lwdiv@quotient
  3002  05C2  01F6               	clrf	___lwdiv@quotient+1
  3003  05C3                     l1429:	
  3004  05C3  0870               	movf	___lwdiv@divisor,w
  3005  05C4  0471               	iorwf	___lwdiv@divisor+1,w
  3006  05C5  1903               	btfsc	3,2
  3007  05C6  2DC8               	goto	u581
  3008  05C7  2DC9               	goto	u580
  3009  05C8                     u581:	
  3010  05C8  2DF8               	goto	l1449
  3011  05C9                     u580:	
  3012  05C9                     l1431:	
  3013  05C9  01F7               	clrf	___lwdiv@counter
  3014  05CA  0AF7               	incf	___lwdiv@counter,f
  3015  05CB  2DD5               	goto	l1437
  3016  05CC                     l1433:	
  3017  05CC  3001               	movlw	1
  3018  05CD                     u595:	
  3019  05CD  35F0               	lslf	___lwdiv@divisor,f
  3020  05CE  0DF1               	rlf	___lwdiv@divisor+1,f
  3021  05CF  0B89               	decfsz	9,f
  3022  05D0  2DCD               	goto	u595
  3023  05D1                     l1435:	
  3024  05D1  3001               	movlw	1
  3025  05D2  00F4               	movwf	??___lwdiv
  3026  05D3  0874               	movf	??___lwdiv,w
  3027  05D4  07F7               	addwf	___lwdiv@counter,f
  3028  05D5                     l1437:	
  3029  05D5  1FF1               	btfss	___lwdiv@divisor+1,7
  3030  05D6  2DD8               	goto	u601
  3031  05D7  2DD9               	goto	u600
  3032  05D8                     u601:	
  3033  05D8  2DCC               	goto	l1433
  3034  05D9                     u600:	
  3035  05D9                     l1439:	
  3036  05D9  3001               	movlw	1
  3037  05DA                     u615:	
  3038  05DA  35F5               	lslf	___lwdiv@quotient,f
  3039  05DB  0DF6               	rlf	___lwdiv@quotient+1,f
  3040  05DC  0B89               	decfsz	9,f
  3041  05DD  2DDA               	goto	u615
  3042  05DE  0871               	movf	___lwdiv@divisor+1,w
  3043  05DF  0273               	subwf	___lwdiv@dividend+1,w
  3044  05E0  1D03               	skipz
  3045  05E1  2DE4               	goto	u625
  3046  05E2  0870               	movf	___lwdiv@divisor,w
  3047  05E3  0272               	subwf	___lwdiv@dividend,w
  3048  05E4                     u625:	
  3049  05E4  1C03               	skipc
  3050  05E5  2DE7               	goto	u621
  3051  05E6  2DE8               	goto	u620
  3052  05E7                     u621:	
  3053  05E7  2DED               	goto	l1445
  3054  05E8                     u620:	
  3055  05E8                     l1441:	
  3056  05E8  0870               	movf	___lwdiv@divisor,w
  3057  05E9  02F2               	subwf	___lwdiv@dividend,f
  3058  05EA  0871               	movf	___lwdiv@divisor+1,w
  3059  05EB  3BF3               	subwfb	___lwdiv@dividend+1,f
  3060  05EC                     l1443:	
  3061  05EC  1475               	bsf	___lwdiv@quotient,0
  3062  05ED                     l1445:	
  3063  05ED  3001               	movlw	1
  3064  05EE                     u635:	
  3065  05EE  36F1               	lsrf	___lwdiv@divisor+1,f
  3066  05EF  0CF0               	rrf	___lwdiv@divisor,f
  3067  05F0  0B89               	decfsz	9,f
  3068  05F1  2DEE               	goto	u635
  3069  05F2                     l1447:	
  3070  05F2  3001               	movlw	1
  3071  05F3  02F7               	subwf	___lwdiv@counter,f
  3072  05F4  1D03               	btfss	3,2
  3073  05F5  2DF7               	goto	u641
  3074  05F6  2DF8               	goto	u640
  3075  05F7                     u641:	
  3076  05F7  2DD9               	goto	l1439
  3077  05F8                     u640:	
  3078  05F8                     l1449:	
  3079  05F8  0876               	movf	___lwdiv@quotient+1,w
  3080  05F9  00F1               	movwf	?___lwdiv+1
  3081  05FA  0875               	movf	___lwdiv@quotient,w
  3082  05FB  00F0               	movwf	?___lwdiv
  3083  05FC                     l757:	
  3084  05FC  0008               	return
  3085  05FD                     __end_of___lwdiv:	
  3086                           
  3087                           	psect	text11
  3088  04AF                     __ptext11:	
  3089 ;; *************** function _getch *****************
  3090 ;; Defined at:
  3091 ;;		line 35 in file "main.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;		None
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;		None
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      unsigned char 
  3098 ;; Registers used:
  3099 ;;		wreg, status,2, pclath, cstack
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3105 ;;      Params:         0       0       0       0       0       0
  3106 ;;      Locals:         0       0       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0       0
  3108 ;;      Totals:         0       0       0       0       0       0
  3109 ;;Total ram usage:        0 bytes
  3110 ;; Hardware stack levels used:    1
  3111 ;; Hardware stack levels required when called:    1
  3112 ;; This function calls:
  3113 ;;		_EUSART_Read
  3114 ;; This function is called by:
  3115 ;;		_detect_mode
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           
  3120                           ;psect for function _getch
  3121  04AF                     _getch:	
  3122  04AF                     l1509:	
  3123                           ;incstack = 0
  3124                           ; Regs used in _getch: [wreg+status,2+pclath+cstack]
  3125                           
  3126                           
  3127                           ;main.c: 36: return EUSART_Read();
  3128  04AF  3184  24EE  3184   	fcall	_EUSART_Read
  3129  04B2                     l176:	
  3130  04B2  0008               	return
  3131  04B3                     __end_of_getch:	
  3132                           
  3133                           	psect	text12
  3134  04EE                     __ptext12:	
  3135 ;; *************** function _EUSART_Read *****************
  3136 ;; Defined at:
  3137 ;;		line 113 in file "mcc_generated_files/eusart.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;		None
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      unsigned char 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3151 ;;      Params:         0       0       0       0       0       0
  3152 ;;      Locals:         0       0       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0
  3154 ;;      Totals:         0       0       0       0       0       0
  3155 ;;Total ram usage:        0 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		_getch
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           
  3165                           ;psect for function _EUSART_Read
  3166  04EE                     _EUSART_Read:	
  3167  04EE                     l1413:	
  3168                           ;incstack = 0
  3169                           ; Regs used in _EUSART_Read: [wreg+status,2]
  3170                           
  3171  04EE                     l60:	
  3172                           ;eusart.c: 116: {
  3173                           
  3174  04EE  0020               	movlb	0	; select bank0
  3175  04EF  1E91               	btfss	17,5	;volatile
  3176  04F0  2CF2               	goto	u561
  3177  04F1  2CF3               	goto	u560
  3178  04F2                     u561:	
  3179  04F2  2CEE               	goto	l60
  3180  04F3                     u560:	
  3181  04F3                     l1415:	
  3182                           
  3183                           ;eusart.c: 117: };eusart.c: 119: eusartRxLastError.status = 0;
  3184  04F3  01BB               	clrf	_eusartRxLastError	;volatile
  3185  04F4                     l1417:	
  3186                           
  3187                           ;eusart.c: 121: if(1 == RCSTAbits.OERR)
  3188  04F4  0023               	movlb	3	; select bank3
  3189  04F5  1C9D               	btfss	29,1	;volatile
  3190  04F6  2CF8               	goto	u571
  3191  04F7  2CF9               	goto	u570
  3192  04F8                     u571:	
  3193  04F8  2CFB               	goto	l1421
  3194  04F9                     u570:	
  3195  04F9                     l1419:	
  3196                           
  3197                           ;eusart.c: 122: {;eusart.c: 125: RCSTAbits.CREN = 0;
  3198  04F9  121D               	bcf	29,4	;volatile
  3199                           
  3200                           ;eusart.c: 126: RCSTAbits.CREN = 1;
  3201  04FA  161D               	bsf	29,4	;volatile
  3202  04FB                     l1421:	
  3203                           
  3204                           ;eusart.c: 127: };eusart.c: 129: return RCREG;
  3205  04FB  0819               	movf	25,w	;volatile
  3206  04FC                     l64:	
  3207  04FC  0008               	return
  3208  04FD                     __end_of_EUSART_Read:	
  3209                           
  3210                           	psect	text13
  3211  04E1                     __ptext13:	
  3212 ;; *************** function _SYSTEM_Initialize *****************
  3213 ;; Defined at:
  3214 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0, pclath, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3228 ;;      Params:         0       0       0       0       0       0
  3229 ;;      Locals:         0       0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0
  3231 ;;      Totals:         0       0       0       0       0       0
  3232 ;;Total ram usage:        0 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    2
  3235 ;; This function calls:
  3236 ;;		_EUSART_Initialize
  3237 ;;		_OSCILLATOR_Initialize
  3238 ;;		_PIN_MANAGER_Initialize
  3239 ;;		_WDT_Initialize
  3240 ;; This function is called by:
  3241 ;;		_main
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           
  3246                           ;psect for function _SYSTEM_Initialize
  3247  04E1                     _SYSTEM_Initialize:	
  3248  04E1                     l1587:	
  3249                           ;incstack = 0
  3250                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3251                           
  3252                           
  3253                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  3254  04E1  3184  24FD  3184   	fcall	_PIN_MANAGER_Initialize
  3255                           
  3256                           ;mcc.c: 54: OSCILLATOR_Initialize();
  3257  04E4  3184  24D5  3184   	fcall	_OSCILLATOR_Initialize
  3258                           
  3259                           ;mcc.c: 55: WDT_Initialize();
  3260  04E7  3184  24AB  3184   	fcall	_WDT_Initialize
  3261                           
  3262                           ;mcc.c: 56: EUSART_Initialize();
  3263  04EA  3185  2515  3184   	fcall	_EUSART_Initialize
  3264  04ED                     l109:	
  3265  04ED  0008               	return
  3266  04EE                     __end_of_SYSTEM_Initialize:	
  3267                           
  3268                           	psect	text14
  3269  04AB                     __ptext14:	
  3270 ;; *************** function _WDT_Initialize *****************
  3271 ;; Defined at:
  3272 ;;		line 73 in file "mcc_generated_files/mcc.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		wreg
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3286 ;;      Params:         0       0       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0       0
  3289 ;;      Totals:         0       0       0       0       0       0
  3290 ;;Total ram usage:        0 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_SYSTEM_Initialize
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           
  3300                           ;psect for function _WDT_Initialize
  3301  04AB                     _WDT_Initialize:	
  3302  04AB                     l1507:	
  3303                           ;incstack = 0
  3304                           ; Regs used in _WDT_Initialize: [wreg]
  3305                           
  3306                           
  3307                           ;mcc.c: 76: WDTCON = 0x16;
  3308  04AB  3016               	movlw	22
  3309  04AC  0021               	movlb	1	; select bank1
  3310  04AD  0097               	movwf	23	;volatile
  3311  04AE                     l118:	
  3312  04AE  0008               	return
  3313  04AF                     __end_of_WDT_Initialize:	
  3314                           
  3315                           	psect	text15
  3316  04FD                     __ptext15:	
  3317 ;; *************** function _PIN_MANAGER_Initialize *****************
  3318 ;; Defined at:
  3319 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3333 ;;      Params:         0       0       0       0       0       0
  3334 ;;      Locals:         0       0       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0       0
  3336 ;;      Totals:         0       0       0       0       0       0
  3337 ;;Total ram usage:        0 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_SYSTEM_Initialize
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           
  3347                           ;psect for function _PIN_MANAGER_Initialize
  3348  04FD                     _PIN_MANAGER_Initialize:	
  3349  04FD                     l1485:	
  3350                           ;incstack = 0
  3351                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3352                           
  3353                           
  3354                           ;pin_manager.c: 60: LATA = 0x00;
  3355  04FD  0022               	movlb	2	; select bank2
  3356  04FE  018C               	clrf	12	;volatile
  3357                           
  3358                           ;pin_manager.c: 61: LATB = 0x00;
  3359  04FF  018D               	clrf	13	;volatile
  3360  0500                     l1487:	
  3361                           
  3362                           ;pin_manager.c: 66: TRISA = 0xF3;
  3363  0500  30F3               	movlw	243
  3364  0501  0021               	movlb	1	; select bank1
  3365  0502  008C               	movwf	12	;volatile
  3366  0503                     l1489:	
  3367                           
  3368                           ;pin_manager.c: 67: TRISB = 0xFF;
  3369  0503  30FF               	movlw	255
  3370  0504  008D               	movwf	13	;volatile
  3371  0505                     l1491:	
  3372                           
  3373                           ;pin_manager.c: 72: ANSELB = 0xDA;
  3374  0505  30DA               	movlw	218
  3375  0506  0023               	movlb	3	; select bank3
  3376  0507  008D               	movwf	13	;volatile
  3377  0508                     l1493:	
  3378                           
  3379                           ;pin_manager.c: 73: ANSELA = 0x11;
  3380  0508  3011               	movlw	17
  3381  0509  008C               	movwf	12	;volatile
  3382                           
  3383                           ;pin_manager.c: 78: WPUB = 0x00;
  3384  050A  0024               	movlb	4	; select bank4
  3385  050B  018D               	clrf	13	;volatile
  3386                           
  3387                           ;pin_manager.c: 79: WPUA = 0x00;
  3388  050C  018C               	clrf	12	;volatile
  3389  050D                     l1495:	
  3390                           
  3391                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  3392  050D  0021               	movlb	1	; select bank1
  3393  050E  1795               	bsf	21,7	;volatile
  3394  050F                     l1497:	
  3395                           
  3396                           ;pin_manager.c: 86: APFCON0 = 0x80;
  3397  050F  3080               	movlw	128
  3398  0510  0022               	movlb	2	; select bank2
  3399  0511  009D               	movwf	29	;volatile
  3400  0512                     l1499:	
  3401                           
  3402                           ;pin_manager.c: 87: APFCON1 = 0x01;
  3403  0512  3001               	movlw	1
  3404  0513  009E               	movwf	30	;volatile
  3405  0514                     l143:	
  3406  0514  0008               	return
  3407  0515                     __end_of_PIN_MANAGER_Initialize:	
  3408                           
  3409                           	psect	text16
  3410  04D5                     __ptext16:	
  3411 ;; *************** function _OSCILLATOR_Initialize *****************
  3412 ;; Defined at:
  3413 ;;		line 59 in file "mcc_generated_files/mcc.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;		None
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;		None
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      void 
  3420 ;; Registers used:
  3421 ;;		wreg, status,2
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3427 ;;      Params:         0       0       0       0       0       0
  3428 ;;      Locals:         0       0       0       0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0
  3430 ;;      Totals:         0       0       0       0       0       0
  3431 ;;Total ram usage:        0 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_SYSTEM_Initialize
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           
  3441                           ;psect for function _OSCILLATOR_Initialize
  3442  04D5                     _OSCILLATOR_Initialize:	
  3443  04D5                     l1501:	
  3444                           ;incstack = 0
  3445                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3446                           
  3447                           
  3448                           ;mcc.c: 62: OSCCON = 0x70;
  3449  04D5  3070               	movlw	112
  3450  04D6  0021               	movlb	1	; select bank1
  3451  04D7  0099               	movwf	25	;volatile
  3452  04D8                     l1503:	
  3453                           
  3454                           ;mcc.c: 64: OSCTUNE = 0x00;
  3455  04D8  0198               	clrf	24	;volatile
  3456  04D9                     l1505:	
  3457                           
  3458                           ;mcc.c: 66: BORCON = 0x00;
  3459  04D9  0022               	movlb	2	; select bank2
  3460  04DA  0196               	clrf	22	;volatile
  3461  04DB                     l112:	
  3462                           ;mcc.c: 69: {
  3463                           
  3464  04DB  0021               	movlb	1	; select bank1
  3465  04DC  1F1A               	btfss	26,6	;volatile
  3466  04DD  2CDF               	goto	u711
  3467  04DE  2CE0               	goto	u710
  3468  04DF                     u711:	
  3469  04DF  2CDB               	goto	l112
  3470  04E0                     u710:	
  3471  04E0                     l115:	
  3472  04E0  0008               	return
  3473  04E1                     __end_of_OSCILLATOR_Initialize:	
  3474                           
  3475                           	psect	text17
  3476  0515                     __ptext17:	
  3477 ;; *************** function _EUSART_Initialize *****************
  3478 ;; Defined at:
  3479 ;;		line 66 in file "mcc_generated_files/eusart.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0, pclath, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3493 ;;      Params:         0       0       0       0       0       0
  3494 ;;      Locals:         0       0       0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0
  3496 ;;      Totals:         0       0       0       0       0       0
  3497 ;;Total ram usage:        0 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    1
  3500 ;; This function calls:
  3501 ;;		_EUSART_SetErrorHandler
  3502 ;;		_EUSART_SetFramingErrorHandler
  3503 ;;		_EUSART_SetOverrunErrorHandler
  3504 ;; This function is called by:
  3505 ;;		_SYSTEM_Initialize
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           
  3510                           ;psect for function _EUSART_Initialize
  3511  0515                     _EUSART_Initialize:	
  3512  0515                     l1475:	
  3513                           ;incstack = 0
  3514                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3515                           
  3516                           
  3517                           ;eusart.c: 71: BAUDCON = 0x08;
  3518  0515  3008               	movlw	8
  3519  0516  0023               	movlb	3	; select bank3
  3520  0517  009F               	movwf	31	;volatile
  3521                           
  3522                           ;eusart.c: 74: RCSTA = 0x90;
  3523  0518  3090               	movlw	144
  3524  0519  009D               	movwf	29	;volatile
  3525                           
  3526                           ;eusart.c: 77: TXSTA = 0x24;
  3527  051A  3024               	movlw	36
  3528  051B  009E               	movwf	30	;volatile
  3529                           
  3530                           ;eusart.c: 80: SPBRGL = 0x40;
  3531  051C  3040               	movlw	64
  3532  051D  009B               	movwf	27	;volatile
  3533                           
  3534                           ;eusart.c: 83: SPBRGH = 0x03;
  3535  051E  3003               	movlw	3
  3536  051F  009C               	movwf	28	;volatile
  3537  0520                     l1477:	
  3538                           
  3539                           ;eusart.c: 86: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  3540  0520  3000               	movlw	0
  3541  0521  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3542  0522  3000               	movlw	0
  3543  0523  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3544  0524  3184  24B9  3185   	fcall	_EUSART_SetFramingErrorHandler
  3545  0527                     l1479:	
  3546                           
  3547                           ;eusart.c: 87: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  3548  0527  3000               	movlw	0
  3549  0528  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3550  0529  3000               	movlw	0
  3551  052A  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3552  052B  3184  24BF  3185   	fcall	_EUSART_SetOverrunErrorHandler
  3553  052E                     l1481:	
  3554                           
  3555                           ;eusart.c: 88: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  3556  052E  3000               	movlw	0
  3557  052F  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  3558  0530  3000               	movlw	0
  3559  0531  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3560  0532  3184  24B3  3185   	fcall	_EUSART_SetErrorHandler
  3561  0535                     l1483:	
  3562                           
  3563                           ;eusart.c: 90: eusartRxLastError.status = 0;
  3564  0535  0020               	movlb	0	; select bank0
  3565  0536  01BB               	clrf	_eusartRxLastError	;volatile
  3566  0537                     l43:	
  3567  0537  0008               	return
  3568  0538                     __end_of_EUSART_Initialize:	
  3569                           
  3570                           	psect	text18
  3571  04BF                     __ptext18:	
  3572 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3573 ;; Defined at:
  3574 ;;		line 161 in file "mcc_generated_files/eusart.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3577 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3589 ;;      Params:         2       0       0       0       0       0
  3590 ;;      Locals:         0       0       0       0       0       0
  3591 ;;      Temps:          0       0       0       0       0       0
  3592 ;;      Totals:         2       0       0       0       0       0
  3593 ;;Total ram usage:        2 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_EUSART_Initialize
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           
  3603                           ;psect for function _EUSART_SetOverrunErrorHandler
  3604  04BF                     _EUSART_SetOverrunErrorHandler:	
  3605  04BF                     l1409:	
  3606                           ;incstack = 0
  3607                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3608                           
  3609                           
  3610                           ;eusart.c: 162: EUSART_OverrunErrorHandler = interruptHandler;
  3611  04BF  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3612  04C0  0020               	movlb	0	; select bank0
  3613  04C1  00B8               	movwf	_EUSART_OverrunErrorHandler+1
  3614  04C2  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3615  04C3  00B7               	movwf	_EUSART_OverrunErrorHandler
  3616  04C4                     l85:	
  3617  04C4  0008               	return
  3618  04C5                     __end_of_EUSART_SetOverrunErrorHandler:	
  3619                           
  3620                           	psect	text19
  3621  04B9                     __ptext19:	
  3622 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3623 ;; Defined at:
  3624 ;;		line 157 in file "mcc_generated_files/eusart.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3627 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;		None
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      void 
  3632 ;; Registers used:
  3633 ;;		wreg
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3639 ;;      Params:         2       0       0       0       0       0
  3640 ;;      Locals:         0       0       0       0       0       0
  3641 ;;      Temps:          0       0       0       0       0       0
  3642 ;;      Totals:         2       0       0       0       0       0
  3643 ;;Total ram usage:        2 bytes
  3644 ;; Hardware stack levels used:    1
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_EUSART_Initialize
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           
  3653                           ;psect for function _EUSART_SetFramingErrorHandler
  3654  04B9                     _EUSART_SetFramingErrorHandler:	
  3655  04B9                     l1407:	
  3656                           ;incstack = 0
  3657                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3658                           
  3659                           
  3660                           ;eusart.c: 158: EUSART_FramingErrorHandler = interruptHandler;
  3661  04B9  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3662  04BA  0020               	movlb	0	; select bank0
  3663  04BB  00BA               	movwf	_EUSART_FramingErrorHandler+1
  3664  04BC  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3665  04BD  00B9               	movwf	_EUSART_FramingErrorHandler
  3666  04BE                     l82:	
  3667  04BE  0008               	return
  3668  04BF                     __end_of_EUSART_SetFramingErrorHandler:	
  3669                           
  3670                           	psect	text20
  3671  04B3                     __ptext20:	
  3672 ;; *************** function _EUSART_SetErrorHandler *****************
  3673 ;; Defined at:
  3674 ;;		line 165 in file "mcc_generated_files/eusart.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3677 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3689 ;;      Params:         2       0       0       0       0       0
  3690 ;;      Locals:         0       0       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0       0
  3692 ;;      Totals:         2       0       0       0       0       0
  3693 ;;Total ram usage:        2 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; This function calls:
  3696 ;;		Nothing
  3697 ;; This function is called by:
  3698 ;;		_EUSART_Initialize
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           
  3703                           ;psect for function _EUSART_SetErrorHandler
  3704  04B3                     _EUSART_SetErrorHandler:	
  3705  04B3                     l1411:	
  3706                           ;incstack = 0
  3707                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3708                           
  3709                           
  3710                           ;eusart.c: 166: EUSART_ErrorHandler = interruptHandler;
  3711  04B3  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3712  04B4  0020               	movlb	0	; select bank0
  3713  04B5  00B6               	movwf	_EUSART_ErrorHandler+1
  3714  04B6  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3715  04B7  00B5               	movwf	_EUSART_ErrorHandler
  3716  04B8                     l88:	
  3717  04B8  0008               	return
  3718  04B9                     __end_of_EUSART_SetErrorHandler:	
  3719  007E                     btemp	set	126	;btemp
  3720  007E                     wtemp0	set	126


Data Sizes:
    Strings     194
    Constant    10
    Data        0
    BSS         7
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      28
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_11(CODE[3]), STR_10(CODE[32]), STR_9(CODE[14]), STR_8(CODE[16]), 
		 -> STR_7(CODE[14]), STR_6(CODE[13]), STR_5(CODE[50]), STR_4(CODE[32]), 
		 -> STR_3(CODE[13]), STR_2(CODE[33]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _recv_daikin_frame->_bit_find
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_recv_daikin_reader
    _recv_daikin_reader->_printf
    _detect_mode->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6545
                                             18 BANK0      3     3      0
                  _SYSTEM_Initialize
                        _detect_mode
                             _printf
                              _putch
                  _recv_daikin_frame
                 _recv_daikin_reader
                        _recv_reader
 ---------------------------------------------------------------------------------
 (1) _recv_reader                                          3     3      0      48
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _recv_daikin_reader                                   4     4      0    2052
                                             14 BANK0      4     4      0
                           _bit_find
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (1) _recv_daikin_frame                                    4     4      0     205
                                              3 COMMON     4     4      0
                           _bit_find
                              _putch
 ---------------------------------------------------------------------------------
 (2) _bit_find                                             3     3      0      48
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _detect_mode                                          2     2      0    1987
                                             14 BANK0      2     2      0
                              _getch
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              22    18      4    1891
                                              0 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _getch                                                0     0      0       0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _detect_mode
     _getch
       _EUSART_Read
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART_Write
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART_Write
   _putch
     _EUSART_Write
   _recv_daikin_frame
     _bit_find
     _putch
       _EUSART_Write
   _recv_daikin_reader
     _bit_find
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART_Write
     _putch
       _EUSART_Write
   _recv_reader

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     15      1C       6       35.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      2A      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun May 17 11:33:47 2020

                           recv_daikin_frame@a 0076                             recv_daikin_frame@i 0075  
                                  __CFG_CP$OFF 0000                                             l43 0537  
                                           l60 04EE                                             l70 04D4  
                                           l64 04FC                                             l82 04BE  
                                           l67 04CC                                             l85 04C4  
                                           l88 04B8                                            l112 04DB  
                                          l200 0732                                            l115 04E0  
                                          l109 04ED                                            l118 04AE  
                                          l143 0514                                            l207 0639  
                                          l240 0664                                            l208 0634  
                                          l225 058C                                            l234 055D  
                                          l243 0679                                            l173 04CA  
                                          l176 04B2                                            l481 07F4  
                                          l757 05FC                                            l767 05C0  
                                          u600 05D9                                            u601 05D8  
                                 __CFG_CPD$OFF 0000                                            u620 05E8  
                                          u700 05BC                                            u621 05E7  
                                          u701 05BB                                            u710 04E0  
                                          u550 04D1                                            u711 04DF  
                                          u615 05DA                                            u551 04D0  
                                          u560 04F3                                            u640 05F8  
                                          u720 073F                                            u800 0662  
                                          u561 04F2                                            u641 05F7  
                                          u625 05E4                                            u721 073E  
                                          u801 0661                                            u570 04F9  
                                          u650 0593                                            u730 076B  
                                          u810 0669                                            u571 04F8  
                                          u635 05EE                                            u651 0592  
                                          u731 076A                                            u811 0668  
                                          u580 05C9                                            u740 078F  
                                          u820 0676                                            u900 0633  
                                          u581 05C8                                            u741 078E  
                                          u821 0675                                            u805 065E  
                                          u901 0632                                            u670 05A3  
                                          u750 079A                                            u830 06F8  
                                          u910 0639                                            u671 05A2  
                                          u751 0799                                            u831 06F7  
                                          u911 0638                                            u680 05AD  
                                          u760 07A0                                            u840 0706  
                                          u920 054C                                            u681 05AC  
                                          u665 0597                                            u761 079F  
                                          u745 078B                                            u841 0705  
                                          u825 0672                                            u921 054B  
                                          u905 062F                                            u770 07DF  
                                          u850 0714                                            u930 0552  
                                          u595 05CD                                            u771 07DE  
                                          u851 0713                                            u931 0551  
                                          u780 07F4                                            u860 0722  
                                          u940 055D                                            u685 05A9  
                                          u781 07F3                                            u861 0721  
                                          u941 055C                                            u790 064A  
                                          u870 0577                                            u950 068E  
                                          u695 05B2                                            u791 0649  
                                          u871 0576                                            u951 068D  
                                          u880 060D                                            u881 060C  
                                          u890 061A                                            u891 0619  
                                          u895 0616                            recv_daikin_reader@a 0030  
                          recv_daikin_reader@i 0031                 ?_EUSART_SetFramingErrorHandler 0070  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 __CFG_IESO$ON 0000                                   ?_EUSART_Read 0070  
                                 __CFG_LVP$OFF 0000                                           l1411 04B3  
                                         l1403 04CC                                           l1501 04D5  
                                         l1421 04FB                                           l1413 04EE  
                                         l1405 04D1                                           l1407 04B9  
                                         l1503 04D8                                           l1415 04F3  
                                         l1431 05C9                                           l1409 04BF  
                                         l1505 04D9                                           l1417 04F4  
                                         l1441 05E8                                           l1433 05CC  
                                         l1425 04C6                                           l1513 0733  
                                         l1601 070E                                           l1507 04AB  
                                         l1419 04F9                                           l1443 05EC  
                                         l1435 05D1                                           l1427 05C1  
                                         l1531 076B                                           l1523 0745  
                                         l1515 0739                                           l1603 0714  
                                         l1611 072A                                           l1509 04AF  
                                         l1445 05ED                                           l1437 05D5  
                                         l1429 05C3                                           l1461 059F  
                                         l1453 058D                                           l1541 0776  
                                         l1533 076F                                           l1525 075C  
                                         l1517 073F                                           l1605 071C  
                                         l1621 0560                                           l1447 05F2  
                                         l1439 05D9                                           l1463 05A3  
                                         l1455 0593                                           l1471 05BC  
                                         l1551 07A4                                           l1535 0774  
                                         l1527 0763                                           l1519 0744  
                                         l1607 0722                                           l1631 0584  
                                         l1623 0567                                           l1615 055E  
                                         l1481 052E                                           l1449 05F8  
                                         l1465 05AD                                           l1457 0596  
                                         l1553 07AA                                           l1545 0790  
                                         l1529 0767                                           l1609 072A  
                                         l1561 063A                                           l1625 056C  
                                         l1633 05FD                                           l1483 0535  
                                         l1475 0515                                           l1491 0505  
                                         l1467 05B1                                           l1459 059B  
                                         l1555 07D1                                           l1547 079A  
                                         l1571 0662                                           l1563 063D  
                                         l1651 053B                                           l1627 0571  
                                         l1643 061B                                           l1635 0600  
                                         l1477 0520                                           l1493 0508  
                                         l1485 04FD                                           l1469 05B6  
                                         l1557 07D5                                           l1549 07A0  
                                         l1565 0645                                           l1653 0541  
                                         l1661 0557                                           l1629 0577  
                                         l1645 061E                                           l1637 0608  
                                         l1479 0527                                           l1495 050D  
                                         l1487 0500                                           l1559 07DF  
                                         l1591 06EB                                           l1583 0678  
                                         l1575 0669                                           l1567 064A  
                                         l1655 0546                                           l1639 060D  
                                         l1671 0685                                           l1663 067A  
                                         l1497 050F                                           l1489 0503  
                                         l1593 06F2                                           l1577 0676  
                                         l1569 064D                                           l1657 054C  
                                         l1649 0539                                           l1681 0698  
                                         l1673 0689                                           l1665 067D  
                                         l1499 0512                                           l1587 04E1  
                                         l1595 06F8                                           l1659 0553  
                                         l1691 06B4                                           l1683 069C  
                                         l1675 068E                                           l1667 067F  
                                         l1597 0700                                           l1589 06D3  
                                         l1693 06BC                                           l1685 06A9  
                                         l1677 0691                                           l1669 0682  
                                         l1599 0706                                           l1695 06CB  
                                         l1687 06AC                                           l1679 0694  
                                         l1689 06B0                                           STR_1 08C3  
                                         STR_2 083C                                           STR_3 08B6  
                                         STR_4 085D                                           STR_5 080A  
                                         STR_6 08A9                                           STR_7 088D  
                                         STR_8 087D                                           STR_9 089B  
                                         u1027 0686                                           u1037 06A2  
                                         u1047 0605                                           u1057 0623  
                                         u1067 057D                                           u1077 0642  
                                         _LATA 010C                                           _LATB 010D  
                                         u1087 0652                                           _PLLR 04D6  
                                         _WPUA 020C                                           _WPUB 020D  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         _main 067A                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           fsr1l 0006  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                         start 0002                          recv_daikin_frame@size 0074  
                                __CFG_MCLRE$ON 0000                                  __CFG_PLLEN$ON 0000  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 000C  
                __end_of_OSCILLATOR_Initialize 04E1                                          ?_main 0070  
                                        STR_10 085D                                          STR_11 08C9  
                                __CFG_WDTE$OFF 0000                                __end_of___lwdiv 05FD  
                              __end_of___lwmod 05C1                                detect_mode@mode 002F  
                                        _RCREG 0199                              _recv_daikin_frame 0538  
                                        _RCSTA 019D                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TXSTA 019E                             ?_recv_daikin_frame 0070  
                                        _getch 04AF                                __end_of_dpowers 080A  
                               _WDT_Initialize 04AB                                          _putch 04C5  
                          ??_recv_daikin_frame 0073                                          status 0003  
                                        wtemp0 007E                                __initialization 07F5  
                                 __end_of_main 06D3                                 ??_EUSART_Write 0070  
                                 ?_recv_reader 0070                      __end_of_recv_daikin_frame 055E  
                                       ??_main 0032                           __size_of_detect_mode 0060  
                       __end_of_WDT_Initialize 04AF              _EUSART_DefaultFramingErrorHandler 0000  
                                       ?_getch 0070                     _EUSART_OverrunErrorHandler 0037  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _BORCON 0116  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                             _recv_daikin_reader 055E  
                                       _WDTCON 0097                                 __CFG_PWRTE$OFF 0000  
                             __end_of_bit_find 067A                            ?_recv_daikin_reader 0070  
                               __CFG_STVREN$ON 0000                                      ??___lwdiv 0074  
                                    ??___lwmod 007C                                         _printf 0733  
                              ?_WDT_Initialize 0070                           ??_recv_daikin_reader 002E  
                         __size_of_EUSART_Read 000F                              _SYSTEM_Initialize 04E1  
                      __end_of__initialization 07FD                             ?_SYSTEM_Initialize 0070  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0072  
                                __end_of_getch 04B3                                  __end_of_putch 04CB  
                   __size_of_recv_daikin_frame 0026                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 0072                                        ??_getch 0070  
                    __end_of_SYSTEM_Initialize 04EE                                        ??_putch 0071  
                                   __pbssBANK0 0035                           __end_of_EUSART_Write 04D5  
                                   __pmaintext 067A                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                      ?_printf 0020                           __size_of_recv_reader 003D  
                                    ?_bit_find 0070                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0072                                        ___lwdiv 05C1  
                                      ___lwmod 058D                                        __ptext1 05FD  
                                      __ptext2 055E                                        __ptext3 0538  
                                      __ptext4 063A                                        __ptext5 06D3  
                                      __ptext6 0733                                        __ptext7 04C5  
                                      __ptext8 04CB                                        __ptext9 058D  
                              __size_of_printf 00C2                                        _dpowers 0800  
                        _OSCILLATOR_Initialize 04D5                       ??_PIN_MANAGER_Initialize 0070  
                                   ??_bit_find 0070                                        main@cnt 0034  
                   __size_of_SYSTEM_Initialize 000D                           end_of_initialization 07FD  
        __end_of_EUSART_SetOverrunErrorHandler 04C5         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 04BF                              _EUSART_Initialize 0515  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                                      printf@c 002D                                        printf@f 0020  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
                                ??_detect_mode 002E                                      _PORTAbits 000C  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 000A  
              __size_of_EUSART_SetErrorHandler 0006                      __end_of_EUSART_Initialize 0538  
                                    _TXSTAbits 019E                     _EUSART_DefaultErrorHandler 0000  
                                 _EUSART_Write 04CB                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_printf 07F5                            start_initialization 07F5  
              __size_of_PIN_MANAGER_Initialize 0018                    __size_of_recv_daikin_reader 002F  
                                ??_EUSART_Read 0070                            __end_of_detect_mode 0733  
               ?_EUSART_SetOverrunErrorHandler 0070                     _EUSART_FramingErrorHandler 0039  
                       _EUSART_SetErrorHandler 04B3                                       ??_printf 0024  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                            __size_of_bit_find 0040                     __size_of_EUSART_Initialize 0023  
                          __end_of_EUSART_Read 04FD                                  bit_find@width 0071  
                             ___lwdiv@dividend 0072                         _PIN_MANAGER_Initialize 04FD  
                                     ?___lwdiv 0070                                       ?___lwmod 0078  
                             recv_reader@width 0071                                  ??_recv_reader 0070  
                                  _detect_mode 06D3                               ___lwdiv@quotient 0075  
                               __size_of_getch 0004                                 __size_of_putch 0006  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0070  
                            _eusartRxLastError 003B                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072              _EUSART_DefaultOverrunErrorHandler 0000  
                                   printf@flag 0029                                     printf@prec 002A  
                          __end_of_recv_reader 063A                                    _EUSART_Read 04EE  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 0035  
                             __size_of___lwdiv 003C                               __size_of___lwmod 0034  
                              ___lwdiv@divisor 0070                                       _bit_find 063A  
                              ___lwdiv@counter 0077                                       __ptext10 05C1  
                                     __ptext11 04AF                                       __ptext20 04B3  
                                     __ptext12 04EE                                       __ptext13 04E1  
                                     __ptext14 04AB                                       __ptext15 04FD  
                                     __ptext16 04D5                                       __ptext17 0515  
                                     __ptext18 04BF                                       __ptext19 04B9  
                                __size_of_main 0059                        ?_EUSART_SetErrorHandler 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070          __end_of_EUSART_SetFramingErrorHandler 04BF  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 04B9  
                                    printf@val 002B                                    _recv_reader 05FD  
                                    putch@data 0071                     __end_of_recv_daikin_reader 058D  
                               __pstringtext10 08C9                                 __pstringtext11 0000  
                      __size_of_WDT_Initialize 0004                               ___lwmod@dividend 007A  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 04B9  
                            __CFG_CLKOUTEN$OFF 0000                                       printf@ap 0028  
EUSART_SetFramingErrorHandler@interruptHandler 0070                                  __pstringtext1 0800  
                                __pstringtext2 083C                                  __pstringtext3 085D  
                                __pstringtext4 087D                                  __pstringtext5 088D  
                                __pstringtext6 089B                                  __pstringtext7 08A9  
                                __pstringtext8 08B6                                  __pstringtext9 08C3  
                                 ?_detect_mode 0070                                ___lwmod@divisor 0078  
                              ___lwmod@counter 007D                             EUSART_Write@txData 0070  
               __end_of_PIN_MANAGER_Initialize 0515  
