

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun May 17 16:44:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	stringtext10,global,class=STRCODE,delta=2
    14                           	psect	stringtext11,global,class=STRCODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.10
    48                           ; Generated 31/07/2019 GMT
    49                           ; 
    50                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F1827 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0113                     	;# 
   132  0114                     	;# 
   133  0115                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  0118                     	;# 
   137  0119                     	;# 
   138  011A                     	;# 
   139  011B                     	;# 
   140  011D                     	;# 
   141  011E                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0191                     	;# 
   145  0191                     	;# 
   146  0192                     	;# 
   147  0193                     	;# 
   148  0193                     	;# 
   149  0193                     	;# 
   150  0194                     	;# 
   151  0195                     	;# 
   152  0196                     	;# 
   153  0199                     	;# 
   154  019A                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019C                     	;# 
   160  019C                     	;# 
   161  019D                     	;# 
   162  019E                     	;# 
   163  019F                     	;# 
   164  020C                     	;# 
   165  020D                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0216                     	;# 
   178  0216                     	;# 
   179  0217                     	;# 
   180  0217                     	;# 
   181  0219                     	;# 
   182  021A                     	;# 
   183  021B                     	;# 
   184  021C                     	;# 
   185  021D                     	;# 
   186  021E                     	;# 
   187  021F                     	;# 
   188  0291                     	;# 
   189  0291                     	;# 
   190  0292                     	;# 
   191  0293                     	;# 
   192  0294                     	;# 
   193  0295                     	;# 
   194  0295                     	;# 
   195  0296                     	;# 
   196  0298                     	;# 
   197  0298                     	;# 
   198  0299                     	;# 
   199  029A                     	;# 
   200  029B                     	;# 
   201  029C                     	;# 
   202  029C                     	;# 
   203  029D                     	;# 
   204  029E                     	;# 
   205  029E                     	;# 
   206  0311                     	;# 
   207  0311                     	;# 
   208  0312                     	;# 
   209  0313                     	;# 
   210  0318                     	;# 
   211  0318                     	;# 
   212  0319                     	;# 
   213  031A                     	;# 
   214  0394                     	;# 
   215  0395                     	;# 
   216  0396                     	;# 
   217  039A                     	;# 
   218  039C                     	;# 
   219  039D                     	;# 
   220  039E                     	;# 
   221  039F                     	;# 
   222  0415                     	;# 
   223  0416                     	;# 
   224  0417                     	;# 
   225  041C                     	;# 
   226  041D                     	;# 
   227  041E                     	;# 
   228  0FE4                     	;# 
   229  0FE5                     	;# 
   230  0FE6                     	;# 
   231  0FE7                     	;# 
   232  0FE8                     	;# 
   233  0FE9                     	;# 
   234  0FEA                     	;# 
   235  0FEB                     	;# 
   236  0FED                     	;# 
   237  0FEE                     	;# 
   238  0FEF                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  0111                     	;# 
   288  0112                     	;# 
   289  0113                     	;# 
   290  0114                     	;# 
   291  0115                     	;# 
   292  0116                     	;# 
   293  0117                     	;# 
   294  0118                     	;# 
   295  0119                     	;# 
   296  011A                     	;# 
   297  011B                     	;# 
   298  011D                     	;# 
   299  011E                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0191                     	;# 
   303  0191                     	;# 
   304  0192                     	;# 
   305  0193                     	;# 
   306  0193                     	;# 
   307  0193                     	;# 
   308  0194                     	;# 
   309  0195                     	;# 
   310  0196                     	;# 
   311  0199                     	;# 
   312  019A                     	;# 
   313  019B                     	;# 
   314  019B                     	;# 
   315  019B                     	;# 
   316  019B                     	;# 
   317  019C                     	;# 
   318  019C                     	;# 
   319  019D                     	;# 
   320  019E                     	;# 
   321  019F                     	;# 
   322  020C                     	;# 
   323  020D                     	;# 
   324  0211                     	;# 
   325  0211                     	;# 
   326  0212                     	;# 
   327  0212                     	;# 
   328  0213                     	;# 
   329  0213                     	;# 
   330  0214                     	;# 
   331  0214                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0215                     	;# 
   335  0216                     	;# 
   336  0216                     	;# 
   337  0217                     	;# 
   338  0217                     	;# 
   339  0219                     	;# 
   340  021A                     	;# 
   341  021B                     	;# 
   342  021C                     	;# 
   343  021D                     	;# 
   344  021E                     	;# 
   345  021F                     	;# 
   346  0291                     	;# 
   347  0291                     	;# 
   348  0292                     	;# 
   349  0293                     	;# 
   350  0294                     	;# 
   351  0295                     	;# 
   352  0295                     	;# 
   353  0296                     	;# 
   354  0298                     	;# 
   355  0298                     	;# 
   356  0299                     	;# 
   357  029A                     	;# 
   358  029B                     	;# 
   359  029C                     	;# 
   360  029C                     	;# 
   361  029D                     	;# 
   362  029E                     	;# 
   363  029E                     	;# 
   364  0311                     	;# 
   365  0311                     	;# 
   366  0312                     	;# 
   367  0313                     	;# 
   368  0318                     	;# 
   369  0318                     	;# 
   370  0319                     	;# 
   371  031A                     	;# 
   372  0394                     	;# 
   373  0395                     	;# 
   374  0396                     	;# 
   375  039A                     	;# 
   376  039C                     	;# 
   377  039D                     	;# 
   378  039E                     	;# 
   379  039F                     	;# 
   380  0415                     	;# 
   381  0416                     	;# 
   382  0417                     	;# 
   383  041C                     	;# 
   384  041D                     	;# 
   385  041E                     	;# 
   386  0FE4                     	;# 
   387  0FE5                     	;# 
   388  0FE6                     	;# 
   389  0FE7                     	;# 
   390  0FE8                     	;# 
   391  0FE9                     	;# 
   392  0FEA                     	;# 
   393  0FEB                     	;# 
   394  0FED                     	;# 
   395  0FEE                     	;# 
   396  0FEF                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0013                     	;# 
   414  0014                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  001E                     	;# 
   425  001F                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009B                     	;# 
   440  009C                     	;# 
   441  009D                     	;# 
   442  009E                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  0111                     	;# 
   446  0112                     	;# 
   447  0113                     	;# 
   448  0114                     	;# 
   449  0115                     	;# 
   450  0116                     	;# 
   451  0117                     	;# 
   452  0118                     	;# 
   453  0119                     	;# 
   454  011A                     	;# 
   455  011B                     	;# 
   456  011D                     	;# 
   457  011E                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460  0191                     	;# 
   461  0191                     	;# 
   462  0192                     	;# 
   463  0193                     	;# 
   464  0193                     	;# 
   465  0193                     	;# 
   466  0194                     	;# 
   467  0195                     	;# 
   468  0196                     	;# 
   469  0199                     	;# 
   470  019A                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019B                     	;# 
   474  019B                     	;# 
   475  019C                     	;# 
   476  019C                     	;# 
   477  019D                     	;# 
   478  019E                     	;# 
   479  019F                     	;# 
   480  020C                     	;# 
   481  020D                     	;# 
   482  0211                     	;# 
   483  0211                     	;# 
   484  0212                     	;# 
   485  0212                     	;# 
   486  0213                     	;# 
   487  0213                     	;# 
   488  0214                     	;# 
   489  0214                     	;# 
   490  0215                     	;# 
   491  0215                     	;# 
   492  0215                     	;# 
   493  0216                     	;# 
   494  0216                     	;# 
   495  0217                     	;# 
   496  0217                     	;# 
   497  0219                     	;# 
   498  021A                     	;# 
   499  021B                     	;# 
   500  021C                     	;# 
   501  021D                     	;# 
   502  021E                     	;# 
   503  021F                     	;# 
   504  0291                     	;# 
   505  0291                     	;# 
   506  0292                     	;# 
   507  0293                     	;# 
   508  0294                     	;# 
   509  0295                     	;# 
   510  0295                     	;# 
   511  0296                     	;# 
   512  0298                     	;# 
   513  0298                     	;# 
   514  0299                     	;# 
   515  029A                     	;# 
   516  029B                     	;# 
   517  029C                     	;# 
   518  029C                     	;# 
   519  029D                     	;# 
   520  029E                     	;# 
   521  029E                     	;# 
   522  0311                     	;# 
   523  0311                     	;# 
   524  0312                     	;# 
   525  0313                     	;# 
   526  0318                     	;# 
   527  0318                     	;# 
   528  0319                     	;# 
   529  031A                     	;# 
   530  0394                     	;# 
   531  0395                     	;# 
   532  0396                     	;# 
   533  039A                     	;# 
   534  039C                     	;# 
   535  039D                     	;# 
   536  039E                     	;# 
   537  039F                     	;# 
   538  0415                     	;# 
   539  0416                     	;# 
   540  0417                     	;# 
   541  041C                     	;# 
   542  041D                     	;# 
   543  041E                     	;# 
   544  0FE4                     	;# 
   545  0FE5                     	;# 
   546  0FE6                     	;# 
   547  0FE7                     	;# 
   548  0FE8                     	;# 
   549  0FE9                     	;# 
   550  0FEA                     	;# 
   551  0FEB                     	;# 
   552  0FED                     	;# 
   553  0FEE                     	;# 
   554  0FEF                     	;# 
   555  0000                     	;# 
   556  0001                     	;# 
   557  0002                     	;# 
   558  0003                     	;# 
   559  0004                     	;# 
   560  0005                     	;# 
   561  0006                     	;# 
   562  0007                     	;# 
   563  0008                     	;# 
   564  0009                     	;# 
   565  000A                     	;# 
   566  000B                     	;# 
   567  000C                     	;# 
   568  000D                     	;# 
   569  0011                     	;# 
   570  0012                     	;# 
   571  0013                     	;# 
   572  0014                     	;# 
   573  0015                     	;# 
   574  0016                     	;# 
   575  0016                     	;# 
   576  0017                     	;# 
   577  0018                     	;# 
   578  0019                     	;# 
   579  001A                     	;# 
   580  001B                     	;# 
   581  001C                     	;# 
   582  001E                     	;# 
   583  001F                     	;# 
   584  008C                     	;# 
   585  008D                     	;# 
   586  0091                     	;# 
   587  0092                     	;# 
   588  0093                     	;# 
   589  0094                     	;# 
   590  0095                     	;# 
   591  0096                     	;# 
   592  0097                     	;# 
   593  0098                     	;# 
   594  0099                     	;# 
   595  009A                     	;# 
   596  009B                     	;# 
   597  009B                     	;# 
   598  009C                     	;# 
   599  009D                     	;# 
   600  009E                     	;# 
   601  010C                     	;# 
   602  010D                     	;# 
   603  0111                     	;# 
   604  0112                     	;# 
   605  0113                     	;# 
   606  0114                     	;# 
   607  0115                     	;# 
   608  0116                     	;# 
   609  0117                     	;# 
   610  0118                     	;# 
   611  0119                     	;# 
   612  011A                     	;# 
   613  011B                     	;# 
   614  011D                     	;# 
   615  011E                     	;# 
   616  018C                     	;# 
   617  018D                     	;# 
   618  0191                     	;# 
   619  0191                     	;# 
   620  0192                     	;# 
   621  0193                     	;# 
   622  0193                     	;# 
   623  0193                     	;# 
   624  0194                     	;# 
   625  0195                     	;# 
   626  0196                     	;# 
   627  0199                     	;# 
   628  019A                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019C                     	;# 
   634  019C                     	;# 
   635  019D                     	;# 
   636  019E                     	;# 
   637  019F                     	;# 
   638  020C                     	;# 
   639  020D                     	;# 
   640  0211                     	;# 
   641  0211                     	;# 
   642  0212                     	;# 
   643  0212                     	;# 
   644  0213                     	;# 
   645  0213                     	;# 
   646  0214                     	;# 
   647  0214                     	;# 
   648  0215                     	;# 
   649  0215                     	;# 
   650  0215                     	;# 
   651  0216                     	;# 
   652  0216                     	;# 
   653  0217                     	;# 
   654  0217                     	;# 
   655  0219                     	;# 
   656  021A                     	;# 
   657  021B                     	;# 
   658  021C                     	;# 
   659  021D                     	;# 
   660  021E                     	;# 
   661  021F                     	;# 
   662  0291                     	;# 
   663  0291                     	;# 
   664  0292                     	;# 
   665  0293                     	;# 
   666  0294                     	;# 
   667  0295                     	;# 
   668  0295                     	;# 
   669  0296                     	;# 
   670  0298                     	;# 
   671  0298                     	;# 
   672  0299                     	;# 
   673  029A                     	;# 
   674  029B                     	;# 
   675  029C                     	;# 
   676  029C                     	;# 
   677  029D                     	;# 
   678  029E                     	;# 
   679  029E                     	;# 
   680  0311                     	;# 
   681  0311                     	;# 
   682  0312                     	;# 
   683  0313                     	;# 
   684  0318                     	;# 
   685  0318                     	;# 
   686  0319                     	;# 
   687  031A                     	;# 
   688  0394                     	;# 
   689  0395                     	;# 
   690  0396                     	;# 
   691  039A                     	;# 
   692  039C                     	;# 
   693  039D                     	;# 
   694  039E                     	;# 
   695  039F                     	;# 
   696  0415                     	;# 
   697  0416                     	;# 
   698  0417                     	;# 
   699  041C                     	;# 
   700  041D                     	;# 
   701  041E                     	;# 
   702  0FE4                     	;# 
   703  0FE5                     	;# 
   704  0FE6                     	;# 
   705  0FE7                     	;# 
   706  0FE8                     	;# 
   707  0FE9                     	;# 
   708  0FEA                     	;# 
   709  0FEB                     	;# 
   710  0FED                     	;# 
   711  0FEE                     	;# 
   712  0FEF                     	;# 
   713  0000                     	;# 
   714  0001                     	;# 
   715  0002                     	;# 
   716  0003                     	;# 
   717  0004                     	;# 
   718  0005                     	;# 
   719  0006                     	;# 
   720  0007                     	;# 
   721  0008                     	;# 
   722  0009                     	;# 
   723  000A                     	;# 
   724  000B                     	;# 
   725  000C                     	;# 
   726  000D                     	;# 
   727  0011                     	;# 
   728  0012                     	;# 
   729  0013                     	;# 
   730  0014                     	;# 
   731  0015                     	;# 
   732  0016                     	;# 
   733  0016                     	;# 
   734  0017                     	;# 
   735  0018                     	;# 
   736  0019                     	;# 
   737  001A                     	;# 
   738  001B                     	;# 
   739  001C                     	;# 
   740  001E                     	;# 
   741  001F                     	;# 
   742  008C                     	;# 
   743  008D                     	;# 
   744  0091                     	;# 
   745  0092                     	;# 
   746  0093                     	;# 
   747  0094                     	;# 
   748  0095                     	;# 
   749  0096                     	;# 
   750  0097                     	;# 
   751  0098                     	;# 
   752  0099                     	;# 
   753  009A                     	;# 
   754  009B                     	;# 
   755  009B                     	;# 
   756  009C                     	;# 
   757  009D                     	;# 
   758  009E                     	;# 
   759  010C                     	;# 
   760  010D                     	;# 
   761  0111                     	;# 
   762  0112                     	;# 
   763  0113                     	;# 
   764  0114                     	;# 
   765  0115                     	;# 
   766  0116                     	;# 
   767  0117                     	;# 
   768  0118                     	;# 
   769  0119                     	;# 
   770  011A                     	;# 
   771  011B                     	;# 
   772  011D                     	;# 
   773  011E                     	;# 
   774  018C                     	;# 
   775  018D                     	;# 
   776  0191                     	;# 
   777  0191                     	;# 
   778  0192                     	;# 
   779  0193                     	;# 
   780  0193                     	;# 
   781  0193                     	;# 
   782  0194                     	;# 
   783  0195                     	;# 
   784  0196                     	;# 
   785  0199                     	;# 
   786  019A                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019B                     	;# 
   791  019C                     	;# 
   792  019C                     	;# 
   793  019D                     	;# 
   794  019E                     	;# 
   795  019F                     	;# 
   796  020C                     	;# 
   797  020D                     	;# 
   798  0211                     	;# 
   799  0211                     	;# 
   800  0212                     	;# 
   801  0212                     	;# 
   802  0213                     	;# 
   803  0213                     	;# 
   804  0214                     	;# 
   805  0214                     	;# 
   806  0215                     	;# 
   807  0215                     	;# 
   808  0215                     	;# 
   809  0216                     	;# 
   810  0216                     	;# 
   811  0217                     	;# 
   812  0217                     	;# 
   813  0219                     	;# 
   814  021A                     	;# 
   815  021B                     	;# 
   816  021C                     	;# 
   817  021D                     	;# 
   818  021E                     	;# 
   819  021F                     	;# 
   820  0291                     	;# 
   821  0291                     	;# 
   822  0292                     	;# 
   823  0293                     	;# 
   824  0294                     	;# 
   825  0295                     	;# 
   826  0295                     	;# 
   827  0296                     	;# 
   828  0298                     	;# 
   829  0298                     	;# 
   830  0299                     	;# 
   831  029A                     	;# 
   832  029B                     	;# 
   833  029C                     	;# 
   834  029C                     	;# 
   835  029D                     	;# 
   836  029E                     	;# 
   837  029E                     	;# 
   838  0311                     	;# 
   839  0311                     	;# 
   840  0312                     	;# 
   841  0313                     	;# 
   842  0318                     	;# 
   843  0318                     	;# 
   844  0319                     	;# 
   845  031A                     	;# 
   846  0394                     	;# 
   847  0395                     	;# 
   848  0396                     	;# 
   849  039A                     	;# 
   850  039C                     	;# 
   851  039D                     	;# 
   852  039E                     	;# 
   853  039F                     	;# 
   854  0415                     	;# 
   855  0416                     	;# 
   856  0417                     	;# 
   857  041C                     	;# 
   858  041D                     	;# 
   859  041E                     	;# 
   860  0FE4                     	;# 
   861  0FE5                     	;# 
   862  0FE6                     	;# 
   863  0FE7                     	;# 
   864  0FE8                     	;# 
   865  0FE9                     	;# 
   866  0FEA                     	;# 
   867  0FEB                     	;# 
   868  0FED                     	;# 
   869  0FEE                     	;# 
   870  0FEF                     	;# 
   871  0000                     	;# 
   872  0001                     	;# 
   873  0002                     	;# 
   874  0003                     	;# 
   875  0004                     	;# 
   876  0005                     	;# 
   877  0006                     	;# 
   878  0007                     	;# 
   879  0008                     	;# 
   880  0009                     	;# 
   881  000A                     	;# 
   882  000B                     	;# 
   883  000C                     	;# 
   884  000D                     	;# 
   885  0011                     	;# 
   886  0012                     	;# 
   887  0013                     	;# 
   888  0014                     	;# 
   889  0015                     	;# 
   890  0016                     	;# 
   891  0016                     	;# 
   892  0017                     	;# 
   893  0018                     	;# 
   894  0019                     	;# 
   895  001A                     	;# 
   896  001B                     	;# 
   897  001C                     	;# 
   898  001E                     	;# 
   899  001F                     	;# 
   900  008C                     	;# 
   901  008D                     	;# 
   902  0091                     	;# 
   903  0092                     	;# 
   904  0093                     	;# 
   905  0094                     	;# 
   906  0095                     	;# 
   907  0096                     	;# 
   908  0097                     	;# 
   909  0098                     	;# 
   910  0099                     	;# 
   911  009A                     	;# 
   912  009B                     	;# 
   913  009B                     	;# 
   914  009C                     	;# 
   915  009D                     	;# 
   916  009E                     	;# 
   917  010C                     	;# 
   918  010D                     	;# 
   919  0111                     	;# 
   920  0112                     	;# 
   921  0113                     	;# 
   922  0114                     	;# 
   923  0115                     	;# 
   924  0116                     	;# 
   925  0117                     	;# 
   926  0118                     	;# 
   927  0119                     	;# 
   928  011A                     	;# 
   929  011B                     	;# 
   930  011D                     	;# 
   931  011E                     	;# 
   932  018C                     	;# 
   933  018D                     	;# 
   934  0191                     	;# 
   935  0191                     	;# 
   936  0192                     	;# 
   937  0193                     	;# 
   938  0193                     	;# 
   939  0193                     	;# 
   940  0194                     	;# 
   941  0195                     	;# 
   942  0196                     	;# 
   943  0199                     	;# 
   944  019A                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019B                     	;# 
   948  019B                     	;# 
   949  019C                     	;# 
   950  019C                     	;# 
   951  019D                     	;# 
   952  019E                     	;# 
   953  019F                     	;# 
   954  020C                     	;# 
   955  020D                     	;# 
   956  0211                     	;# 
   957  0211                     	;# 
   958  0212                     	;# 
   959  0212                     	;# 
   960  0213                     	;# 
   961  0213                     	;# 
   962  0214                     	;# 
   963  0214                     	;# 
   964  0215                     	;# 
   965  0215                     	;# 
   966  0215                     	;# 
   967  0216                     	;# 
   968  0216                     	;# 
   969  0217                     	;# 
   970  0217                     	;# 
   971  0219                     	;# 
   972  021A                     	;# 
   973  021B                     	;# 
   974  021C                     	;# 
   975  021D                     	;# 
   976  021E                     	;# 
   977  021F                     	;# 
   978  0291                     	;# 
   979  0291                     	;# 
   980  0292                     	;# 
   981  0293                     	;# 
   982  0294                     	;# 
   983  0295                     	;# 
   984  0295                     	;# 
   985  0296                     	;# 
   986  0298                     	;# 
   987  0298                     	;# 
   988  0299                     	;# 
   989  029A                     	;# 
   990  029B                     	;# 
   991  029C                     	;# 
   992  029C                     	;# 
   993  029D                     	;# 
   994  029E                     	;# 
   995  029E                     	;# 
   996  0311                     	;# 
   997  0311                     	;# 
   998  0312                     	;# 
   999  0313                     	;# 
  1000  0318                     	;# 
  1001  0318                     	;# 
  1002  0319                     	;# 
  1003  031A                     	;# 
  1004  0394                     	;# 
  1005  0395                     	;# 
  1006  0396                     	;# 
  1007  039A                     	;# 
  1008  039C                     	;# 
  1009  039D                     	;# 
  1010  039E                     	;# 
  1011  039F                     	;# 
  1012  0415                     	;# 
  1013  0416                     	;# 
  1014  0417                     	;# 
  1015  041C                     	;# 
  1016  041D                     	;# 
  1017  041E                     	;# 
  1018  0FE4                     	;# 
  1019  0FE5                     	;# 
  1020  0FE6                     	;# 
  1021  0FE7                     	;# 
  1022  0FE8                     	;# 
  1023  0FE9                     	;# 
  1024  0FEA                     	;# 
  1025  0FEB                     	;# 
  1026  0FED                     	;# 
  1027  0FEE                     	;# 
  1028  0FEF                     	;# 
  1029                           
  1030 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1031  0000                     
  1032 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1033  0000                     
  1034 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1035  0000                     
  1036                           	psect	stringtext1
  1037  0800                     __pstringtext1:	
  1038  0800                     _dpowers:	
  1039  0800  3401               	retlw	1
  1040  0801  3400               	retlw	0
  1041  0802  340A               	retlw	10
  1042  0803  3400               	retlw	0
  1043  0804  3464               	retlw	100
  1044  0805  3400               	retlw	0
  1045  0806  34E8               	retlw	232
  1046  0807  3403               	retlw	3
  1047  0808  3410               	retlw	16
  1048  0809  3427               	retlw	39
  1049  080A                     __end_of_dpowers:	
  1050  000C                     _PORTAbits	set	12
  1051  0011                     _PIR1bits	set	17
  1052  0095                     _OPTION_REGbits	set	149
  1053  008D                     _TRISB	set	141
  1054  008C                     _TRISA	set	140
  1055  0097                     _WDTCON	set	151
  1056  0098                     _OSCTUNE	set	152
  1057  0099                     _OSCCON	set	153
  1058  04D6                     _PLLR	set	1238
  1059  010D                     _LATBbits	set	269
  1060  010C                     _LATAbits	set	268
  1061  011E                     _APFCON1	set	286
  1062  011D                     _APFCON0	set	285
  1063  010D                     _LATB	set	269
  1064  010C                     _LATA	set	268
  1065  0116                     _BORCON	set	278
  1066  018C                     _ANSELA	set	396
  1067  018D                     _ANSELB	set	397
  1068  019A                     _TXREG	set	410
  1069  0199                     _RCREG	set	409
  1070  019D                     _RCSTAbits	set	413
  1071  019E                     _TXSTAbits	set	414
  1072  019C                     _SPBRGH	set	412
  1073  019B                     _SPBRGL	set	411
  1074  019E                     _TXSTA	set	414
  1075  019D                     _RCSTA	set	413
  1076  019F                     _BAUDCON	set	415
  1077  020C                     _WPUA	set	524
  1078  020D                     _WPUB	set	525
  1079  080A                     STR_5:	
  1080  080A  344E               	retlw	78	;'N'
  1081  080B  3445               	retlw	69	;'E'
  1082  080C  3443               	retlw	67	;'C'
  1083  080D  343A               	retlw	58	;':'
  1084  080E  344E               	retlw	78	;'N'
  1085  080F  3420               	retlw	32	;' '
  1086  0810  347C               	retlw	124	;'|'
  1087  0811  3420               	retlw	32	;' '
  1088  0812  3441               	retlw	65	;'A'
  1089  0813  3445               	retlw	69	;'E'
  1090  0814  3448               	retlw	72	;'H'
  1091  0815  3441               	retlw	65	;'A'
  1092  0816  343A               	retlw	58	;':'
  1093  0817  3441               	retlw	65	;'A'
  1094  0818  3420               	retlw	32	;' '
  1095  0819  347C               	retlw	124	;'|'
  1096  081A  3420               	retlw	32	;' '
  1097  081B  3444               	retlw	68	;'D'
  1098  081C  3441               	retlw	65	;'A'
  1099  081D  3449               	retlw	73	;'I'
  1100  081E  344B               	retlw	75	;'K'
  1101  081F  3449               	retlw	73	;'I'
  1102  0820  344E               	retlw	78	;'N'
  1103  0821  343A               	retlw	58	;':'
  1104  0822  3444               	retlw	68	;'D'
  1105  0823  3420               	retlw	32	;' '
  1106  0824  347C               	retlw	124	;'|'
  1107  0825  3420               	retlw	32	;' '
  1108  0826  3453               	retlw	83	;'S'
  1109  0827  344F               	retlw	79	;'O'
  1110  0828  344E               	retlw	78	;'N'
  1111  0829  3459               	retlw	89	;'Y'
  1112  082A  343A               	retlw	58	;':'
  1113  082B  3453               	retlw	83	;'S'
  1114  082C  347C               	retlw	124	;'|'
  1115  082D  3428               	retlw	40	;'('
  1116  082E  342A               	retlw	42	;'*'
  1117  082F  3464               	retlw	100	;'d'
  1118  0830  3465               	retlw	101	;'e'
  1119  0831  3466               	retlw	102	;'f'
  1120  0832  3461               	retlw	97	;'a'
  1121  0833  3475               	retlw	117	;'u'
  1122  0834  346C               	retlw	108	;'l'
  1123  0835  3474               	retlw	116	;'t'
  1124  0836  343A               	retlw	58	;':'
  1125  0837  3444               	retlw	68	;'D'
  1126  0838  3429               	retlw	41	;')'
  1127  0839  340D               	retlw	13
  1128  083A  340A               	retlw	10
  1129  083B  3400               	retlw	0
  1130                           
  1131                           	psect	stringtext2
  1132  083C                     __pstringtext2:	
  1133  083C                     STR_2:	
  1134  083C  345B               	retlw	91	;'['
  1135  083D  3425               	retlw	37	;'%'
  1136  083E  3464               	retlw	100	;'d'
  1137  083F  345D               	retlw	93	;']'
  1138  0840  342D               	retlw	45	;'-'
  1139  0841  342D               	retlw	45	;'-'
  1140  0842  342D               	retlw	45	;'-'
  1141  0843  342D               	retlw	45	;'-'
  1142  0844  342D               	retlw	45	;'-'
  1143  0845  342D               	retlw	45	;'-'
  1144  0846  342D               	retlw	45	;'-'
  1145  0847  342D               	retlw	45	;'-'
  1146  0848  342D               	retlw	45	;'-'
  1147  0849  342D               	retlw	45	;'-'
  1148  084A  342D               	retlw	45	;'-'
  1149  084B  342D               	retlw	45	;'-'
  1150  084C  342D               	retlw	45	;'-'
  1151  084D  342D               	retlw	45	;'-'
  1152  084E  342D               	retlw	45	;'-'
  1153  084F  342D               	retlw	45	;'-'
  1154  0850  342D               	retlw	45	;'-'
  1155  0851  342D               	retlw	45	;'-'
  1156  0852  342D               	retlw	45	;'-'
  1157  0853  342D               	retlw	45	;'-'
  1158  0854  342D               	retlw	45	;'-'
  1159  0855  342D               	retlw	45	;'-'
  1160  0856  342D               	retlw	45	;'-'
  1161  0857  342D               	retlw	45	;'-'
  1162  0858  342D               	retlw	45	;'-'
  1163  0859  342D               	retlw	45	;'-'
  1164  085A  340D               	retlw	13
  1165  085B  340A               	retlw	10
  1166  085C  3400               	retlw	0
  1167                           
  1168                           	psect	stringtext3
  1169  085D                     __pstringtext3:	
  1170  085D                     STR_4:	
  1171  085D  342D               	retlw	45	;'-'
  1172  085E  342D               	retlw	45	;'-'
  1173  085F  342D               	retlw	45	;'-'
  1174  0860  342D               	retlw	45	;'-'
  1175  0861  342D               	retlw	45	;'-'
  1176  0862  342D               	retlw	45	;'-'
  1177  0863  342D               	retlw	45	;'-'
  1178  0864  342D               	retlw	45	;'-'
  1179  0865  342D               	retlw	45	;'-'
  1180  0866  342D               	retlw	45	;'-'
  1181  0867  342D               	retlw	45	;'-'
  1182  0868  342D               	retlw	45	;'-'
  1183  0869  342D               	retlw	45	;'-'
  1184  086A  342D               	retlw	45	;'-'
  1185  086B  342D               	retlw	45	;'-'
  1186  086C  342D               	retlw	45	;'-'
  1187  086D  342D               	retlw	45	;'-'
  1188  086E  342D               	retlw	45	;'-'
  1189  086F  342D               	retlw	45	;'-'
  1190  0870  342D               	retlw	45	;'-'
  1191  0871  342D               	retlw	45	;'-'
  1192  0872  342D               	retlw	45	;'-'
  1193  0873  342D               	retlw	45	;'-'
  1194  0874  342D               	retlw	45	;'-'
  1195  0875  342D               	retlw	45	;'-'
  1196  0876  342D               	retlw	45	;'-'
  1197  0877  342D               	retlw	45	;'-'
  1198  0878  342D               	retlw	45	;'-'
  1199  0879  342D               	retlw	45	;'-'
  1200  087A  340D               	retlw	13
  1201  087B  340A               	retlw	10
  1202  087C  3400               	retlw	0
  1203                           
  1204                           	psect	stringtext4
  1205  087D                     __pstringtext4:	
  1206  087D                     STR_3:	
  1207  087D  3449               	retlw	73	;'I'
  1208  087E  3452               	retlw	82	;'R'
  1209  087F  3420               	retlw	32	;' '
  1210  0880  3452               	retlw	82	;'R'
  1211  0881  3465               	retlw	101	;'e'
  1212  0882  3463               	retlw	99	;'c'
  1213  0883  3469               	retlw	105	;'i'
  1214  0884  3476               	retlw	118	;'v'
  1215  0885  3465               	retlw	101	;'e'
  1216  0886  3472               	retlw	114	;'r'
  1217  0887  3420               	retlw	32	;' '
  1218  0888  3456               	retlw	86	;'V'
  1219  0889  3465               	retlw	101	;'e'
  1220  088A  3472               	retlw	114	;'r'
  1221  088B  3473               	retlw	115	;'s'
  1222  088C  3469               	retlw	105	;'i'
  1223  088D  346F               	retlw	111	;'o'
  1224  088E  346E               	retlw	110	;'n'
  1225  088F  3420               	retlw	32	;' '
  1226  0890  3431               	retlw	49	;'1'
  1227  0891  342E               	retlw	46	;'.'
  1228  0892  3430               	retlw	48	;'0'
  1229  0893  342E               	retlw	46	;'.'
  1230  0894  3430               	retlw	48	;'0'
  1231  0895  340D               	retlw	13
  1232  0896  340A               	retlw	10
  1233  0897  3400               	retlw	0
  1234                           
  1235                           	psect	stringtext5
  1236  0898                     __pstringtext5:	
  1237  0898                     STR_8:	
  1238  0898  3444               	retlw	68	;'D'
  1239  0899  3465               	retlw	101	;'e'
  1240  089A  3474               	retlw	116	;'t'
  1241  089B  3465               	retlw	101	;'e'
  1242  089C  3463               	retlw	99	;'c'
  1243  089D  3474               	retlw	116	;'t'
  1244  089E  3420               	retlw	32	;' '
  1245  089F  3444               	retlw	68	;'D'
  1246  08A0  3441               	retlw	65	;'A'
  1247  08A1  3449               	retlw	73	;'I'
  1248  08A2  344B               	retlw	75	;'K'
  1249  08A3  3449               	retlw	73	;'I'
  1250  08A4  344E               	retlw	78	;'N'
  1251  08A5  340D               	retlw	13
  1252  08A6  340A               	retlw	10
  1253  08A7  3400               	retlw	0
  1254                           
  1255                           	psect	stringtext6
  1256  08A8                     __pstringtext6:	
  1257  08A8                     STR_7:	
  1258  08A8  3444               	retlw	68	;'D'
  1259  08A9  3465               	retlw	101	;'e'
  1260  08AA  3474               	retlw	116	;'t'
  1261  08AB  3465               	retlw	101	;'e'
  1262  08AC  3463               	retlw	99	;'c'
  1263  08AD  3474               	retlw	116	;'t'
  1264  08AE  3420               	retlw	32	;' '
  1265  08AF  3441               	retlw	65	;'A'
  1266  08B0  3445               	retlw	69	;'E'
  1267  08B1  3448               	retlw	72	;'H'
  1268  08B2  3441               	retlw	65	;'A'
  1269  08B3  340D               	retlw	13
  1270  08B4  340A               	retlw	10
  1271  08B5  3400               	retlw	0
  1272                           
  1273                           	psect	stringtext7
  1274  08B6                     __pstringtext7:	
  1275  08B6                     STR_9:	
  1276  08B6  3444               	retlw	68	;'D'
  1277  08B7  3465               	retlw	101	;'e'
  1278  08B8  3474               	retlw	116	;'t'
  1279  08B9  3465               	retlw	101	;'e'
  1280  08BA  3463               	retlw	99	;'c'
  1281  08BB  3474               	retlw	116	;'t'
  1282  08BC  3420               	retlw	32	;' '
  1283  08BD  3453               	retlw	83	;'S'
  1284  08BE  344F               	retlw	79	;'O'
  1285  08BF  344E               	retlw	78	;'N'
  1286  08C0  3459               	retlw	89	;'Y'
  1287  08C1  340D               	retlw	13
  1288  08C2  340A               	retlw	10
  1289  08C3  3400               	retlw	0
  1290                           
  1291                           	psect	stringtext8
  1292  08C4                     __pstringtext8:	
  1293  08C4                     STR_6:	
  1294  08C4  3444               	retlw	68	;'D'
  1295  08C5  3465               	retlw	101	;'e'
  1296  08C6  3474               	retlw	116	;'t'
  1297  08C7  3465               	retlw	101	;'e'
  1298  08C8  3463               	retlw	99	;'c'
  1299  08C9  3474               	retlw	116	;'t'
  1300  08CA  3420               	retlw	32	;' '
  1301  08CB  344E               	retlw	78	;'N'
  1302  08CC  3445               	retlw	69	;'E'
  1303  08CD  3443               	retlw	67	;'C'
  1304  08CE  340D               	retlw	13
  1305  08CF  340A               	retlw	10
  1306  08D0  3400               	retlw	0
  1307                           
  1308                           	psect	stringtext9
  1309  08D1                     __pstringtext9:	
  1310  08D1                     STR_1:	
  1311  08D1  3465               	retlw	101	;'e'
  1312  08D2  346E               	retlw	110	;'n'
  1313  08D3  3464               	retlw	100	;'d'
  1314  08D4  340D               	retlw	13
  1315  08D5  340A               	retlw	10
  1316  08D6  3400               	retlw	0
  1317                           
  1318                           	psect	stringtext10
  1319  08D7                     __pstringtext10:	
  1320  08D7                     STR_12:	
  1321  08D7  347C               	retlw	124	;'|'
  1322  08D8  347C               	retlw	124	;'|'
  1323  08D9  3400               	retlw	0
  1324                           
  1325                           	psect	stringtext11
  1326  0000                     __pstringtext11:	
  1327  0839                     
  1328                           ; #config settings
  1329  0000                     
  1330                           	psect	cinit
  1331  07F5                     start_initialization:	
  1332  07F5                     __initialization:	
  1333                           
  1334                           ; Clear objects allocated to BANK0
  1335  07F5  0020               	movlb	0	; select bank0
  1336  07F6  01B8               	clrf	__pbssBANK0& (0+127)
  1337  07F7  01B9               	clrf	(__pbssBANK0+1)& (0+127)
  1338  07F8  01BA               	clrf	(__pbssBANK0+2)& (0+127)
  1339  07F9  01BB               	clrf	(__pbssBANK0+3)& (0+127)
  1340  07FA  01BC               	clrf	(__pbssBANK0+4)& (0+127)
  1341  07FB  01BD               	clrf	(__pbssBANK0+5)& (0+127)
  1342  07FC  01BE               	clrf	(__pbssBANK0+6)& (0+127)
  1343  07FD                     end_of_initialization:	
  1344                           ;End of C runtime variable initialization code
  1345                           
  1346  07FD                     __end_of__initialization:	
  1347  07FD  0020               	movlb	0
  1348  07FE  3186  2E65         	ljmp	_main	;jump to C main() function
  1349                           
  1350                           	psect	bssBANK0
  1351  0038                     __pbssBANK0:	
  1352  0038                     _EUSART_ErrorHandler:	
  1353  0038                     	ds	2
  1354  003A                     _EUSART_OverrunErrorHandler:	
  1355  003A                     	ds	2
  1356  003C                     _EUSART_FramingErrorHandler:	
  1357  003C                     	ds	2
  1358  003E                     _eusartRxLastError:	
  1359  003E                     	ds	1
  1360                           
  1361                           	psect	cstackCOMMON
  1362  0070                     __pcstackCOMMON:	
  1363  0070                     ?_EUSART_SetFramingErrorHandler:	
  1364  0070                     ?_EUSART_SetOverrunErrorHandler:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0070                     ?_EUSART_SetErrorHandler:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0070                     ?_PIN_MANAGER_Initialize:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373  0070                     ??_PIN_MANAGER_Initialize:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376  0070                     ?_OSCILLATOR_Initialize:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  0070                     ??_OSCILLATOR_Initialize:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  0070                     ?_WDT_Initialize:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ??_WDT_Initialize:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  0070                     ?_detect_mode:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  0070                     ?_DAIKIN:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  0070                     ?_AEHA:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397  0070                     ?_SONY:	
  1398                           ; 1 bytes @ 0x0
  1399                           
  1400  0070                     ??_SONY:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403  0070                     ?_NEC:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406  0070                     ??_NEC:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409  0070                     ?_recv_reader:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412  0070                     ??_recv_reader:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415  0070                     ?_recv_data:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418  0070                     ?_recv_daikin_reader:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0070                     ?_recv_daikin_frame:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0070                     ?_bit_find:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427  0070                     ??_bit_find:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0070                     ?_EUSART_Initialize:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433  0070                     ?_EUSART_Read:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0070                     ??_EUSART_Read:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0070                     ?_EUSART_Write:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0070                     ??_EUSART_Write:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0070                     ?_SYSTEM_Initialize:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0070                     ?_putch:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0070                     ?_getch:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454  0070                     ??_getch:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457  0070                     ?_main:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460  0070                     ?___lwdiv:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463  0070                     EUSART_Write@txData:	
  1464                           ; 2 bytes @ 0x0
  1465                           
  1466  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1470                           ; 2 bytes @ 0x0
  1471                           
  1472  0070                     EUSART_SetErrorHandler@interruptHandler:	
  1473                           ; 2 bytes @ 0x0
  1474                           
  1475  0070                     ___lwdiv@divisor:	
  1476                           ; 2 bytes @ 0x0
  1477                           
  1478                           
  1479                           ; 2 bytes @ 0x0
  1480  0070                     	ds	1
  1481  0071                     ??_putch:	
  1482  0071                     putch@data:	
  1483                           ; 1 bytes @ 0x1
  1484                           
  1485  0071                     recv_reader@width:	
  1486                           ; 1 bytes @ 0x1
  1487                           
  1488  0071                     bit_find@width:	
  1489                           ; 2 bytes @ 0x1
  1490                           
  1491                           
  1492                           ; 2 bytes @ 0x1
  1493  0071                     	ds	1
  1494  0072                     ??_EUSART_SetFramingErrorHandler:	
  1495  0072                     ??_EUSART_SetOverrunErrorHandler:	
  1496                           ; 1 bytes @ 0x2
  1497                           
  1498  0072                     ??_EUSART_SetErrorHandler:	
  1499                           ; 1 bytes @ 0x2
  1500                           
  1501  0072                     ??_EUSART_Initialize:	
  1502                           ; 1 bytes @ 0x2
  1503                           
  1504  0072                     ??_SYSTEM_Initialize:	
  1505                           ; 1 bytes @ 0x2
  1506                           
  1507  0072                     ___lwdiv@dividend:	
  1508                           ; 1 bytes @ 0x2
  1509                           
  1510                           
  1511                           ; 2 bytes @ 0x2
  1512  0072                     	ds	1
  1513  0073                     ??_recv_data:	
  1514  0073                     ??_recv_daikin_frame:	
  1515                           ; 1 bytes @ 0x3
  1516                           
  1517                           
  1518                           ; 1 bytes @ 0x3
  1519  0073                     	ds	1
  1520  0074                     ??___lwdiv:	
  1521  0074                     recv_data@size:	
  1522                           ; 1 bytes @ 0x4
  1523                           
  1524  0074                     recv_daikin_frame@size:	
  1525                           ; 1 bytes @ 0x4
  1526                           
  1527                           
  1528                           ; 1 bytes @ 0x4
  1529  0074                     	ds	1
  1530  0075                     recv_data@i:	
  1531  0075                     recv_daikin_frame@i:	
  1532                           ; 1 bytes @ 0x5
  1533                           
  1534  0075                     ___lwdiv@quotient:	
  1535                           ; 1 bytes @ 0x5
  1536                           
  1537                           
  1538                           ; 2 bytes @ 0x5
  1539  0075                     	ds	1
  1540  0076                     recv_data@a:	
  1541  0076                     recv_daikin_frame@a:	
  1542                           ; 1 bytes @ 0x6
  1543                           
  1544                           
  1545                           ; 1 bytes @ 0x6
  1546  0076                     	ds	1
  1547  0077                     ___lwdiv@counter:	
  1548                           
  1549                           ; 1 bytes @ 0x7
  1550  0077                     	ds	1
  1551  0078                     ?___lwmod:	
  1552  0078                     ___lwmod@divisor:	
  1553                           ; 2 bytes @ 0x8
  1554                           
  1555                           
  1556                           ; 2 bytes @ 0x8
  1557  0078                     	ds	2
  1558  007A                     ___lwmod@dividend:	
  1559                           
  1560                           ; 2 bytes @ 0xA
  1561  007A                     	ds	2
  1562  007C                     ??___lwmod:	
  1563                           
  1564                           ; 1 bytes @ 0xC
  1565  007C                     	ds	1
  1566  007D                     ___lwmod@counter:	
  1567                           
  1568                           ; 1 bytes @ 0xD
  1569  007D                     	ds	1
  1570  007E                     ??_AEHA:	
  1571                           
  1572                           	psect	cstackBANK0
  1573  0020                     __pcstackBANK0:	
  1574                           ; 1 bytes @ 0xE
  1575                           
  1576  0020                     ?_printf:	
  1577  0020                     printf@f:	
  1578                           ; 2 bytes @ 0x0
  1579                           
  1580                           
  1581                           ; 2 bytes @ 0x0
  1582  0020                     	ds	4
  1583  0024                     ??_printf:	
  1584                           
  1585                           ; 1 bytes @ 0x4
  1586  0024                     	ds	4
  1587  0028                     printf@ap:	
  1588                           
  1589                           ; 1 bytes @ 0x8
  1590  0028                     	ds	1
  1591  0029                     printf@flag:	
  1592                           
  1593                           ; 1 bytes @ 0x9
  1594  0029                     	ds	1
  1595  002A                     printf@prec:	
  1596                           
  1597                           ; 1 bytes @ 0xA
  1598  002A                     	ds	1
  1599  002B                     printf@val:	
  1600                           
  1601                           ; 2 bytes @ 0xB
  1602  002B                     	ds	2
  1603  002D                     printf@c:	
  1604                           
  1605                           ; 1 bytes @ 0xD
  1606  002D                     	ds	1
  1607  002E                     ??_detect_mode:	
  1608  002E                     ??_recv_daikin_reader:	
  1609                           ; 1 bytes @ 0xE
  1610                           
  1611                           
  1612                           ; 1 bytes @ 0xE
  1613  002E                     	ds	1
  1614  002F                     detect_mode@mode:	
  1615                           
  1616                           ; 1 bytes @ 0xF
  1617  002F                     	ds	1
  1618  0030                     recv_daikin_reader@a:	
  1619                           
  1620                           ; 1 bytes @ 0x10
  1621  0030                     	ds	1
  1622  0031                     recv_daikin_reader@i:	
  1623                           
  1624                           ; 1 bytes @ 0x11
  1625  0031                     	ds	1
  1626  0032                     ??_DAIKIN:	
  1627                           
  1628                           ; 1 bytes @ 0x12
  1629  0032                     	ds	2
  1630  0034                     ??_main:	
  1631                           
  1632                           ; 1 bytes @ 0x14
  1633  0034                     	ds	2
  1634  0036                     main@cnt:	
  1635                           
  1636                           ; 1 bytes @ 0x16
  1637  0036                     	ds	1
  1638  0037                     main@mode:	
  1639                           
  1640                           ; 1 bytes @ 0x17
  1641  0037                     	ds	1
  1642                           
  1643                           	psect	maintext
  1644  0665                     __pmaintext:	
  1645 ;;
  1646 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1647 ;;
  1648 ;; *************** function _main *****************
  1649 ;; Defined at:
  1650 ;;		line 52 in file "main.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  mode            1   23[BANK0 ] unsigned char 
  1655 ;;  cnt             1   22[BANK0 ] unsigned char 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : B1F/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1665 ;;      Params:         0       0       0       0       0       0
  1666 ;;      Locals:         0       2       0       0       0       0
  1667 ;;      Temps:          0       2       0       0       0       0
  1668 ;;      Totals:         0       4       0       0       0       0
  1669 ;;Total ram usage:        4 bytes
  1670 ;; Hardware stack levels required when called:    5
  1671 ;; This function calls:
  1672 ;;		_AEHA
  1673 ;;		_DAIKIN
  1674 ;;		_NEC
  1675 ;;		_SONY
  1676 ;;		_SYSTEM_Initialize
  1677 ;;		_detect_mode
  1678 ;;		_printf
  1679 ;; This function is called by:
  1680 ;;		Startup code after reset
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           
  1685                           ;psect for function _main
  1686  0665                     _main:	
  1687  0665                     l1753:	
  1688                           ;incstack = 0
  1689                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1690                           
  1691                           
  1692                           ;main.c: 54: SYSTEM_Initialize();
  1693  0665  3184  246B  3186   	fcall	_SYSTEM_Initialize
  1694  0668                     l1755:	
  1695  0668  0022               	movlb	2	; select bank2
  1696  0669  150C               	bsf	12,2	;volatile
  1697  066A                     l1757:	
  1698                           
  1699                           ;main.c: 56: uint8_t mode = detect_mode();
  1700  066A  3186  26C3  3186   	fcall	_detect_mode
  1701  066D  0020               	movlb	0	; select bank0
  1702  066E  00B4               	movwf	??_main
  1703  066F  0834               	movf	??_main,w
  1704  0670  00B7               	movwf	main@mode
  1705  0671                     l1759:	
  1706                           
  1707                           ;main.c: 58: uint8_t cnt = 0;
  1708  0671  01B6               	clrf	main@cnt
  1709  0672  2E77               	goto	l1763
  1710  0673                     l1761:	
  1711                           
  1712                           ;main.c: 62: _delay((unsigned long)((5)*(32000000/4000000.0)));
  1713  0673  300D               	movlw	13
  1714  0674                     u1047:	
  1715  0674  0B89               	decfsz	9,f
  1716  0675  2E74               	goto	u1047
  1717  0676  0000               	nop
  1718  0677                     l1763:	
  1719  0677  0020               	movlb	0	; select bank0
  1720  0678  188C               	btfsc	12,1	;volatile
  1721  0679  2E7B               	goto	u991
  1722  067A  2E7C               	goto	u990
  1723  067B                     u991:	
  1724  067B  2E73               	goto	l1761
  1725  067C                     u990:	
  1726  067C                     l1765:	
  1727                           
  1728                           ;main.c: 63: };main.c: 65: if(mode == 'D'){
  1729  067C  3044               	movlw	68
  1730  067D  0637               	xorwf	main@mode,w
  1731  067E  1D03               	btfss	3,2
  1732  067F  2E81               	goto	u1001
  1733  0680  2E82               	goto	u1000
  1734  0681                     u1001:	
  1735  0681  2E86               	goto	l1769
  1736  0682                     u1000:	
  1737  0682                     l1767:	
  1738                           
  1739                           ;main.c: 66: DAIKIN();
  1740  0682  3185  2522  3186   	fcall	_DAIKIN
  1741                           
  1742                           ;main.c: 67: }else if(mode == 'A'){
  1743  0685  2EA4               	goto	l1781
  1744  0686                     l1769:	
  1745  0686  3041               	movlw	65
  1746  0687  0637               	xorwf	main@mode,w
  1747  0688  1D03               	btfss	3,2
  1748  0689  2E8B               	goto	u1011
  1749  068A  2E8C               	goto	u1010
  1750  068B                     u1011:	
  1751  068B  2E90               	goto	l1773
  1752  068C                     u1010:	
  1753  068C                     l1771:	
  1754                           
  1755                           ;main.c: 68: AEHA();
  1756  068C  3184  2487  3186   	fcall	_AEHA
  1757                           
  1758                           ;main.c: 69: }else if(mode == 'S'){
  1759  068F  2EA4               	goto	l1781
  1760  0690                     l1773:	
  1761  0690  3053               	movlw	83
  1762  0691  0637               	xorwf	main@mode,w
  1763  0692  1D03               	btfss	3,2
  1764  0693  2E95               	goto	u1021
  1765  0694  2E96               	goto	u1020
  1766  0695                     u1021:	
  1767  0695  2E9A               	goto	l1777
  1768  0696                     u1020:	
  1769  0696                     l1775:	
  1770                           
  1771                           ;main.c: 70: SONY();
  1772  0696  3184  2434  3186   	fcall	_SONY
  1773                           
  1774                           ;main.c: 71: }else if(mode == 'N'){
  1775  0699  2EA4               	goto	l1781
  1776  069A                     l1777:	
  1777  069A  304E               	movlw	78
  1778  069B  0637               	xorwf	main@mode,w
  1779  069C  1D03               	btfss	3,2
  1780  069D  2E9F               	goto	u1031
  1781  069E  2EA0               	goto	u1030
  1782  069F                     u1031:	
  1783  069F  2EA4               	goto	l202
  1784  06A0                     u1030:	
  1785  06A0                     l1779:	
  1786                           
  1787                           ;main.c: 72: NEC();
  1788  06A0  3184  2433  3186   	fcall	_NEC
  1789  06A3  2EA4               	goto	l1781
  1790  06A4                     l202:	
  1791  06A4                     l1781:	
  1792                           
  1793                           ;main.c: 73: };main.c: 75: printf("end\r\n");
  1794  06A4  30D1               	movlw	low (STR_1| (0+32768))
  1795  06A5  0020               	movlb	0	; select bank0
  1796  06A6  00A0               	movwf	printf@f
  1797  06A7  3088               	movlw	high (STR_1| (0+32768))
  1798  06A8  00A1               	movwf	printf@f+1
  1799  06A9  3187  2733  3186   	fcall	_printf
  1800  06AC                     l1783:	
  1801                           
  1802                           ;main.c: 76: printf("[%d]--------------------------\r\n", cnt);
  1803  06AC  303C               	movlw	low (STR_2| (0+32768))
  1804  06AD  0020               	movlb	0	; select bank0
  1805  06AE  00A0               	movwf	printf@f
  1806  06AF  3088               	movlw	high (STR_2| (0+32768))
  1807  06B0  00A1               	movwf	printf@f+1
  1808  06B1  0836               	movf	main@cnt,w
  1809  06B2  00B4               	movwf	??_main
  1810  06B3  01B5               	clrf	??_main+1
  1811  06B4  0834               	movf	??_main,w
  1812  06B5  00A2               	movwf	?_printf+2
  1813  06B6  0835               	movf	??_main+1,w
  1814  06B7  00A3               	movwf	?_printf+3
  1815  06B8  3187  2733  3186   	fcall	_printf
  1816  06BB                     l1785:	
  1817                           
  1818                           ;main.c: 77: cnt++;
  1819  06BB  3001               	movlw	1
  1820  06BC  0020               	movlb	0	; select bank0
  1821  06BD  00B4               	movwf	??_main
  1822  06BE  0834               	movf	??_main,w
  1823  06BF  07B6               	addwf	main@cnt,f
  1824  06C0  2E77               	goto	l1763
  1825  06C1  3180  2802         	ljmp	start
  1826  06C3                     __end_of_main:	
  1827                           
  1828                           	psect	text1
  1829  06C3                     __ptext1:	
  1830 ;; *************** function _detect_mode *****************
  1831 ;; Defined at:
  1832 ;;		line 81 in file "main.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  mode            1   15[BANK0 ] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      unsigned char 
  1839 ;; Registers used:
  1840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1846 ;;      Params:         0       0       0       0       0       0
  1847 ;;      Locals:         0       1       0       0       0       0
  1848 ;;      Temps:          0       1       0       0       0       0
  1849 ;;      Totals:         0       2       0       0       0       0
  1850 ;;Total ram usage:        2 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    3
  1853 ;; This function calls:
  1854 ;;		_getch
  1855 ;;		_printf
  1856 ;; This function is called by:
  1857 ;;		_main
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           
  1862                           ;psect for function _detect_mode
  1863  06C3                     _detect_mode:	
  1864  06C3                     l1695:	
  1865                           ;incstack = 0
  1866                           ; Regs used in _detect_mode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1867                           
  1868                           
  1869                           ;main.c: 82: printf("IR Reciver Version 1.0.0\r\n");
  1870  06C3  307D               	movlw	low (STR_3| (0+32768))
  1871  06C4  0020               	movlb	0	; select bank0
  1872  06C5  00A0               	movwf	printf@f
  1873  06C6  3088               	movlw	high (STR_3| (0+32768))
  1874  06C7  00A1               	movwf	printf@f+1
  1875  06C8  3187  2733  3186   	fcall	_printf
  1876                           
  1877                           ;main.c: 83: printf("-----------------------------\r\n");
  1878  06CB  305D               	movlw	low (STR_4| (0+32768))
  1879  06CC  0020               	movlb	0	; select bank0
  1880  06CD  00A0               	movwf	printf@f
  1881  06CE  3088               	movlw	high (STR_4| (0+32768))
  1882  06CF  00A1               	movwf	printf@f+1
  1883  06D0  3187  2733  3186   	fcall	_printf
  1884                           
  1885                           ;main.c: 84: printf("NEC:N | AEHA:A | DAIKIN:D | SONY:S|(*default:D)\r\n");
  1886  06D3  300A               	movlw	low (STR_5| (0+32768))
  1887  06D4  0020               	movlb	0	; select bank0
  1888  06D5  00A0               	movwf	printf@f
  1889  06D6  3088               	movlw	high (STR_5| (0+32768))
  1890  06D7  00A1               	movwf	printf@f+1
  1891  06D8  3187  2733  3186   	fcall	_printf
  1892  06DB                     l1697:	
  1893                           
  1894                           ;main.c: 86: uint8_t mode = getch();
  1895  06DB  3184  2439  3186   	fcall	_getch
  1896  06DE  0020               	movlb	0	; select bank0
  1897  06DF  00AE               	movwf	??_detect_mode
  1898  06E0  082E               	movf	??_detect_mode,w
  1899  06E1  00AF               	movwf	detect_mode@mode
  1900  06E2                     l1699:	
  1901                           
  1902                           ;main.c: 88: if(mode == 'N'){
  1903  06E2  304E               	movlw	78
  1904  06E3  062F               	xorwf	detect_mode@mode,w
  1905  06E4  1D03               	btfss	3,2
  1906  06E5  2EE7               	goto	u951
  1907  06E6  2EE8               	goto	u950
  1908  06E7                     u951:	
  1909  06E7  2EF2               	goto	l1705
  1910  06E8                     u950:	
  1911  06E8                     l1701:	
  1912                           
  1913                           ;main.c: 89: printf("Detect NEC\r\n");
  1914  06E8  30C4               	movlw	low (STR_6| (0+32768))
  1915  06E9  00A0               	movwf	printf@f
  1916  06EA  3088               	movlw	high (STR_6| (0+32768))
  1917  06EB  00A1               	movwf	printf@f+1
  1918  06EC  3187  2733  3186   	fcall	_printf
  1919  06EF                     l1703:	
  1920  06EF  0022               	movlb	2	; select bank2
  1921  06F0  140C               	bsf	12,0	;volatile
  1922  06F1  2F28               	goto	l1727
  1923  06F2                     l1705:	
  1924  06F2  3041               	movlw	65
  1925  06F3  062F               	xorwf	detect_mode@mode,w
  1926  06F4  1D03               	btfss	3,2
  1927  06F5  2EF7               	goto	u961
  1928  06F6  2EF8               	goto	u960
  1929  06F7                     u961:	
  1930  06F7  2F02               	goto	l1711
  1931  06F8                     u960:	
  1932  06F8                     l1707:	
  1933                           
  1934                           ;main.c: 92: printf("Detect AEHA\r\n");
  1935  06F8  30A8               	movlw	low (STR_7| (0+32768))
  1936  06F9  00A0               	movwf	printf@f
  1937  06FA  3088               	movlw	high (STR_7| (0+32768))
  1938  06FB  00A1               	movwf	printf@f+1
  1939  06FC  3187  2733  3186   	fcall	_printf
  1940  06FF                     l1709:	
  1941  06FF  0022               	movlb	2	; select bank2
  1942  0700  178C               	bsf	12,7	;volatile
  1943  0701  2F28               	goto	l1727
  1944  0702                     l1711:	
  1945  0702  3044               	movlw	68
  1946  0703  062F               	xorwf	detect_mode@mode,w
  1947  0704  1D03               	btfss	3,2
  1948  0705  2F07               	goto	u971
  1949  0706  2F08               	goto	u970
  1950  0707                     u971:	
  1951  0707  2F12               	goto	l1717
  1952  0708                     u970:	
  1953  0708                     l1713:	
  1954                           
  1955                           ;main.c: 95: printf("Detect DAIKIN\r\n");
  1956  0708  3098               	movlw	low (STR_8| (0+32768))
  1957  0709  00A0               	movwf	printf@f
  1958  070A  3088               	movlw	high (STR_8| (0+32768))
  1959  070B  00A1               	movwf	printf@f+1
  1960  070C  3187  2733  3186   	fcall	_printf
  1961  070F                     l1715:	
  1962  070F  0022               	movlb	2	; select bank2
  1963  0710  170C               	bsf	12,6	;volatile
  1964  0711  2F28               	goto	l1727
  1965  0712                     l1717:	
  1966  0712  3053               	movlw	83
  1967  0713  062F               	xorwf	detect_mode@mode,w
  1968  0714  1D03               	btfss	3,2
  1969  0715  2F17               	goto	u981
  1970  0716  2F18               	goto	u980
  1971  0717                     u981:	
  1972  0717  2F22               	goto	l1723
  1973  0718                     u980:	
  1974  0718                     l1719:	
  1975                           
  1976                           ;main.c: 98: printf("Detect SONY\r\n");
  1977  0718  30B6               	movlw	low (STR_9| (0+32768))
  1978  0719  00A0               	movwf	printf@f
  1979  071A  3088               	movlw	high (STR_9| (0+32768))
  1980  071B  00A1               	movwf	printf@f+1
  1981  071C  3187  2733  3186   	fcall	_printf
  1982  071F                     l1721:	
  1983  071F  0022               	movlb	2	; select bank2
  1984  0720  178D               	bsf	13,7	;volatile
  1985  0721  2F28               	goto	l1727
  1986  0722                     l1723:	
  1987                           
  1988                           ;main.c: 101: mode = 'D';
  1989  0722  3044               	movlw	68
  1990  0723  00AE               	movwf	??_detect_mode
  1991  0724  082E               	movf	??_detect_mode,w
  1992  0725  00AF               	movwf	detect_mode@mode
  1993  0726                     l1725:	
  1994  0726  0022               	movlb	2	; select bank2
  1995  0727  170C               	bsf	12,6	;volatile
  1996  0728                     l1727:	
  1997                           
  1998                           ;main.c: 103: };main.c: 104: printf("-----------------------------\r\n");
  1999  0728  305D               	movlw	low (STR_4| (0+32768))
  2000  0729  0020               	movlb	0	; select bank0
  2001  072A  00A0               	movwf	printf@f
  2002  072B  3088               	movlw	high (STR_4| (0+32768))
  2003  072C  00A1               	movwf	printf@f+1
  2004  072D  3187  2733  3186   	fcall	_printf
  2005  0730                     l1729:	
  2006                           
  2007                           ;main.c: 106: return mode;
  2008  0730  0020               	movlb	0	; select bank0
  2009  0731  082F               	movf	detect_mode@mode,w
  2010  0732                     l229:	
  2011  0732  0008               	return
  2012  0733                     __end_of_detect_mode:	
  2013                           
  2014                           	psect	text2
  2015  0439                     __ptext2:	
  2016 ;; *************** function _getch *****************
  2017 ;; Defined at:
  2018 ;;		line 34 in file "main.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      unsigned char 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, pclath, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2032 ;;      Params:         0       0       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0
  2035 ;;      Totals:         0       0       0       0       0       0
  2036 ;;Total ram usage:        0 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    1
  2039 ;; This function calls:
  2040 ;;		_EUSART_Read
  2041 ;; This function is called by:
  2042 ;;		_detect_mode
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           
  2047                           ;psect for function _getch
  2048  0439                     _getch:	
  2049  0439                     l1627:	
  2050                           ;incstack = 0
  2051                           ; Regs used in _getch: [wreg+status,2+pclath+cstack]
  2052                           
  2053                           
  2054                           ;main.c: 35: return EUSART_Read();
  2055  0439  3184  2478  3184   	fcall	_EUSART_Read
  2056  043C                     l188:	
  2057  043C  0008               	return
  2058  043D                     __end_of_getch:	
  2059                           
  2060                           	psect	text3
  2061  0478                     __ptext3:	
  2062 ;; *************** function _EUSART_Read *****************
  2063 ;; Defined at:
  2064 ;;		line 113 in file "mcc_generated_files/eusart.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      unsigned char 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2078 ;;      Params:         0       0       0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0
  2081 ;;      Totals:         0       0       0       0       0       0
  2082 ;;Total ram usage:        0 bytes
  2083 ;; Hardware stack levels used:    1
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_getch
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           
  2092                           ;psect for function _EUSART_Read
  2093  0478                     _EUSART_Read:	
  2094  0478                     l1507:	
  2095                           ;incstack = 0
  2096                           ; Regs used in _EUSART_Read: [wreg+status,2]
  2097                           
  2098  0478                     l60:	
  2099                           ;eusart.c: 116: {
  2100                           
  2101  0478  0020               	movlb	0	; select bank0
  2102  0479  1E91               	btfss	17,5	;volatile
  2103  047A  2C7C               	goto	u701
  2104  047B  2C7D               	goto	u700
  2105  047C                     u701:	
  2106  047C  2C78               	goto	l60
  2107  047D                     u700:	
  2108  047D                     l1509:	
  2109                           
  2110                           ;eusart.c: 117: };eusart.c: 119: eusartRxLastError.status = 0;
  2111  047D  01BE               	clrf	_eusartRxLastError	;volatile
  2112  047E                     l1511:	
  2113                           
  2114                           ;eusart.c: 121: if(1 == RCSTAbits.OERR)
  2115  047E  0023               	movlb	3	; select bank3
  2116  047F  1C9D               	btfss	29,1	;volatile
  2117  0480  2C82               	goto	u711
  2118  0481  2C83               	goto	u710
  2119  0482                     u711:	
  2120  0482  2C85               	goto	l1515
  2121  0483                     u710:	
  2122  0483                     l1513:	
  2123                           
  2124                           ;eusart.c: 122: {;eusart.c: 125: RCSTAbits.CREN = 0;
  2125  0483  121D               	bcf	29,4	;volatile
  2126                           
  2127                           ;eusart.c: 126: RCSTAbits.CREN = 1;
  2128  0484  161D               	bsf	29,4	;volatile
  2129  0485                     l1515:	
  2130                           
  2131                           ;eusart.c: 127: };eusart.c: 129: return RCREG;
  2132  0485  0819               	movf	25,w	;volatile
  2133  0486                     l64:	
  2134  0486  0008               	return
  2135  0487                     __end_of_EUSART_Read:	
  2136                           
  2137                           	psect	text4
  2138  046B                     __ptext4:	
  2139 ;; *************** function _SYSTEM_Initialize *****************
  2140 ;; Defined at:
  2141 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg, status,2, status,0, pclath, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2155 ;;      Params:         0       0       0       0       0       0
  2156 ;;      Locals:         0       0       0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0
  2158 ;;      Totals:         0       0       0       0       0       0
  2159 ;;Total ram usage:        0 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    2
  2162 ;; This function calls:
  2163 ;;		_EUSART_Initialize
  2164 ;;		_OSCILLATOR_Initialize
  2165 ;;		_PIN_MANAGER_Initialize
  2166 ;;		_WDT_Initialize
  2167 ;; This function is called by:
  2168 ;;		_main
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           
  2173                           ;psect for function _SYSTEM_Initialize
  2174  046B                     _SYSTEM_Initialize:	
  2175  046B                     l1693:	
  2176                           ;incstack = 0
  2177                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2178                           
  2179                           
  2180                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  2181  046B  3184  249B  3184   	fcall	_PIN_MANAGER_Initialize
  2182                           
  2183                           ;mcc.c: 54: OSCILLATOR_Initialize();
  2184  046E  3184  245F  3184   	fcall	_OSCILLATOR_Initialize
  2185                           
  2186                           ;mcc.c: 55: WDT_Initialize();
  2187  0471  3184  2435  3184   	fcall	_WDT_Initialize
  2188                           
  2189                           ;mcc.c: 56: EUSART_Initialize();
  2190  0474  3184  24B3  3184   	fcall	_EUSART_Initialize
  2191  0477                     l109:	
  2192  0477  0008               	return
  2193  0478                     __end_of_SYSTEM_Initialize:	
  2194                           
  2195                           	psect	text5
  2196  0435                     __ptext5:	
  2197 ;; *************** function _WDT_Initialize *****************
  2198 ;; Defined at:
  2199 ;;		line 73 in file "mcc_generated_files/mcc.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2213 ;;      Params:         0       0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0
  2216 ;;      Totals:         0       0       0       0       0       0
  2217 ;;Total ram usage:        0 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_SYSTEM_Initialize
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           
  2227                           ;psect for function _WDT_Initialize
  2228  0435                     _WDT_Initialize:	
  2229  0435                     l1625:	
  2230                           ;incstack = 0
  2231                           ; Regs used in _WDT_Initialize: [wreg]
  2232                           
  2233                           
  2234                           ;mcc.c: 76: WDTCON = 0x16;
  2235  0435  3016               	movlw	22
  2236  0436  0021               	movlb	1	; select bank1
  2237  0437  0097               	movwf	23	;volatile
  2238  0438                     l118:	
  2239  0438  0008               	return
  2240  0439                     __end_of_WDT_Initialize:	
  2241                           
  2242                           	psect	text6
  2243  049B                     __ptext6:	
  2244 ;; *************** function _PIN_MANAGER_Initialize *****************
  2245 ;; Defined at:
  2246 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2260 ;;      Params:         0       0       0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0
  2263 ;;      Totals:         0       0       0       0       0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_SYSTEM_Initialize
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           
  2274                           ;psect for function _PIN_MANAGER_Initialize
  2275  049B                     _PIN_MANAGER_Initialize:	
  2276  049B                     l1603:	
  2277                           ;incstack = 0
  2278                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2279                           
  2280                           
  2281                           ;pin_manager.c: 60: LATA = 0x00;
  2282  049B  0022               	movlb	2	; select bank2
  2283  049C  018C               	clrf	12	;volatile
  2284                           
  2285                           ;pin_manager.c: 61: LATB = 0x00;
  2286  049D  018D               	clrf	13	;volatile
  2287  049E                     l1605:	
  2288                           
  2289                           ;pin_manager.c: 66: TRISA = 0x32;
  2290  049E  3032               	movlw	50
  2291  049F  0021               	movlb	1	; select bank1
  2292  04A0  008C               	movwf	12	;volatile
  2293  04A1                     l1607:	
  2294                           
  2295                           ;pin_manager.c: 67: TRISB = 0x7F;
  2296  04A1  307F               	movlw	127
  2297  04A2  008D               	movwf	13	;volatile
  2298  04A3                     l1609:	
  2299                           
  2300                           ;pin_manager.c: 72: ANSELB = 0x5A;
  2301  04A3  305A               	movlw	90
  2302  04A4  0023               	movlb	3	; select bank3
  2303  04A5  008D               	movwf	13	;volatile
  2304  04A6                     l1611:	
  2305                           
  2306                           ;pin_manager.c: 73: ANSELA = 0x10;
  2307  04A6  3010               	movlw	16
  2308  04A7  008C               	movwf	12	;volatile
  2309                           
  2310                           ;pin_manager.c: 78: WPUB = 0x00;
  2311  04A8  0024               	movlb	4	; select bank4
  2312  04A9  018D               	clrf	13	;volatile
  2313                           
  2314                           ;pin_manager.c: 79: WPUA = 0x00;
  2315  04AA  018C               	clrf	12	;volatile
  2316  04AB                     l1613:	
  2317                           
  2318                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  2319  04AB  0021               	movlb	1	; select bank1
  2320  04AC  1795               	bsf	21,7	;volatile
  2321  04AD                     l1615:	
  2322                           
  2323                           ;pin_manager.c: 86: APFCON0 = 0x80;
  2324  04AD  3080               	movlw	128
  2325  04AE  0022               	movlb	2	; select bank2
  2326  04AF  009D               	movwf	29	;volatile
  2327  04B0                     l1617:	
  2328                           
  2329                           ;pin_manager.c: 87: APFCON1 = 0x01;
  2330  04B0  3001               	movlw	1
  2331  04B1  009E               	movwf	30	;volatile
  2332  04B2                     l143:	
  2333  04B2  0008               	return
  2334  04B3                     __end_of_PIN_MANAGER_Initialize:	
  2335                           
  2336                           	psect	text7
  2337  045F                     __ptext7:	
  2338 ;; *************** function _OSCILLATOR_Initialize *****************
  2339 ;; Defined at:
  2340 ;;		line 59 in file "mcc_generated_files/mcc.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg, status,2
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2354 ;;      Params:         0       0       0       0       0       0
  2355 ;;      Locals:         0       0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0
  2357 ;;      Totals:         0       0       0       0       0       0
  2358 ;;Total ram usage:        0 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_SYSTEM_Initialize
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           
  2368                           ;psect for function _OSCILLATOR_Initialize
  2369  045F                     _OSCILLATOR_Initialize:	
  2370  045F                     l1619:	
  2371                           ;incstack = 0
  2372                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2373                           
  2374                           
  2375                           ;mcc.c: 62: OSCCON = 0x70;
  2376  045F  3070               	movlw	112
  2377  0460  0021               	movlb	1	; select bank1
  2378  0461  0099               	movwf	25	;volatile
  2379  0462                     l1621:	
  2380                           
  2381                           ;mcc.c: 64: OSCTUNE = 0x00;
  2382  0462  0198               	clrf	24	;volatile
  2383  0463                     l1623:	
  2384                           
  2385                           ;mcc.c: 66: BORCON = 0x00;
  2386  0463  0022               	movlb	2	; select bank2
  2387  0464  0196               	clrf	22	;volatile
  2388  0465                     l112:	
  2389                           ;mcc.c: 69: {
  2390                           
  2391  0465  0021               	movlb	1	; select bank1
  2392  0466  1F1A               	btfss	26,6	;volatile
  2393  0467  2C69               	goto	u831
  2394  0468  2C6A               	goto	u830
  2395  0469                     u831:	
  2396  0469  2C65               	goto	l112
  2397  046A                     u830:	
  2398  046A                     l115:	
  2399  046A  0008               	return
  2400  046B                     __end_of_OSCILLATOR_Initialize:	
  2401                           
  2402                           	psect	text8
  2403  04B3                     __ptext8:	
  2404 ;; *************** function _EUSART_Initialize *****************
  2405 ;; Defined at:
  2406 ;;		line 66 in file "mcc_generated_files/eusart.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0, pclath, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2420 ;;      Params:         0       0       0       0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0
  2423 ;;      Totals:         0       0       0       0       0       0
  2424 ;;Total ram usage:        0 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    1
  2427 ;; This function calls:
  2428 ;;		_EUSART_SetErrorHandler
  2429 ;;		_EUSART_SetFramingErrorHandler
  2430 ;;		_EUSART_SetOverrunErrorHandler
  2431 ;; This function is called by:
  2432 ;;		_SYSTEM_Initialize
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           
  2437                           ;psect for function _EUSART_Initialize
  2438  04B3                     _EUSART_Initialize:	
  2439  04B3                     l1593:	
  2440                           ;incstack = 0
  2441                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2442                           
  2443                           
  2444                           ;eusart.c: 71: BAUDCON = 0x08;
  2445  04B3  3008               	movlw	8
  2446  04B4  0023               	movlb	3	; select bank3
  2447  04B5  009F               	movwf	31	;volatile
  2448                           
  2449                           ;eusart.c: 74: RCSTA = 0x90;
  2450  04B6  3090               	movlw	144
  2451  04B7  009D               	movwf	29	;volatile
  2452                           
  2453                           ;eusart.c: 77: TXSTA = 0x24;
  2454  04B8  3024               	movlw	36
  2455  04B9  009E               	movwf	30	;volatile
  2456                           
  2457                           ;eusart.c: 80: SPBRGL = 0x40;
  2458  04BA  3040               	movlw	64
  2459  04BB  009B               	movwf	27	;volatile
  2460                           
  2461                           ;eusart.c: 83: SPBRGH = 0x03;
  2462  04BC  3003               	movlw	3
  2463  04BD  009C               	movwf	28	;volatile
  2464  04BE                     l1595:	
  2465                           
  2466                           ;eusart.c: 86: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  2467  04BE  3000               	movlw	0
  2468  04BF  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  2469  04C0  3000               	movlw	0
  2470  04C1  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  2471  04C2  3184  2449  3184   	fcall	_EUSART_SetFramingErrorHandler
  2472  04C5                     l1597:	
  2473                           
  2474                           ;eusart.c: 87: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  2475  04C5  3000               	movlw	0
  2476  04C6  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2477  04C7  3000               	movlw	0
  2478  04C8  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2479  04C9  3184  244F  3184   	fcall	_EUSART_SetOverrunErrorHandler
  2480  04CC                     l1599:	
  2481                           
  2482                           ;eusart.c: 88: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  2483  04CC  3000               	movlw	0
  2484  04CD  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  2485  04CE  3000               	movlw	0
  2486  04CF  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  2487  04D0  3184  2443  3184   	fcall	_EUSART_SetErrorHandler
  2488  04D3                     l1601:	
  2489                           
  2490                           ;eusart.c: 90: eusartRxLastError.status = 0;
  2491  04D3  0020               	movlb	0	; select bank0
  2492  04D4  01BE               	clrf	_eusartRxLastError	;volatile
  2493  04D5                     l43:	
  2494  04D5  0008               	return
  2495  04D6                     __end_of_EUSART_Initialize:	
  2496                           
  2497                           	psect	text9
  2498  044F                     __ptext9:	
  2499 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2500 ;; Defined at:
  2501 ;;		line 161 in file "mcc_generated_files/eusart.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2504 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2516 ;;      Params:         2       0       0       0       0       0
  2517 ;;      Locals:         0       0       0       0       0       0
  2518 ;;      Temps:          0       0       0       0       0       0
  2519 ;;      Totals:         2       0       0       0       0       0
  2520 ;;Total ram usage:        2 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_EUSART_Initialize
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           
  2530                           ;psect for function _EUSART_SetOverrunErrorHandler
  2531  044F                     _EUSART_SetOverrunErrorHandler:	
  2532  044F                     l1503:	
  2533                           ;incstack = 0
  2534                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2535                           
  2536                           
  2537                           ;eusart.c: 162: EUSART_OverrunErrorHandler = interruptHandler;
  2538  044F  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  2539  0450  0020               	movlb	0	; select bank0
  2540  0451  00BB               	movwf	_EUSART_OverrunErrorHandler+1
  2541  0452  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  2542  0453  00BA               	movwf	_EUSART_OverrunErrorHandler
  2543  0454                     l85:	
  2544  0454  0008               	return
  2545  0455                     __end_of_EUSART_SetOverrunErrorHandler:	
  2546                           
  2547                           	psect	text10
  2548  0449                     __ptext10:	
  2549 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2550 ;; Defined at:
  2551 ;;		line 157 in file "mcc_generated_files/eusart.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2554 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2566 ;;      Params:         2       0       0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0       0
  2569 ;;      Totals:         2       0       0       0       0       0
  2570 ;;Total ram usage:        2 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_EUSART_Initialize
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           
  2580                           ;psect for function _EUSART_SetFramingErrorHandler
  2581  0449                     _EUSART_SetFramingErrorHandler:	
  2582  0449                     l1501:	
  2583                           ;incstack = 0
  2584                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2585                           
  2586                           
  2587                           ;eusart.c: 158: EUSART_FramingErrorHandler = interruptHandler;
  2588  0449  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2589  044A  0020               	movlb	0	; select bank0
  2590  044B  00BD               	movwf	_EUSART_FramingErrorHandler+1
  2591  044C  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2592  044D  00BC               	movwf	_EUSART_FramingErrorHandler
  2593  044E                     l82:	
  2594  044E  0008               	return
  2595  044F                     __end_of_EUSART_SetFramingErrorHandler:	
  2596                           
  2597                           	psect	text11
  2598  0443                     __ptext11:	
  2599 ;; *************** function _EUSART_SetErrorHandler *****************
  2600 ;; Defined at:
  2601 ;;		line 165 in file "mcc_generated_files/eusart.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2604 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		wreg
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2616 ;;      Params:         2       0       0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0       0
  2619 ;;      Totals:         2       0       0       0       0       0
  2620 ;;Total ram usage:        2 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; This function calls:
  2623 ;;		Nothing
  2624 ;; This function is called by:
  2625 ;;		_EUSART_Initialize
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           
  2630                           ;psect for function _EUSART_SetErrorHandler
  2631  0443                     _EUSART_SetErrorHandler:	
  2632  0443                     l1505:	
  2633                           ;incstack = 0
  2634                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2635                           
  2636                           
  2637                           ;eusart.c: 166: EUSART_ErrorHandler = interruptHandler;
  2638  0443  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2639  0444  0020               	movlb	0	; select bank0
  2640  0445  00B9               	movwf	_EUSART_ErrorHandler+1
  2641  0446  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2642  0447  00B8               	movwf	_EUSART_ErrorHandler
  2643  0448                     l88:	
  2644  0448  0008               	return
  2645  0449                     __end_of_EUSART_SetErrorHandler:	
  2646                           
  2647                           	psect	text12
  2648  0434                     __ptext12:	
  2649 ;; *************** function _SONY *****************
  2650 ;; Defined at:
  2651 ;;		line 130 in file "main.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;		None
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		None
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2665 ;;      Params:         0       0       0       0       0       0
  2666 ;;      Locals:         0       0       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0
  2668 ;;      Totals:         0       0       0       0       0       0
  2669 ;;Total ram usage:        0 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           
  2679                           ;psect for function _SONY
  2680  0434                     _SONY:	
  2681  0434                     l238:	
  2682                           ;incstack = 0
  2683                           ; Regs used in _SONY: []
  2684                           
  2685  0434  0008               	return
  2686  0435                     __end_of_SONY:	
  2687                           
  2688                           	psect	text13
  2689  0433                     __ptext13:	
  2690 ;; *************** function _NEC *****************
  2691 ;; Defined at:
  2692 ;;		line 134 in file "main.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		None
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2706 ;;      Params:         0       0       0       0       0       0
  2707 ;;      Locals:         0       0       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0       0
  2709 ;;      Totals:         0       0       0       0       0       0
  2710 ;;Total ram usage:        0 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_main
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           
  2720                           ;psect for function _NEC
  2721  0433                     _NEC:	
  2722  0433                     l241:	
  2723                           ;incstack = 0
  2724                           ; Regs used in _NEC: []
  2725                           
  2726  0433  0008               	return
  2727  0434                     __end_of_NEC:	
  2728                           
  2729                           	psect	text14
  2730  0522                     __ptext14:	
  2731 ;; *************** function _DAIKIN *****************
  2732 ;; Defined at:
  2733 ;;		line 116 in file "main.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;		None
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2747 ;;      Params:         0       0       0       0       0       0
  2748 ;;      Locals:         0       0       0       0       0       0
  2749 ;;      Temps:          0       2       0       0       0       0
  2750 ;;      Totals:         0       2       0       0       0       0
  2751 ;;Total ram usage:        2 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    4
  2754 ;; This function calls:
  2755 ;;		_putch
  2756 ;;		_recv_daikin_frame
  2757 ;;		_recv_daikin_reader
  2758 ;;		_recv_reader
  2759 ;; This function is called by:
  2760 ;;		_main
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           
  2765                           ;psect for function _DAIKIN
  2766  0522                     _DAIKIN:	
  2767  0522                     l1733:	
  2768                           ;incstack = 0
  2769                           ; Regs used in _DAIKIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2770                           
  2771                           
  2772                           ;main.c: 117: recv_daikin_reader();
  2773  0522  3185  2549  3185   	fcall	_recv_daikin_reader
  2774  0525                     l1735:	
  2775                           
  2776                           ;main.c: 119: recv_reader();
  2777  0525  3185  25E8  3185   	fcall	_recv_reader
  2778  0528                     l1737:	
  2779                           
  2780                           ;main.c: 120: recv_daikin_frame(160);
  2781  0528  30A0               	movlw	160
  2782  0529  3184  24FC  3185   	fcall	_recv_daikin_frame
  2783  052C                     l1739:	
  2784                           
  2785                           ;main.c: 121: putch('|');
  2786  052C  307C               	movlw	124
  2787  052D  3184  243D  3185   	fcall	_putch
  2788  0530                     l1741:	
  2789                           
  2790                           ;main.c: 123: _delay((unsigned long)((35)*(32000000/4000.0)));
  2791  0530  3002               	movlw	2
  2792  0531  0020               	movlb	0	; select bank0
  2793  0532  00B3               	movwf	??_DAIKIN+1
  2794  0533  306C               	movlw	108
  2795  0534  00B2               	movwf	??_DAIKIN
  2796  0535  309F               	movlw	159
  2797  0536                     u1057:	
  2798  0536  0B89               	decfsz	9,f
  2799  0537  2D36               	goto	u1057
  2800  0538  0BB2               	decfsz	??_DAIKIN,f
  2801  0539  2D36               	goto	u1057
  2802  053A  0BB3               	decfsz	??_DAIKIN+1,f
  2803  053B  2D36               	goto	u1057
  2804  053C  3200               	nop2
  2805  053D                     l1743:	
  2806                           
  2807                           ;main.c: 125: recv_reader();
  2808  053D  3185  25E8  3185   	fcall	_recv_reader
  2809  0540                     l1745:	
  2810                           
  2811                           ;main.c: 126: recv_daikin_frame(152);
  2812  0540  3098               	movlw	152
  2813  0541  3184  24FC  3185   	fcall	_recv_daikin_frame
  2814  0544                     l1747:	
  2815                           
  2816                           ;main.c: 127: putch('|');
  2817  0544  307C               	movlw	124
  2818  0545  3184  243D  3185   	fcall	_putch
  2819  0548                     l235:	
  2820  0548  0008               	return
  2821  0549                     __end_of_DAIKIN:	
  2822                           
  2823                           	psect	text15
  2824  0549                     __ptext15:	
  2825 ;; *************** function _recv_daikin_reader *****************
  2826 ;; Defined at:
  2827 ;;		line 179 in file "main.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;		None
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  a               1   16[BANK0 ] unsigned char 
  2832 ;;  i               1   17[BANK0 ] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      void 
  2835 ;; Registers used:
  2836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2842 ;;      Params:         0       0       0       0       0       0
  2843 ;;      Locals:         0       2       0       0       0       0
  2844 ;;      Temps:          0       2       0       0       0       0
  2845 ;;      Totals:         0       4       0       0       0       0
  2846 ;;Total ram usage:        4 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    3
  2849 ;; This function calls:
  2850 ;;		_bit_find
  2851 ;;		_printf
  2852 ;;		_putch
  2853 ;; This function is called by:
  2854 ;;		_DAIKIN
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           
  2859                           ;psect for function _recv_daikin_reader
  2860  0549                     _recv_daikin_reader:	
  2861  0549                     l1661:	
  2862                           ;incstack = 0
  2863                           ; Regs used in _recv_daikin_reader: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2864                           
  2865                           
  2866                           ;main.c: 180: uint8_t i;;main.c: 181: for(i = 0; i < 5; i++){
  2867  0549  0020               	movlb	0	; select bank0
  2868  054A  01B1               	clrf	recv_daikin_reader@i
  2869  054B                     l1667:	
  2870                           
  2871                           ;main.c: 182: uint8_t a = bit_find();
  2872  054B  3186  2625  3185   	fcall	_bit_find
  2873  054E  0020               	movlb	0	; select bank0
  2874  054F  00AE               	movwf	??_recv_daikin_reader
  2875  0550  082E               	movf	??_recv_daikin_reader,w
  2876  0551  00B0               	movwf	recv_daikin_reader@a
  2877  0552                     l1669:	
  2878                           
  2879                           ;main.c: 183: putch(a + '0');
  2880  0552  0830               	movf	recv_daikin_reader@a,w
  2881  0553  3E30               	addlw	48
  2882  0554  3184  243D  3185   	fcall	_putch
  2883  0557                     l1671:	
  2884  0557  3001               	movlw	1
  2885  0558  0020               	movlb	0	; select bank0
  2886  0559  00AE               	movwf	??_recv_daikin_reader
  2887  055A  082E               	movf	??_recv_daikin_reader,w
  2888  055B  07B1               	addwf	recv_daikin_reader@i,f
  2889  055C                     l1673:	
  2890  055C  3005               	movlw	5
  2891  055D  0231               	subwf	recv_daikin_reader@i,w
  2892  055E  1C03               	skipc
  2893  055F  2D61               	goto	u911
  2894  0560  2D62               	goto	u910
  2895  0561                     u911:	
  2896  0561  2D4B               	goto	l1667
  2897  0562                     u910:	
  2898  0562                     l1675:	
  2899                           
  2900                           ;main.c: 184: };main.c: 186: _delay((unsigned long)((25)*(32000000/4000.0)));
  2901  0562  3002               	movlw	2
  2902  0563  0020               	movlb	0	; select bank0
  2903  0564  00AF               	movwf	??_recv_daikin_reader+1
  2904  0565  3004               	movlw	4
  2905  0566  00AE               	movwf	??_recv_daikin_reader
  2906  0567  30BA               	movlw	186
  2907  0568                     u1067:	
  2908  0568  0B89               	decfsz	9,f
  2909  0569  2D68               	goto	u1067
  2910  056A  0BAE               	decfsz	??_recv_daikin_reader,f
  2911  056B  2D68               	goto	u1067
  2912  056C  0BAF               	decfsz	??_recv_daikin_reader+1,f
  2913  056D  2D68               	goto	u1067
  2914  056E  0000               	nop
  2915  056F                     l1677:	
  2916                           
  2917                           ;main.c: 187: printf("||");
  2918  056F  30D7               	movlw	low (STR_12| (0+32768))
  2919  0570  0020               	movlb	0	; select bank0
  2920  0571  00A0               	movwf	printf@f
  2921  0572  3088               	movlw	high (STR_12| (0+32768))
  2922  0573  00A1               	movwf	printf@f+1
  2923  0574  3187  2733  3185   	fcall	_printf
  2924  0577                     l266:	
  2925  0577  0008               	return
  2926  0578                     __end_of_recv_daikin_reader:	
  2927                           
  2928                           	psect	text16
  2929  04FC                     __ptext16:	
  2930 ;; *************** function _recv_daikin_frame *****************
  2931 ;; Defined at:
  2932 ;;		line 190 in file "main.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  size            1    wreg     unsigned char 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  size            1    4[COMMON] unsigned char 
  2937 ;;  a               1    6[COMMON] unsigned char 
  2938 ;;  i               1    5[COMMON] unsigned char 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0, pclath, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2948 ;;      Params:         0       0       0       0       0       0
  2949 ;;      Locals:         3       0       0       0       0       0
  2950 ;;      Temps:          1       0       0       0       0       0
  2951 ;;      Totals:         4       0       0       0       0       0
  2952 ;;Total ram usage:        4 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    2
  2955 ;; This function calls:
  2956 ;;		_bit_find
  2957 ;;		_putch
  2958 ;; This function is called by:
  2959 ;;		_DAIKIN
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           
  2964                           ;psect for function _recv_daikin_frame
  2965  04FC                     _recv_daikin_frame:	
  2966                           
  2967                           ;incstack = 0
  2968                           ; Regs used in _recv_daikin_frame: [wreg+status,2+status,0+pclath+cstack]
  2969                           ;recv_daikin_frame@size stored from wreg
  2970  04FC  00F4               	movwf	recv_daikin_frame@size
  2971  04FD                     l1679:	
  2972                           
  2973                           ;main.c: 191: uint8_t i;;main.c: 192: for(i = 0; i < size; i++){
  2974  04FD  01F5               	clrf	recv_daikin_frame@i
  2975  04FE  2D1B               	goto	l1691
  2976  04FF                     l1681:	
  2977                           
  2978                           ;main.c: 193: uint8_t a = bit_find();
  2979  04FF  3186  2625  3184   	fcall	_bit_find
  2980  0502  00F3               	movwf	??_recv_daikin_frame
  2981  0503  0873               	movf	??_recv_daikin_frame,w
  2982  0504  00F6               	movwf	recv_daikin_frame@a
  2983  0505                     l1683:	
  2984                           
  2985                           ;main.c: 194: putch(a + '0');
  2986  0505  0876               	movf	recv_daikin_frame@a,w
  2987  0506  3E30               	addlw	48
  2988  0507  3184  243D  3184   	fcall	_putch
  2989  050A                     l1685:	
  2990                           
  2991                           ;main.c: 195: if(a == 3 || a == 2) break;
  2992  050A  3003               	movlw	3
  2993  050B  0676               	xorwf	recv_daikin_frame@a,w
  2994  050C  1903               	btfsc	3,2
  2995  050D  2D0F               	goto	u921
  2996  050E  2D10               	goto	u920
  2997  050F                     u921:	
  2998  050F  2D21               	goto	l275
  2999  0510                     u920:	
  3000  0510                     l1687:	
  3001  0510  3002               	movlw	2
  3002  0511  0676               	xorwf	recv_daikin_frame@a,w
  3003  0512  1D03               	btfss	3,2
  3004  0513  2D15               	goto	u931
  3005  0514  2D16               	goto	u930
  3006  0515                     u931:	
  3007  0515  2D17               	goto	l1689
  3008  0516                     u930:	
  3009  0516  2D21               	goto	l275
  3010  0517                     l1689:	
  3011  0517  3001               	movlw	1
  3012  0518  00F3               	movwf	??_recv_daikin_frame
  3013  0519  0873               	movf	??_recv_daikin_frame,w
  3014  051A  07F5               	addwf	recv_daikin_frame@i,f
  3015  051B                     l1691:	
  3016  051B  0874               	movf	recv_daikin_frame@size,w
  3017  051C  0275               	subwf	recv_daikin_frame@i,w
  3018  051D  1C03               	skipc
  3019  051E  2D20               	goto	u941
  3020  051F  2D21               	goto	u940
  3021  0520                     u941:	
  3022  0520  2CFF               	goto	l1681
  3023  0521                     u940:	
  3024  0521                     l275:	
  3025  0521  0008               	return
  3026  0522                     __end_of_recv_daikin_frame:	
  3027                           
  3028                           	psect	text17
  3029  0487                     __ptext17:	
  3030 ;; *************** function _AEHA *****************
  3031 ;; Defined at:
  3032 ;;		line 109 in file "main.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;		None
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;		None
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3046 ;;      Params:         0       0       0       0       0       0
  3047 ;;      Locals:         0       0       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0       0
  3049 ;;      Totals:         0       0       0       0       0       0
  3050 ;;Total ram usage:        0 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; Hardware stack levels required when called:    3
  3053 ;; This function calls:
  3054 ;;		_printf
  3055 ;;		_putch
  3056 ;;		_recv_data
  3057 ;;		_recv_reader
  3058 ;; This function is called by:
  3059 ;;		_main
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           
  3064                           ;psect for function _AEHA
  3065  0487                     _AEHA:	
  3066  0487                     l1749:	
  3067                           ;incstack = 0
  3068                           ; Regs used in _AEHA: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3069                           
  3070                           
  3071                           ;main.c: 110: recv_reader();
  3072  0487  3185  25E8  3184   	fcall	_recv_reader
  3073                           
  3074                           ;main.c: 111: recv_data(48);
  3075  048A  3030               	movlw	48
  3076  048B  3184  24D6  3184   	fcall	_recv_data
  3077                           
  3078                           ;main.c: 112: putch('|');
  3079  048E  307C               	movlw	124
  3080  048F  3184  243D  3184   	fcall	_putch
  3081  0492                     l1751:	
  3082                           
  3083                           ;main.c: 113: printf("\r\n");
  3084  0492  3039               	movlw	low ((STR_5+47)| (0+32768))
  3085  0493  0020               	movlb	0	; select bank0
  3086  0494  00A0               	movwf	printf@f
  3087  0495  3088               	movlw	high ((STR_5+47)| (0+32768))
  3088  0496  00A1               	movwf	printf@f+1
  3089  0497  3187  2733  3184   	fcall	_printf
  3090  049A                     l232:	
  3091  049A  0008               	return
  3092  049B                     __end_of_AEHA:	
  3093                           
  3094                           	psect	text18
  3095  05E8                     __ptext18:	
  3096 ;; *************** function _recv_reader *****************
  3097 ;; Defined at:
  3098 ;;		line 143 in file "main.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  width           2    1[COMMON] int 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      unsigned char 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3112 ;;      Params:         0       0       0       0       0       0
  3113 ;;      Locals:         2       0       0       0       0       0
  3114 ;;      Temps:          1       0       0       0       0       0
  3115 ;;      Totals:         3       0       0       0       0       0
  3116 ;;Total ram usage:        3 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_AEHA
  3122 ;;		_DAIKIN
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           
  3127                           ;psect for function _recv_reader
  3128  05E8                     _recv_reader:	
  3129  05E8                     l1631:	
  3130                           ;incstack = 0
  3131                           ; Regs used in _recv_reader: [wreg+status,2]
  3132                           
  3133                           
  3134                           ;main.c: 144: int width = 0;
  3135  05E8  01F1               	clrf	recv_reader@width
  3136  05E9  01F2               	clrf	recv_reader@width+1
  3137                           
  3138                           ;main.c: 145: while(PORTAbits.RA1 == 0){
  3139  05EA  2DF3               	goto	l1635
  3140  05EB                     l1633:	
  3141                           
  3142                           ;main.c: 146: width++;
  3143  05EB  3001               	movlw	1
  3144  05EC  07F1               	addwf	recv_reader@width,f
  3145  05ED  3000               	movlw	0
  3146  05EE  3DF2               	addwfc	recv_reader@width+1,f
  3147                           
  3148                           ;main.c: 147: _delay((unsigned long)((5)*(32000000/4000000.0)));
  3149  05EF  300D               	movlw	13
  3150  05F0                     u1077:	
  3151  05F0  0B89               	decfsz	9,f
  3152  05F1  2DF0               	goto	u1077
  3153  05F2  0000               	nop
  3154  05F3                     l1635:	
  3155  05F3  0020               	movlb	0	; select bank0
  3156  05F4  1C8C               	btfss	12,1	;volatile
  3157  05F5  2DF7               	goto	u841
  3158  05F6  2DF8               	goto	u840
  3159  05F7                     u841:	
  3160  05F7  2DEB               	goto	l1633
  3161  05F8                     u840:	
  3162  05F8                     l1637:	
  3163                           
  3164                           ;main.c: 148: };main.c: 150: if(width > 800){
  3165  05F8  0872               	movf	recv_reader@width+1,w
  3166  05F9  3A80               	xorlw	128
  3167  05FA  00F0               	movwf	??_recv_reader
  3168  05FB  3083               	movlw	131
  3169  05FC  0270               	subwf	??_recv_reader,w
  3170  05FD  1D03               	skipz
  3171  05FE  2E01               	goto	u855
  3172  05FF  3021               	movlw	33
  3173  0600  0271               	subwf	recv_reader@width,w
  3174  0601                     u855:	
  3175  0601  1C03               	skipc
  3176  0602  2E04               	goto	u851
  3177  0603  2E05               	goto	u850
  3178  0604                     u851:	
  3179  0604  2E06               	goto	l1641
  3180  0605                     u850:	
  3181  0605  2E24               	goto	l248
  3182  0606                     l1641:	
  3183                           
  3184                           ;main.c: 152: };main.c: 154: width = 0;
  3185  0606  01F1               	clrf	recv_reader@width
  3186  0607  01F2               	clrf	recv_reader@width+1
  3187                           
  3188                           ;main.c: 155: while(PORTAbits.RA1 == 1){
  3189  0608  2E1F               	goto	l249
  3190  0609                     l1643:	
  3191                           
  3192                           ;main.c: 156: width++;
  3193  0609  3001               	movlw	1
  3194  060A  07F1               	addwf	recv_reader@width,f
  3195  060B  3000               	movlw	0
  3196  060C  3DF2               	addwfc	recv_reader@width+1,f
  3197                           
  3198                           ;main.c: 157: _delay((unsigned long)((5)*(32000000/4000000.0)));
  3199  060D  300D               	movlw	13
  3200  060E                     u1087:	
  3201  060E  0B89               	decfsz	9,f
  3202  060F  2E0E               	goto	u1087
  3203  0610  0000               	nop
  3204                           
  3205                           ;main.c: 159: if(width > 500){
  3206  0611  0872               	movf	recv_reader@width+1,w
  3207  0612  3A80               	xorlw	128
  3208  0613  00F0               	movwf	??_recv_reader
  3209  0614  3081               	movlw	129
  3210  0615  0270               	subwf	??_recv_reader,w
  3211  0616  1D03               	skipz
  3212  0617  2E1A               	goto	u865
  3213  0618  30F5               	movlw	245
  3214  0619  0271               	subwf	recv_reader@width,w
  3215  061A                     u865:	
  3216  061A  1C03               	skipc
  3217  061B  2E1D               	goto	u861
  3218  061C  2E1E               	goto	u860
  3219  061D                     u861:	
  3220  061D  2E1F               	goto	l249
  3221  061E                     u860:	
  3222  061E  2E24               	goto	l248
  3223  061F                     l249:	
  3224  061F  0020               	movlb	0	; select bank0
  3225  0620  188C               	btfsc	12,1	;volatile
  3226  0621  2E23               	goto	u871
  3227  0622  2E24               	goto	u870
  3228  0623                     u871:	
  3229  0623  2E09               	goto	l1643
  3230  0624                     u870:	
  3231  0624                     l248:	
  3232  0624  0008               	return
  3233  0625                     __end_of_recv_reader:	
  3234                           
  3235                           	psect	text19
  3236  04D6                     __ptext19:	
  3237 ;; *************** function _recv_data *****************
  3238 ;; Defined at:
  3239 ;;		line 170 in file "main.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  size            1    wreg     unsigned char 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  size            1    4[COMMON] unsigned char 
  3244 ;;  a               1    6[COMMON] unsigned char 
  3245 ;;  i               1    5[COMMON] unsigned char 
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg, status,2, status,0, pclath, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3255 ;;      Params:         0       0       0       0       0       0
  3256 ;;      Locals:         3       0       0       0       0       0
  3257 ;;      Temps:          1       0       0       0       0       0
  3258 ;;      Totals:         4       0       0       0       0       0
  3259 ;;Total ram usage:        4 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    2
  3262 ;; This function calls:
  3263 ;;		_bit_find
  3264 ;;		_putch
  3265 ;; This function is called by:
  3266 ;;		_AEHA
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           
  3271                           ;psect for function _recv_data
  3272  04D6                     _recv_data:	
  3273                           
  3274                           ;incstack = 0
  3275                           ; Regs used in _recv_data: [wreg+status,2+status,0+pclath+cstack]
  3276                           ;recv_data@size stored from wreg
  3277  04D6  00F4               	movwf	recv_data@size
  3278  04D7                     l1647:	
  3279                           
  3280                           ;main.c: 171: uint8_t i;;main.c: 172: for(i = 0; i < size; i++){
  3281  04D7  01F5               	clrf	recv_data@i
  3282  04D8  2CF5               	goto	l1659
  3283  04D9                     l1649:	
  3284                           
  3285                           ;main.c: 173: uint8_t a = bit_find();
  3286  04D9  3186  2625  3184   	fcall	_bit_find
  3287  04DC  00F3               	movwf	??_recv_data
  3288  04DD  0873               	movf	??_recv_data,w
  3289  04DE  00F6               	movwf	recv_data@a
  3290  04DF                     l1651:	
  3291                           
  3292                           ;main.c: 174: putch(a + '0');
  3293  04DF  0876               	movf	recv_data@a,w
  3294  04E0  3E30               	addlw	48
  3295  04E1  3184  243D  3184   	fcall	_putch
  3296  04E4                     l1653:	
  3297                           
  3298                           ;main.c: 175: if(a == 3 || a == 2) break;
  3299  04E4  3003               	movlw	3
  3300  04E5  0676               	xorwf	recv_data@a,w
  3301  04E6  1903               	btfsc	3,2
  3302  04E7  2CE9               	goto	u881
  3303  04E8  2CEA               	goto	u880
  3304  04E9                     u881:	
  3305  04E9  2CFB               	goto	l261
  3306  04EA                     u880:	
  3307  04EA                     l1655:	
  3308  04EA  3002               	movlw	2
  3309  04EB  0676               	xorwf	recv_data@a,w
  3310  04EC  1D03               	btfss	3,2
  3311  04ED  2CEF               	goto	u891
  3312  04EE  2CF0               	goto	u890
  3313  04EF                     u891:	
  3314  04EF  2CF1               	goto	l1657
  3315  04F0                     u890:	
  3316  04F0  2CFB               	goto	l261
  3317  04F1                     l1657:	
  3318  04F1  3001               	movlw	1
  3319  04F2  00F3               	movwf	??_recv_data
  3320  04F3  0873               	movf	??_recv_data,w
  3321  04F4  07F5               	addwf	recv_data@i,f
  3322  04F5                     l1659:	
  3323  04F5  0874               	movf	recv_data@size,w
  3324  04F6  0275               	subwf	recv_data@i,w
  3325  04F7  1C03               	skipc
  3326  04F8  2CFA               	goto	u901
  3327  04F9  2CFB               	goto	u900
  3328  04FA                     u901:	
  3329  04FA  2CD9               	goto	l1649
  3330  04FB                     u900:	
  3331  04FB                     l261:	
  3332  04FB  0008               	return
  3333  04FC                     __end_of_recv_data:	
  3334                           
  3335                           	psect	text20
  3336  0625                     __ptext20:	
  3337 ;; *************** function _bit_find *****************
  3338 ;; Defined at:
  3339 ;;		line 210 in file "main.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;		None
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  width           2    1[COMMON] int 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  1    wreg      unsigned char 
  3346 ;; Registers used:
  3347 ;;		wreg, status,2
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3353 ;;      Params:         0       0       0       0       0       0
  3354 ;;      Locals:         2       0       0       0       0       0
  3355 ;;      Temps:          1       0       0       0       0       0
  3356 ;;      Totals:         3       0       0       0       0       0
  3357 ;;Total ram usage:        3 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_recv_data
  3363 ;;		_recv_daikin_reader
  3364 ;;		_recv_daikin_frame
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           
  3369                           ;psect for function _bit_find
  3370  0625                     _bit_find:	
  3371  0625                     l1567:	
  3372                           ;incstack = 0
  3373                           ; Regs used in _bit_find: [wreg+status,2]
  3374                           
  3375                           
  3376                           ;main.c: 211: int width = 0;
  3377  0625  01F1               	clrf	bit_find@width
  3378  0626  01F2               	clrf	bit_find@width+1
  3379                           
  3380                           ;main.c: 212: while(PORTAbits.RA1 == 0){
  3381  0627  2E30               	goto	l1571
  3382  0628                     l1569:	
  3383                           
  3384                           ;main.c: 213: width++;
  3385  0628  3001               	movlw	1
  3386  0629  07F1               	addwf	bit_find@width,f
  3387  062A  3000               	movlw	0
  3388  062B  3DF2               	addwfc	bit_find@width+1,f
  3389                           
  3390                           ;main.c: 214: _delay((unsigned long)((5)*(32000000/4000000.0)));
  3391  062C  300D               	movlw	13
  3392  062D                     u1097:	
  3393  062D  0B89               	decfsz	9,f
  3394  062E  2E2D               	goto	u1097
  3395  062F  0000               	nop
  3396  0630                     l1571:	
  3397  0630  0020               	movlb	0	; select bank0
  3398  0631  1C8C               	btfss	12,1	;volatile
  3399  0632  2E34               	goto	u791
  3400  0633  2E35               	goto	u790
  3401  0634                     u791:	
  3402  0634  2E28               	goto	l1569
  3403  0635                     u790:	
  3404  0635                     l1573:	
  3405                           
  3406                           ;main.c: 215: };main.c: 224: width = 0;
  3407  0635  01F1               	clrf	bit_find@width
  3408  0636  01F2               	clrf	bit_find@width+1
  3409                           
  3410                           ;main.c: 225: while(PORTAbits.RA1 == 1){
  3411  0637  2E4F               	goto	l281
  3412  0638                     l1575:	
  3413                           
  3414                           ;main.c: 226: width++;
  3415  0638  3001               	movlw	1
  3416  0639  07F1               	addwf	bit_find@width,f
  3417  063A  3000               	movlw	0
  3418  063B  3DF2               	addwfc	bit_find@width+1,f
  3419                           
  3420                           ;main.c: 227: _delay((unsigned long)((5)*(32000000/4000000.0)));
  3421  063C  300D               	movlw	13
  3422  063D                     u1107:	
  3423  063D  0B89               	decfsz	9,f
  3424  063E  2E3D               	goto	u1107
  3425  063F  0000               	nop
  3426                           
  3427                           ;main.c: 229: if(width > 300){
  3428  0640  0872               	movf	bit_find@width+1,w
  3429  0641  3A80               	xorlw	128
  3430  0642  00F0               	movwf	??_bit_find
  3431  0643  3081               	movlw	129
  3432  0644  0270               	subwf	??_bit_find,w
  3433  0645  1D03               	skipz
  3434  0646  2E49               	goto	u805
  3435  0647  302D               	movlw	45
  3436  0648  0271               	subwf	bit_find@width,w
  3437  0649                     u805:	
  3438  0649  1C03               	skipc
  3439  064A  2E4C               	goto	u801
  3440  064B  2E4D               	goto	u800
  3441  064C                     u801:	
  3442  064C  2E4F               	goto	l281
  3443  064D                     u800:	
  3444  064D                     l1577:	
  3445                           
  3446                           ;main.c: 230: return 3;
  3447  064D  3003               	movlw	3
  3448  064E  2E64               	goto	l284
  3449  064F                     l281:	
  3450  064F  0020               	movlb	0	; select bank0
  3451  0650  188C               	btfsc	12,1	;volatile
  3452  0651  2E53               	goto	u811
  3453  0652  2E54               	goto	u810
  3454  0653                     u811:	
  3455  0653  2E38               	goto	l1575
  3456  0654                     u810:	
  3457  0654                     l1581:	
  3458                           
  3459                           ;main.c: 231: };main.c: 232: };main.c: 234: if(width < 100){
  3460  0654  0872               	movf	bit_find@width+1,w
  3461  0655  3A80               	xorlw	128
  3462  0656  00F0               	movwf	??_bit_find
  3463  0657  3080               	movlw	128
  3464  0658  0270               	subwf	??_bit_find,w
  3465  0659  1D03               	skipz
  3466  065A  2E5D               	goto	u825
  3467  065B  3064               	movlw	100
  3468  065C  0271               	subwf	bit_find@width,w
  3469  065D                     u825:	
  3470  065D  1803               	skipnc
  3471  065E  2E60               	goto	u821
  3472  065F  2E61               	goto	u820
  3473  0660                     u821:	
  3474  0660  2E63               	goto	l1589
  3475  0661                     u820:	
  3476  0661                     l1583:	
  3477                           
  3478                           ;main.c: 235: return 0;
  3479  0661  3000               	movlw	0
  3480  0662  2E64               	goto	l284
  3481  0663                     l1589:	
  3482                           
  3483                           ;main.c: 237: return 1;
  3484  0663  3001               	movlw	1
  3485  0664                     l284:	
  3486  0664  0008               	return
  3487  0665                     __end_of_bit_find:	
  3488                           
  3489                           	psect	text21
  3490  0733                     __ptext21:	
  3491 ;; *************** function _printf *****************
  3492 ;; Defined at:
  3493 ;;		line 477 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  3496 ;;		 -> STR_12(3), STR_11(3), STR_10(32), STR_9(14), 
  3497 ;;		 -> STR_8(16), STR_7(14), STR_6(13), STR_5(50), 
  3498 ;;		 -> STR_4(32), STR_3(27), STR_2(33), STR_1(6), 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;  tmpval          4    0        struct .
  3501 ;;  val             2   11[BANK0 ] unsigned int 
  3502 ;;  cp              2    0        PTR const unsigned char 
  3503 ;;  len             2    0        unsigned int 
  3504 ;;  c               1   13[BANK0 ] unsigned char 
  3505 ;;  prec            1   10[BANK0 ] char 
  3506 ;;  flag            1    9[BANK0 ] unsigned char 
  3507 ;;  ap              1    8[BANK0 ] PTR void [1]
  3508 ;;		 -> ?_printf(2), 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  2    0[BANK0 ] int 
  3511 ;; Registers used:
  3512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3518 ;;      Params:         0       4       0       0       0       0
  3519 ;;      Locals:         0       6       0       0       0       0
  3520 ;;      Temps:          0       4       0       0       0       0
  3521 ;;      Totals:         0      14       0       0       0       0
  3522 ;;Total ram usage:       14 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    2
  3525 ;; This function calls:
  3526 ;;		___lwdiv
  3527 ;;		___lwmod
  3528 ;;		_putch
  3529 ;; This function is called by:
  3530 ;;		_main
  3531 ;;		_detect_mode
  3532 ;;		_AEHA
  3533 ;;		_recv_daikin_reader
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           
  3538                           ;psect for function _printf
  3539  0733                     _printf:	
  3540  0733                     l1519:	
  3541                           ;incstack = 0
  3542                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3543                           
  3544                           
  3545                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  3546  0733  3022               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3547  0734  0020               	movlb	0	; select bank0
  3548  0735  00A4               	movwf	??_printf
  3549  0736  0824               	movf	??_printf,w
  3550  0737  00A8               	movwf	printf@ap
  3551                           
  3552                           ;doprnt.c: 553: while((c = *f++)) {
  3553  0738  2FDF               	goto	l1565
  3554  0739                     l1521:	
  3555                           
  3556                           ;doprnt.c: 555: if(c != '%')
  3557  0739  3025               	movlw	37
  3558  073A  062D               	xorwf	printf@c,w
  3559  073B  1903               	btfsc	3,2
  3560  073C  2F3E               	goto	u721
  3561  073D  2F3F               	goto	u720
  3562  073E                     u721:	
  3563  073E  2F44               	goto	l1525
  3564  073F                     u720:	
  3565  073F                     l1523:	
  3566                           
  3567                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  3568  073F  082D               	movf	printf@c,w
  3569  0740  3184  243D  3187   	fcall	_putch
  3570                           
  3571                           ;doprnt.c: 559: continue;
  3572  0743  2FDF               	goto	l1565
  3573  0744                     l1525:	
  3574                           
  3575                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  3576  0744  01A9               	clrf	printf@flag
  3577  0745                     l1529:	
  3578                           ;doprnt.c: 661: switch(c = *f++) {
  3579                           
  3580  0745  0821               	movf	printf@f+1,w
  3581  0746  00A5               	movwf	??_printf+1
  3582  0747  0820               	movf	printf@f,w
  3583  0748  00A4               	movwf	??_printf
  3584  0749  0AA0               	incf	printf@f,f
  3585  074A  1903               	skipnz
  3586  074B  0AA1               	incf	printf@f+1,f
  3587  074C  0824               	movf	??_printf,w
  3588  074D  0084               	movwf	4
  3589  074E  0825               	movf	??_printf+1,w
  3590  074F  0085               	movwf	5
  3591  0750  0800               	movf	0,w	;code access
  3592  0751  00AD               	movwf	printf@c
  3593                           
  3594                           ; Switch size 1, requested type "simple"
  3595                           ; Number of cases is 3, Range of values is 0 to 105
  3596                           ; switch strategies available:
  3597                           ; Name         Instructions Cycles
  3598                           ; simple_byte           10     6 (average)
  3599                           ; direct_byte          218     6 (fixed)
  3600                           ; jumptable            260     6 (fixed)
  3601                           ;	Chosen strategy is simple_byte
  3602  0752  3A00               	xorlw	0	; case 0
  3603  0753  1903               	skipnz
  3604  0754  2FF4               	goto	l515
  3605  0755  3A64               	xorlw	100	; case 100
  3606  0756  1903               	skipnz
  3607  0757  2F5C               	goto	l1531
  3608  0758  3A0D               	xorlw	13	; case 105
  3609  0759  1903               	skipnz
  3610  075A  2F5C               	goto	l1531
  3611  075B  2FDF               	goto	l1565
  3612  075C                     l1531:	
  3613                           
  3614                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3615  075C  0828               	movf	printf@ap,w
  3616  075D  0086               	movwf	6
  3617  075E  0187               	clrf	7
  3618  075F  3F40               	moviw [0]fsr1
  3619  0760  00AB               	movwf	printf@val
  3620  0761  3F41               	moviw [1]fsr1
  3621  0762  00AC               	movwf	printf@val+1
  3622  0763                     l1533:	
  3623  0763  3002               	movlw	2
  3624  0764  00A4               	movwf	??_printf
  3625  0765  0824               	movf	??_printf,w
  3626  0766  07A8               	addwf	printf@ap,f
  3627  0767                     l1535:	
  3628                           
  3629                           ;doprnt.c: 1287: if((int)val < 0) {
  3630  0767  1FAC               	btfss	printf@val+1,7
  3631  0768  2F6A               	goto	u731
  3632  0769  2F6B               	goto	u730
  3633  076A                     u731:	
  3634  076A  2F74               	goto	l1541
  3635  076B                     u730:	
  3636  076B                     l1537:	
  3637                           
  3638                           ;doprnt.c: 1288: flag |= 0x03;
  3639  076B  3003               	movlw	3
  3640  076C  00A4               	movwf	??_printf
  3641  076D  0824               	movf	??_printf,w
  3642  076E  04A9               	iorwf	printf@flag,f
  3643  076F                     l1539:	
  3644                           
  3645                           ;doprnt.c: 1289: val = -val;
  3646  076F  09AB               	comf	printf@val,f
  3647  0770  09AC               	comf	printf@val+1,f
  3648  0771  0AAB               	incf	printf@val,f
  3649  0772  1903               	skipnz
  3650  0773  0AAC               	incf	printf@val+1,f
  3651  0774                     l1541:	
  3652                           
  3653                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  3654  0774  01AD               	clrf	printf@c
  3655  0775  0AAD               	incf	printf@c,f
  3656  0776                     l1547:	
  3657                           
  3658                           ;doprnt.c: 1332: if(val < dpowers[c])
  3659  0776  082D               	movf	printf@c,w
  3660  0777  00A4               	movwf	??_printf
  3661  0778  01A5               	clrf	??_printf+1
  3662  0779  35A4               	lslf	??_printf,f
  3663  077A  0DA5               	rlf	??_printf+1,f
  3664  077B  3000               	movlw	low (_dpowers| (0+32768))
  3665  077C  0724               	addwf	??_printf,w
  3666  077D  0084               	movwf	4
  3667  077E  3088               	movlw	high (_dpowers| (0+32768))
  3668  077F  3D25               	addwfc	??_printf+1,w
  3669  0780  0085               	movwf	5
  3670  0781  3F00               	moviw [0]fsr0
  3671  0782  00A6               	movwf	??_printf+2
  3672  0783  3F01               	moviw [1]fsr0
  3673  0784  00A7               	movwf	??_printf+3
  3674  0785  0827               	movf	??_printf+3,w
  3675  0786  022C               	subwf	printf@val+1,w
  3676  0787  1D03               	skipz
  3677  0788  2F8B               	goto	u745
  3678  0789  0826               	movf	??_printf+2,w
  3679  078A  022B               	subwf	printf@val,w
  3680  078B                     u745:	
  3681  078B  1803               	skipnc
  3682  078C  2F8E               	goto	u741
  3683  078D  2F8F               	goto	u740
  3684  078E                     u741:	
  3685  078E  2F90               	goto	l1551
  3686  078F                     u740:	
  3687  078F  2F9A               	goto	l1553
  3688  0790                     l1551:	
  3689  0790  3001               	movlw	1
  3690  0791  00A4               	movwf	??_printf
  3691  0792  0824               	movf	??_printf,w
  3692  0793  07AD               	addwf	printf@c,f
  3693  0794  3005               	movlw	5
  3694  0795  062D               	xorwf	printf@c,w
  3695  0796  1D03               	btfss	3,2
  3696  0797  2F99               	goto	u751
  3697  0798  2F9A               	goto	u750
  3698  0799                     u751:	
  3699  0799  2F76               	goto	l1547
  3700  079A                     u750:	
  3701  079A                     l1553:	
  3702                           
  3703                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  3704  079A  0829               	movf	printf@flag,w
  3705  079B  3903               	andlw	3
  3706  079C  1903               	btfsc	3,2
  3707  079D  2F9F               	goto	u761
  3708  079E  2FA0               	goto	u760
  3709  079F                     u761:	
  3710  079F  2FA4               	goto	l1557
  3711  07A0                     u760:	
  3712  07A0                     l1555:	
  3713                           
  3714                           ;doprnt.c: 1465: (putch('-') );
  3715  07A0  302D               	movlw	45
  3716  07A1  3184  243D  3187   	fcall	_putch
  3717  07A4                     l1557:	
  3718                           
  3719                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3720  07A4  0020               	movlb	0	; select bank0
  3721  07A5  082D               	movf	printf@c,w
  3722  07A6  00A4               	movwf	??_printf
  3723  07A7  0824               	movf	??_printf,w
  3724  07A8  00AA               	movwf	printf@prec
  3725                           
  3726                           ;doprnt.c: 1500: while(prec--) {
  3727  07A9  2FD5               	goto	l1563
  3728  07AA                     l1559:	
  3729                           
  3730                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  3731  07AA  300A               	movlw	10
  3732  07AB  00F8               	movwf	___lwmod@divisor
  3733  07AC  3000               	movlw	0
  3734  07AD  00F9               	movwf	___lwmod@divisor+1
  3735  07AE  082A               	movf	printf@prec,w
  3736  07AF  00A4               	movwf	??_printf
  3737  07B0  01A5               	clrf	??_printf+1
  3738  07B1  35A4               	lslf	??_printf,f
  3739  07B2  0DA5               	rlf	??_printf+1,f
  3740  07B3  3000               	movlw	low (_dpowers| (0+32768))
  3741  07B4  0724               	addwf	??_printf,w
  3742  07B5  0084               	movwf	4
  3743  07B6  3088               	movlw	high (_dpowers| (0+32768))
  3744  07B7  3D25               	addwfc	??_printf+1,w
  3745  07B8  0085               	movwf	5
  3746  07B9  3F00               	moviw [0]fsr0
  3747  07BA  00F0               	movwf	___lwdiv@divisor
  3748  07BB  3F01               	moviw [1]fsr0
  3749  07BC  00F1               	movwf	___lwdiv@divisor+1
  3750  07BD  082C               	movf	printf@val+1,w
  3751  07BE  00F3               	movwf	___lwdiv@dividend+1
  3752  07BF  082B               	movf	printf@val,w
  3753  07C0  00F2               	movwf	___lwdiv@dividend
  3754  07C1  3185  25AC  3187   	fcall	___lwdiv
  3755  07C4  0871               	movf	?___lwdiv+1,w
  3756  07C5  00FB               	movwf	___lwmod@dividend+1
  3757  07C6  0870               	movf	?___lwdiv,w
  3758  07C7  00FA               	movwf	___lwmod@dividend
  3759  07C8  3185  2578  3187   	fcall	___lwmod
  3760  07CB  0878               	movf	?___lwmod,w
  3761  07CC  3E30               	addlw	48
  3762  07CD  0020               	movlb	0	; select bank0
  3763  07CE  00A6               	movwf	??_printf+2
  3764  07CF  0826               	movf	??_printf+2,w
  3765  07D0  00AD               	movwf	printf@c
  3766  07D1                     l1561:	
  3767                           
  3768                           ;doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  3769  07D1  082D               	movf	printf@c,w
  3770  07D2  3184  243D  3187   	fcall	_putch
  3771  07D5                     l1563:	
  3772  07D5  30FF               	movlw	255
  3773  07D6  0020               	movlb	0	; select bank0
  3774  07D7  00A4               	movwf	??_printf
  3775  07D8  0824               	movf	??_printf,w
  3776  07D9  07AA               	addwf	printf@prec,f
  3777  07DA  0A2A               	incf	printf@prec,w
  3778  07DB  1D03               	btfss	3,2
  3779  07DC  2FDE               	goto	u771
  3780  07DD  2FDF               	goto	u770
  3781  07DE                     u771:	
  3782  07DE  2FAA               	goto	l1559
  3783  07DF                     u770:	
  3784  07DF                     l1565:	
  3785  07DF  0020               	movlb	0	; select bank0
  3786  07E0  0821               	movf	printf@f+1,w
  3787  07E1  00A5               	movwf	??_printf+1
  3788  07E2  0820               	movf	printf@f,w
  3789  07E3  00A4               	movwf	??_printf
  3790  07E4  0AA0               	incf	printf@f,f
  3791  07E5  1903               	skipnz
  3792  07E6  0AA1               	incf	printf@f+1,f
  3793  07E7  0824               	movf	??_printf,w
  3794  07E8  0084               	movwf	4
  3795  07E9  0825               	movf	??_printf+1,w
  3796  07EA  0085               	movwf	5
  3797  07EB  0800               	movf	0,w	;code access
  3798  07EC  00A6               	movwf	??_printf+2
  3799  07ED  0826               	movf	??_printf+2,w
  3800  07EE  00AD               	movwf	printf@c
  3801  07EF  082D               	movf	printf@c,w
  3802  07F0  1D03               	btfss	3,2
  3803  07F1  2FF3               	goto	u781
  3804  07F2  2FF4               	goto	u780
  3805  07F3                     u781:	
  3806  07F3  2F39               	goto	l1521
  3807  07F4                     u780:	
  3808  07F4                     l515:	
  3809  07F4  0008               	return
  3810  07F5                     __end_of_printf:	
  3811                           
  3812                           	psect	text22
  3813  043D                     __ptext22:	
  3814 ;; *************** function _putch *****************
  3815 ;; Defined at:
  3816 ;;		line 30 in file "main.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  data            1    wreg     unsigned char 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  data            1    1[COMMON] unsigned char 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		wreg, status,2, status,0, pclath, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3830 ;;      Params:         0       0       0       0       0       0
  3831 ;;      Locals:         1       0       0       0       0       0
  3832 ;;      Temps:          0       0       0       0       0       0
  3833 ;;      Totals:         1       0       0       0       0       0
  3834 ;;Total ram usage:        1 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:    1
  3837 ;; This function calls:
  3838 ;;		_EUSART_Write
  3839 ;; This function is called by:
  3840 ;;		_AEHA
  3841 ;;		_DAIKIN
  3842 ;;		_recv_data
  3843 ;;		_recv_daikin_reader
  3844 ;;		_recv_daikin_frame
  3845 ;;		_printf
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           
  3850                           ;psect for function _putch
  3851  043D                     _putch:	
  3852                           
  3853                           ;incstack = 0
  3854                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3855                           ;putch@data stored from wreg
  3856  043D  00F1               	movwf	putch@data
  3857  043E                     l1451:	
  3858                           
  3859                           ;main.c: 31: EUSART_Write(data);
  3860  043E  0871               	movf	putch@data,w
  3861  043F  3184  2455  3184   	fcall	_EUSART_Write
  3862  0442                     l185:	
  3863  0442  0008               	return
  3864  0443                     __end_of_putch:	
  3865                           
  3866                           	psect	text23
  3867  0455                     __ptext23:	
  3868 ;; *************** function _EUSART_Write *****************
  3869 ;; Defined at:
  3870 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  txData          1    wreg     unsigned char 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  txData          1    0[COMMON] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3884 ;;      Params:         0       0       0       0       0       0
  3885 ;;      Locals:         1       0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0
  3887 ;;      Totals:         1       0       0       0       0       0
  3888 ;;Total ram usage:        1 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_putch
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           
  3898                           ;psect for function _EUSART_Write
  3899  0455                     _EUSART_Write:	
  3900                           
  3901                           ;incstack = 0
  3902                           ; Regs used in _EUSART_Write: [wreg]
  3903                           ;EUSART_Write@txData stored from wreg
  3904  0455  00F0               	movwf	EUSART_Write@txData
  3905  0456                     l1447:	
  3906  0456                     l67:	
  3907                           ;eusart.c: 135: {
  3908                           
  3909  0456  0020               	movlb	0	; select bank0
  3910  0457  1E11               	btfss	17,4	;volatile
  3911  0458  2C5A               	goto	u561
  3912  0459  2C5B               	goto	u560
  3913  045A                     u561:	
  3914  045A  2C56               	goto	l67
  3915  045B                     u560:	
  3916  045B                     l1449:	
  3917                           
  3918                           ;eusart.c: 136: };eusart.c: 138: TXREG = txData;
  3919  045B  0870               	movf	EUSART_Write@txData,w
  3920  045C  0023               	movlb	3	; select bank3
  3921  045D  009A               	movwf	26	;volatile
  3922  045E                     l70:	
  3923  045E  0008               	return
  3924  045F                     __end_of_EUSART_Write:	
  3925                           
  3926                           	psect	text24
  3927  0578                     __ptext24:	
  3928 ;; *************** function ___lwmod *****************
  3929 ;; Defined at:
  3930 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  divisor         2    8[COMMON] unsigned int 
  3933 ;;  dividend        2   10[COMMON] unsigned int 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  counter         1   13[COMMON] unsigned char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  2    8[COMMON] unsigned int 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3945 ;;      Params:         4       0       0       0       0       0
  3946 ;;      Locals:         1       0       0       0       0       0
  3947 ;;      Temps:          1       0       0       0       0       0
  3948 ;;      Totals:         6       0       0       0       0       0
  3949 ;;Total ram usage:        6 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_printf
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           
  3959                           ;psect for function ___lwmod
  3960  0578                     ___lwmod:	
  3961  0578                     l1479:	
  3962                           ;incstack = 0
  3963                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3964                           
  3965  0578  0878               	movf	___lwmod@divisor,w
  3966  0579  0479               	iorwf	___lwmod@divisor+1,w
  3967  057A  1903               	btfsc	3,2
  3968  057B  2D7D               	goto	u641
  3969  057C  2D7E               	goto	u640
  3970  057D                     u641:	
  3971  057D  2DA7               	goto	l1497
  3972  057E                     u640:	
  3973  057E                     l1481:	
  3974  057E  01FD               	clrf	___lwmod@counter
  3975  057F  0AFD               	incf	___lwmod@counter,f
  3976  0580  2D8A               	goto	l1487
  3977  0581                     l1483:	
  3978  0581  3001               	movlw	1
  3979  0582                     u655:	
  3980  0582  35F8               	lslf	___lwmod@divisor,f
  3981  0583  0DF9               	rlf	___lwmod@divisor+1,f
  3982  0584  0B89               	decfsz	9,f
  3983  0585  2D82               	goto	u655
  3984  0586                     l1485:	
  3985  0586  3001               	movlw	1
  3986  0587  00FC               	movwf	??___lwmod
  3987  0588  087C               	movf	??___lwmod,w
  3988  0589  07FD               	addwf	___lwmod@counter,f
  3989  058A                     l1487:	
  3990  058A  1FF9               	btfss	___lwmod@divisor+1,7
  3991  058B  2D8D               	goto	u661
  3992  058C  2D8E               	goto	u660
  3993  058D                     u661:	
  3994  058D  2D81               	goto	l1483
  3995  058E                     u660:	
  3996  058E                     l1489:	
  3997  058E  0879               	movf	___lwmod@divisor+1,w
  3998  058F  027B               	subwf	___lwmod@dividend+1,w
  3999  0590  1D03               	skipz
  4000  0591  2D94               	goto	u675
  4001  0592  0878               	movf	___lwmod@divisor,w
  4002  0593  027A               	subwf	___lwmod@dividend,w
  4003  0594                     u675:	
  4004  0594  1C03               	skipc
  4005  0595  2D97               	goto	u671
  4006  0596  2D98               	goto	u670
  4007  0597                     u671:	
  4008  0597  2D9C               	goto	l1493
  4009  0598                     u670:	
  4010  0598                     l1491:	
  4011  0598  0878               	movf	___lwmod@divisor,w
  4012  0599  02FA               	subwf	___lwmod@dividend,f
  4013  059A  0879               	movf	___lwmod@divisor+1,w
  4014  059B  3BFB               	subwfb	___lwmod@dividend+1,f
  4015  059C                     l1493:	
  4016  059C  3001               	movlw	1
  4017  059D                     u685:	
  4018  059D  36F9               	lsrf	___lwmod@divisor+1,f
  4019  059E  0CF8               	rrf	___lwmod@divisor,f
  4020  059F  0B89               	decfsz	9,f
  4021  05A0  2D9D               	goto	u685
  4022  05A1                     l1495:	
  4023  05A1  3001               	movlw	1
  4024  05A2  02FD               	subwf	___lwmod@counter,f
  4025  05A3  1D03               	btfss	3,2
  4026  05A4  2DA6               	goto	u691
  4027  05A5  2DA7               	goto	u690
  4028  05A6                     u691:	
  4029  05A6  2D8E               	goto	l1489
  4030  05A7                     u690:	
  4031  05A7                     l1497:	
  4032  05A7  087B               	movf	___lwmod@dividend+1,w
  4033  05A8  00F9               	movwf	?___lwmod+1
  4034  05A9  087A               	movf	___lwmod@dividend,w
  4035  05AA  00F8               	movwf	?___lwmod
  4036  05AB                     l801:	
  4037  05AB  0008               	return
  4038  05AC                     __end_of___lwmod:	
  4039                           
  4040                           	psect	text25
  4041  05AC                     __ptext25:	
  4042 ;; *************** function ___lwdiv *****************
  4043 ;; Defined at:
  4044 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  divisor         2    0[COMMON] unsigned int 
  4047 ;;  dividend        2    2[COMMON] unsigned int 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  quotient        2    5[COMMON] unsigned int 
  4050 ;;  counter         1    7[COMMON] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  2    0[COMMON] unsigned int 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4060 ;;      Params:         4       0       0       0       0       0
  4061 ;;      Locals:         3       0       0       0       0       0
  4062 ;;      Temps:          1       0       0       0       0       0
  4063 ;;      Totals:         8       0       0       0       0       0
  4064 ;;Total ram usage:        8 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_printf
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           
  4074                           ;psect for function ___lwdiv
  4075  05AC                     ___lwdiv:	
  4076  05AC                     l1453:	
  4077                           ;incstack = 0
  4078                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4079                           
  4080  05AC  01F5               	clrf	___lwdiv@quotient
  4081  05AD  01F6               	clrf	___lwdiv@quotient+1
  4082  05AE                     l1455:	
  4083  05AE  0870               	movf	___lwdiv@divisor,w
  4084  05AF  0471               	iorwf	___lwdiv@divisor+1,w
  4085  05B0  1903               	btfsc	3,2
  4086  05B1  2DB3               	goto	u571
  4087  05B2  2DB4               	goto	u570
  4088  05B3                     u571:	
  4089  05B3  2DE3               	goto	l1475
  4090  05B4                     u570:	
  4091  05B4                     l1457:	
  4092  05B4  01F7               	clrf	___lwdiv@counter
  4093  05B5  0AF7               	incf	___lwdiv@counter,f
  4094  05B6  2DC0               	goto	l1463
  4095  05B7                     l1459:	
  4096  05B7  3001               	movlw	1
  4097  05B8                     u585:	
  4098  05B8  35F0               	lslf	___lwdiv@divisor,f
  4099  05B9  0DF1               	rlf	___lwdiv@divisor+1,f
  4100  05BA  0B89               	decfsz	9,f
  4101  05BB  2DB8               	goto	u585
  4102  05BC                     l1461:	
  4103  05BC  3001               	movlw	1
  4104  05BD  00F4               	movwf	??___lwdiv
  4105  05BE  0874               	movf	??___lwdiv,w
  4106  05BF  07F7               	addwf	___lwdiv@counter,f
  4107  05C0                     l1463:	
  4108  05C0  1FF1               	btfss	___lwdiv@divisor+1,7
  4109  05C1  2DC3               	goto	u591
  4110  05C2  2DC4               	goto	u590
  4111  05C3                     u591:	
  4112  05C3  2DB7               	goto	l1459
  4113  05C4                     u590:	
  4114  05C4                     l1465:	
  4115  05C4  3001               	movlw	1
  4116  05C5                     u605:	
  4117  05C5  35F5               	lslf	___lwdiv@quotient,f
  4118  05C6  0DF6               	rlf	___lwdiv@quotient+1,f
  4119  05C7  0B89               	decfsz	9,f
  4120  05C8  2DC5               	goto	u605
  4121  05C9  0871               	movf	___lwdiv@divisor+1,w
  4122  05CA  0273               	subwf	___lwdiv@dividend+1,w
  4123  05CB  1D03               	skipz
  4124  05CC  2DCF               	goto	u615
  4125  05CD  0870               	movf	___lwdiv@divisor,w
  4126  05CE  0272               	subwf	___lwdiv@dividend,w
  4127  05CF                     u615:	
  4128  05CF  1C03               	skipc
  4129  05D0  2DD2               	goto	u611
  4130  05D1  2DD3               	goto	u610
  4131  05D2                     u611:	
  4132  05D2  2DD8               	goto	l1471
  4133  05D3                     u610:	
  4134  05D3                     l1467:	
  4135  05D3  0870               	movf	___lwdiv@divisor,w
  4136  05D4  02F2               	subwf	___lwdiv@dividend,f
  4137  05D5  0871               	movf	___lwdiv@divisor+1,w
  4138  05D6  3BF3               	subwfb	___lwdiv@dividend+1,f
  4139  05D7                     l1469:	
  4140  05D7  1475               	bsf	___lwdiv@quotient,0
  4141  05D8                     l1471:	
  4142  05D8  3001               	movlw	1
  4143  05D9                     u625:	
  4144  05D9  36F1               	lsrf	___lwdiv@divisor+1,f
  4145  05DA  0CF0               	rrf	___lwdiv@divisor,f
  4146  05DB  0B89               	decfsz	9,f
  4147  05DC  2DD9               	goto	u625
  4148  05DD                     l1473:	
  4149  05DD  3001               	movlw	1
  4150  05DE  02F7               	subwf	___lwdiv@counter,f
  4151  05DF  1D03               	btfss	3,2
  4152  05E0  2DE2               	goto	u631
  4153  05E1  2DE3               	goto	u630
  4154  05E2                     u631:	
  4155  05E2  2DC4               	goto	l1465
  4156  05E3                     u630:	
  4157  05E3                     l1475:	
  4158  05E3  0876               	movf	___lwdiv@quotient+1,w
  4159  05E4  00F1               	movwf	?___lwdiv+1
  4160  05E5  0875               	movf	___lwdiv@quotient,w
  4161  05E6  00F0               	movwf	?___lwdiv
  4162  05E7                     l791:	
  4163  05E7  0008               	return
  4164  05E8                     __end_of___lwdiv:	
  4165  007E                     btemp	set	126	;btemp
  4166  007E                     wtemp0	set	126


Data Sizes:
    Strings     208
    Constant    10
    Data        0
    BSS         7
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      31
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[32]), STR_9(CODE[14]), 
		 -> STR_8(CODE[16]), STR_7(CODE[14]), STR_6(CODE[13]), STR_5(CODE[50]), 
		 -> STR_4(CODE[32]), STR_3(CODE[27]), STR_2(CODE[33]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _recv_daikin_frame->_bit_find
    _recv_data->_bit_find
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_DAIKIN
    _detect_mode->_printf
    _DAIKIN->_recv_daikin_reader
    _recv_daikin_reader->_printf
    _AEHA->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9142
                                             20 BANK0      4     4      0
                               _AEHA
                             _DAIKIN
                                _NEC
                               _SONY
                  _SYSTEM_Initialize
                        _detect_mode
                             _printf
 ---------------------------------------------------------------------------------
 (1) _detect_mode                                          2     2      0    2079
                                             14 BANK0      2     2      0
                              _getch
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getch                                                0     0      0       0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SONY                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NEC                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DAIKIN                                               2     2      0    2425
                                             18 BANK0      2     2      0
                              _putch
                  _recv_daikin_frame
                 _recv_daikin_reader
                        _recv_reader
 ---------------------------------------------------------------------------------
 (2) _recv_daikin_reader                                   4     4      0    2128
                                             14 BANK0      4     4      0
                           _bit_find
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (2) _recv_daikin_frame                                    4     4      0     205
                                              3 COMMON     4     4      0
                           _bit_find
                              _putch
 ---------------------------------------------------------------------------------
 (1) _AEHA                                                 0     0      0    2264
                             _printf
                              _putch
                          _recv_data
                        _recv_reader
 ---------------------------------------------------------------------------------
 (2) _recv_reader                                          3     3      0      48
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _recv_data                                            4     4      0     205
                                              3 COMMON     4     4      0
                           _bit_find
                              _putch
 ---------------------------------------------------------------------------------
 (3) _bit_find                                             3     3      0      48
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    1967
                                              0 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AEHA
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART_Write
     _putch
       _EUSART_Write
     _recv_data
       _bit_find
       _putch
         _EUSART_Write
     _recv_reader
   _DAIKIN
     _putch
       _EUSART_Write
     _recv_daikin_frame
       _bit_find
       _putch
         _EUSART_Write
     _recv_daikin_reader
       _bit_find
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
           _EUSART_Write
       _putch
         _EUSART_Write
     _recv_reader
   _NEC
   _SONY
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _detect_mode
     _getch
       _EUSART_Read
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART_Write
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     18      1F       6       38.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      2D      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun May 17 16:44:13 2020

                           recv_daikin_frame@a 0076                             recv_daikin_frame@i 0075  
                                  __CFG_CP$OFF 0000                                             l43 04D5  
                                           l60 0478                                             l70 045E  
                                           l64 0486                                             l82 044E  
                                           l67 0456                                             l85 0454  
                                           l88 0448                                            l112 0465  
                                          l202 06A4                                            l115 046A  
                                          l109 0477                                            l118 0438  
                                          l143 04B2                                            l232 049A  
                                          l241 0433                                            l235 0548  
                                          l261 04FB                                            l229 0732  
                                          l238 0434                                            l248 0624  
                                          l185 0442                                            l281 064F  
                                          l249 061F                                            l266 0577  
                                          l515 07F4                                            l275 0521  
                                          l284 0664                                            l188 043C  
                                          l801 05AB                                            l791 05E7  
                                          _NEC 0433                                            u610 05D3  
                                 __CFG_CPD$OFF 0000                                            u611 05D2  
                                          u700 047D                                            u605 05C5  
                                          u701 047C                                            u630 05E3  
                                          u710 0483                                            u631 05E2  
                                          u615 05CF                                            u711 0482  
                                          u640 057E                                            u560 045B  
                                          u720 073F                                            u800 064D  
                                          u625 05D9                                            u641 057D  
                                          u561 045A                                            u721 073E  
                                          u801 064C                                            u570 05B4  
                                          u730 076B                                            u810 0654  
                                          u571 05B3                                            u731 076A  
                                          u811 0653                                            u660 058E  
                                          u740 078F                                            u820 0661  
                                          u900 04FB                                            u661 058D  
                                          u741 078E                                            u821 0660  
                                          u805 0649                                            u901 04FA  
                                          u590 05C4                                            u670 0598  
                                          u750 079A                                            u910 0562  
                                          u830 046A                                            u591 05C3  
                                          u671 0597                                            u655 0582  
                                          u751 0799                                            u911 0561  
                                          u831 0469                                            u760 07A0  
                                          u840 05F8                                            u920 0510  
                                          u585 05B8                                            u761 079F  
                                          u745 078B                                            u825 065D  
                                          u841 05F7                                            u921 050F  
                                          u690 05A7                                            u770 07DF  
                                          u850 0605                                            u930 0516  
                                          u691 05A6                                            u675 0594  
                                          u771 07DE                                            u851 0604  
                                          u931 0515                                            u780 07F4  
                                          u860 061E                                            u940 0521  
                                          u685 059D                                            u781 07F3  
                                          u861 061D                                            u941 0520  
                                          u790 0635                                            u870 0624  
                                          u950 06E8                                            u791 0634  
                                          u871 0623                                            u855 0601  
                                          u951 06E7                                            u880 04EA  
                                          u960 06F8                                            u881 04E9  
                                          u865 061A                                            u961 06F7  
                                          u890 04F0                                            u970 0708  
                                          u891 04EF                                            u971 0707  
                                          u980 0718                                            u981 0717  
                                          u990 067C                                            u991 067B  
                          recv_daikin_reader@a 0030                            recv_daikin_reader@i 0031  
               ?_EUSART_SetFramingErrorHandler 0070                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
                                 ?_EUSART_Read 0070                                   __CFG_LVP$OFF 0000  
                                         ?_NEC 0070                                           l1501 0449  
                                         l1503 044F                                           l1511 047E  
                                         l1521 0739                                           l1505 0443  
                                         l1601 04D3                                           l1513 0483  
                                         l1451 043E                                           l1531 075C  
                                         l1523 073F                                           l1611 04A6  
                                         l1603 049B                                           l1515 0485  
                                         l1507 0478                                           l1461 05BC  
                                         l1453 05AC                                           l1541 0774  
                                         l1533 0763                                           l1525 0744  
                                         l1621 0462                                           l1613 04AB  
                                         l1605 049E                                           l1509 047D  
                                         l1701 06E8                                           l1471 05D8  
                                         l1463 05C0                                           l1455 05AE  
                                         l1447 0456                                           l1551 0790  
                                         l1535 0767                                           l1519 0733  
                                         l1631 05E8                                           l1623 0463  
                                         l1615 04AD                                           l1607 04A1  
                                         l1711 0702                                           l1703 06EF  
                                         l1473 05DD                                           l1465 05C4  
                                         l1457 05B4                                           l1481 057E  
                                         l1449 045B                                           l1561 07D1  
                                         l1553 079A                                           l1537 076B  
                                         l1529 0745                                           l1641 0606  
                                         l1633 05EB                                           l1617 04B0  
                                         l1609 04A3                                           l1625 0435  
                                         l1721 071F                                           l1713 0708  
                                         l1705 06F2                                           l1467 05D3  
                                         l1459 05B7                                           l1475 05E3  
                                         l1491 0598                                           l1483 0581  
                                         l1563 07D5                                           l1555 07A0  
                                         l1547 0776                                           l1539 076F  
                                         l1571 0630                                           l1651 04DF  
                                         l1643 0609                                           l1635 05F3  
                                         l1619 045F                                           l1627 0439  
                                         l1723 0722                                           l1715 070F  
                                         l1707 06F8                                           l1469 05D7  
                                         l1493 059C                                           l1485 0586  
                                         l1557 07A4                                           l1565 07DF  
                                         l1581 0654                                           l1573 0635  
                                         l1653 04E4                                           l1637 05F8  
                                         l1661 0549                                           l1741 0530  
                                         l1733 0522                                           l1725 0726  
                                         l1717 0712                                           l1709 06FF  
                                         l1495 05A1                                           l1487 058A  
                                         l1479 0578                                           l1559 07AA  
                                         l1583 0661                                           l1575 0638  
                                         l1567 0625                                           l1655 04EA  
                                         l1647 04D7                                           l1751 0492  
                                         l1671 0557                                           l1743 053D  
                                         l1735 0525                                           l1719 0718  
                                         l1727 0728                                           l1489 058E  
                                         l1497 05A7                                           l1577 064D  
                                         l1569 0628                                           l1657 04F1  
                                         l1649 04D9                                           l1681 04FF  
                                         l1673 055C                                           l1745 0540  
                                         l1737 0528                                           l1593 04B3  
                                         l1729 0730                                           l1761 0673  
                                         l1753 0665                                           l1659 04F5  
                                         l1683 0505                                           l1691 051B  
                                         l1675 0562                                           l1667 054B  
                                         l1747 0544                                           l1739 052C  
                                         l1595 04BE                                           l1771 068C  
                                         l1763 0677                                           l1755 0668  
                                         l1589 0663                                           l1749 0487  
                                         l1685 050A                                           l1677 056F  
                                         l1669 0552                                           l1597 04C5  
                                         l1693 046B                                           l1773 0690  
                                         l1781 06A4                                           l1765 067C  
                                         l1757 066A                                           l1687 0510  
                                         l1679 04FD                                           l1599 04CC  
                                         l1695 06C3                                           l1783 06AC  
                                         l1775 0696                                           l1767 0682  
                                         l1759 0671                                           l1689 0517  
                                         l1697 06DB                                           l1785 06BB  
                                         l1777 069A                                           l1769 0686  
                                         l1699 06E2                                           l1779 06A0  
                                         _AEHA 0487                                           STR_1 08D1  
                                         STR_2 083C                                           STR_3 087D  
                                         STR_4 085D                                           STR_5 080A  
                                         STR_6 08C4                                           STR_7 08A8  
                                         STR_8 0898                                           STR_9 08B6  
                                         u1000 0682                                           u1001 0681  
                                         u1010 068C                                           u1011 068B  
                                         u1020 0696                                           u1021 0695  
                                         u1030 06A0                                           u1031 069F  
                                         u1107 063D                                           u1047 0674  
                                         u1057 0536                                           u1067 0568  
                                         u1077 05F0                                           _LATA 010C  
                                         _LATB 010D                                           u1087 060E  
                                         u1097 062D                                           _PLLR 04D6  
                                         _SONY 0434                                           _WPUA 020C  
                                         _WPUB 020D                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           _main 0665  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                           start 0002  
                        recv_daikin_frame@size 0074                                  __CFG_MCLRE$ON 0000  
                                        ??_NEC 0070                                          ?_AEHA 0070  
                                __CFG_PLLEN$ON 0000                                          ?_SONY 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 000C  
                __end_of_OSCILLATOR_Initialize 046B                                          ?_main 0070  
                                        STR_10 085D                                          STR_11 0839  
                                        STR_12 08D7                                  __CFG_WDTE$OFF 0000  
                              __end_of___lwdiv 05E8                                __end_of___lwmod 05AC  
                              detect_mode@mode 002F                                          _RCREG 0199  
                            _recv_daikin_frame 04FC                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                           ?_recv_daikin_frame 0070                                          _getch 0439  
                              __end_of_dpowers 080A                                 _WDT_Initialize 0435  
                                        _putch 043D                            ??_recv_daikin_frame 0073  
                                        status 0003                                          wtemp0 007E  
                                 __end_of_AEHA 049B                                   __end_of_SONY 0435  
                              __initialization 07F5                                   __end_of_main 06C3  
                                       ??_AEHA 007E                                 ??_EUSART_Write 0070  
                                       ??_SONY 0070                                   ?_recv_reader 0070  
                    __end_of_recv_daikin_frame 0522                                         ??_main 0034  
                         __size_of_detect_mode 0070                         __end_of_WDT_Initialize 0439  
            _EUSART_DefaultFramingErrorHandler 0000                                         ?_getch 0070  
                   _EUSART_OverrunErrorHandler 003A                                         _DAIKIN 0522  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _BORCON 0116  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                             _recv_daikin_reader 0549  
                                       _WDTCON 0097                                 __CFG_PWRTE$OFF 0000  
                             __end_of_bit_find 0665                            ?_recv_daikin_reader 0070  
                               __CFG_STVREN$ON 0000                                      ??___lwdiv 0074  
                                    ??___lwmod 007C                                         _printf 0733  
                              ?_WDT_Initialize 0070                           ??_recv_daikin_reader 002E  
                         __size_of_EUSART_Read 000F                              _SYSTEM_Initialize 046B  
                      __end_of__initialization 07FD                             ?_SYSTEM_Initialize 0070  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0072  
                                __end_of_getch 043D                                  recv_data@size 0074  
                                __end_of_putch 0443                     __size_of_recv_daikin_frame 0026  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0072  
                                      ??_getch 0070                                        ?_DAIKIN 0070  
                    __end_of_SYSTEM_Initialize 0478                                        ??_putch 0071  
                                   __pbssBANK0 0038                           __end_of_EUSART_Write 045F  
                                   __pmaintext 0665                             __size_of_recv_data 0026  
                                      _BAUDCON 019F                                        _APFCON0 011D  
                                      _APFCON1 011E                                        ?_printf 0020  
                         __size_of_recv_reader 003D                                      ?_bit_find 0070  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0072  
                              __size_of_DAIKIN 0027                                        ___lwdiv 05AC  
                                      ___lwmod 0578                                        __ptext1 06C3  
                                      __ptext2 0439                                        __ptext3 0478  
                                      __ptext4 046B                                        __ptext5 0435  
                                      __ptext6 049B                                        __ptext7 045F  
                                      __ptext8 04B3                                        __ptext9 044F  
                              __size_of_printf 00C2                                   __size_of_NEC 0001  
                                      _dpowers 0800                          _OSCILLATOR_Initialize 045F  
                     ??_PIN_MANAGER_Initialize 0070                                     ??_bit_find 0070  
                            __end_of_recv_data 04FC                                        main@cnt 0036  
                   __size_of_SYSTEM_Initialize 000D                           end_of_initialization 07FD  
        __end_of_EUSART_SetOverrunErrorHandler 0455         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 044F                              _EUSART_Initialize 04B3  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                                      printf@c 002D                                        printf@f 0020  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
                                ??_detect_mode 002E                                      _PORTAbits 000C  
                             __CFG_FOSC$INTOSC 0000                          __size_of_EUSART_Write 000A  
              __size_of_EUSART_SetErrorHandler 0006                                 __end_of_DAIKIN 0549  
                    __end_of_EUSART_Initialize 04D6                                      _TXSTAbits 019E  
                   _EUSART_DefaultErrorHandler 0000                                   _EUSART_Write 0455  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_printf 07F5  
                          start_initialization 07F5                                    __end_of_NEC 0434  
              __size_of_PIN_MANAGER_Initialize 0018                    __size_of_recv_daikin_reader 002F  
                                ??_EUSART_Read 0070                            __end_of_detect_mode 0733  
                                     ??_DAIKIN 0032                 ?_EUSART_SetOverrunErrorHandler 0070  
                   _EUSART_FramingErrorHandler 003C                         _EUSART_SetErrorHandler 0443  
                                     ??_printf 0024                                      ___latbits 0001  
                                __pcstackBANK0 0020                              __size_of_bit_find 0040  
                   __size_of_EUSART_Initialize 0023                            __end_of_EUSART_Read 0487  
                                bit_find@width 0071                                     recv_data@a 0076  
                                   recv_data@i 0075                               ___lwdiv@dividend 0072  
                       _PIN_MANAGER_Initialize 049B                                       ?___lwdiv 0070  
                                     ?___lwmod 0078                               recv_reader@width 0071  
                                ??_recv_reader 0070                                    _detect_mode 06C3  
                             ___lwdiv@quotient 0075                                 __size_of_getch 0004  
                               __size_of_putch 0006                                      _recv_data 04D6  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATBbits 010D                              _eusartRxLastError 003E  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0072  
            _EUSART_DefaultOverrunErrorHandler 0000                                     printf@flag 0029  
                                   printf@prec 002A                            __end_of_recv_reader 0625  
                                  _EUSART_Read 0478                                     ?_recv_data 0070  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 0038  
                             __size_of___lwdiv 003C                               __size_of___lwmod 0034  
                              ___lwdiv@divisor 0070                                       _bit_find 0625  
                              ___lwdiv@counter 0077                                       __ptext10 0449  
                                     __ptext11 0443                                       __ptext20 0625  
                                     __ptext12 0434                                       __ptext21 0733  
                                     __ptext13 0433                                       __ptext22 043D  
                                     __ptext14 0522                                       __ptext23 0455  
                                     __ptext15 0549                                       __ptext24 0578  
                                     __ptext16 04FC                                       __ptext25 05AC  
                                     __ptext17 0487                                       __ptext18 05E8  
                                     __ptext19 04D6                                  __size_of_AEHA 0014  
                                __size_of_SONY 0001                                  __size_of_main 005E  
                      ?_EUSART_SetErrorHandler 0070  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
        __end_of_EUSART_SetFramingErrorHandler 044F         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0449                                      printf@val 002B  
                                     main@mode 0037                                    _recv_reader 05E8  
                                    putch@data 0071                     __end_of_recv_daikin_reader 0578  
                               __pstringtext10 08D7                                 __pstringtext11 0000  
                      __size_of_WDT_Initialize 0004                               ___lwmod@dividend 007A  
                                  ??_recv_data 0073                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0449                              __CFG_CLKOUTEN$OFF 0000  
                                     printf@ap 0028  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                                __pstringtext1 0800                                  __pstringtext2 083C  
                                __pstringtext3 085D                                  __pstringtext4 087D  
                                __pstringtext5 0898                                  __pstringtext6 08A8  
                                __pstringtext7 08B6                                  __pstringtext8 08C4  
                                __pstringtext9 08D1                                   ?_detect_mode 0070  
                              ___lwmod@divisor 0078                                ___lwmod@counter 007D  
                           EUSART_Write@txData 0070                 __end_of_PIN_MANAGER_Initialize 04B3  
